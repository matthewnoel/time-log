{"version":3,"file":"bundle.js","sources":["../../node_modules/svelte/src/internal/disclose-version.js","../../node_modules/svelte/src/version.js","../../node_modules/svelte/src/constants.js","../../node_modules/esm-env/false.js","../../node_modules/svelte/src/internal/client/constants.js","../../node_modules/svelte/src/internal/shared/utils.js","../../node_modules/svelte/src/internal/client/dom/task.js","../../node_modules/svelte/src/internal/client/reactivity/equality.js","../../node_modules/svelte/src/internal/flags/index.js","../../node_modules/svelte/src/internal/client/reactivity/sources.js","../../node_modules/svelte/src/internal/client/runtime.js","../../node_modules/svelte/src/internal/client/errors.js","../../node_modules/svelte/src/internal/client/reactivity/deriveds.js","../../node_modules/svelte/src/internal/client/proxy.js","../../node_modules/svelte/src/internal/client/dom/operations.js","../../node_modules/svelte/src/internal/client/reactivity/effects.js","../../node_modules/svelte/src/internal/shared/errors.js","../../node_modules/svelte/src/internal/client/context.js","../../node_modules/svelte/src/utils.js","../../node_modules/svelte/src/internal/client/dom/elements/misc.js","../../node_modules/svelte/src/internal/client/dom/elements/bindings/shared.js","../../node_modules/svelte/src/internal/client/dom/elements/events.js","../../node_modules/svelte/src/internal/client/dom/reconciler.js","../../node_modules/svelte/src/internal/client/dom/template.js","../../node_modules/svelte/src/internal/client/render.js","../../node_modules/svelte/src/internal/client/dom/blocks/if.js","../../node_modules/svelte/src/internal/client/dom/blocks/each.js","../../node_modules/svelte/src/internal/client/dom/hydration.js","../../node_modules/clsx/dist/clsx.mjs","../../node_modules/svelte/src/internal/shared/attributes.js","../../node_modules/svelte/src/internal/client/dom/elements/class.js","../../node_modules/svelte/src/internal/client/dom/elements/style.js","../../node_modules/svelte/src/internal/client/dom/elements/attributes.js","../../node_modules/svelte/src/internal/client/timing.js","../../node_modules/svelte/src/internal/client/loop.js","../../node_modules/svelte/src/internal/client/dom/elements/transitions.js","../../node_modules/svelte/src/internal/client/dom/elements/bindings/input.js","../../node_modules/svelte/src/internal/client/dom/legacy/lifecycle.js","../../node_modules/svelte/src/index-client.js","../../node_modules/svelte/src/store/utils.js","../../node_modules/svelte/src/store/shared/index.js","../../node_modules/svelte/src/internal/client/reactivity/store.js","../../node_modules/svelte/src/internal/client/reactivity/props.js","../../node_modules/svelte/src/transition/index.js","../../node_modules/svelte/src/easing/index.js","../../node_modules/svelte/src/animate/index.js","../../node_modules/@zerodevx/svelte-toast/dist/stores.js","../../node_modules/svelte/src/motion/utils.js","../../node_modules/svelte/src/motion/tweened.js","../../node_modules/@zerodevx/svelte-toast/dist/ToastItem.svelte","../../node_modules/svelte/src/internal/client/dom/blocks/svelte-component.js","../../node_modules/svelte/src/internal/client/dom/blocks/html.js","../../node_modules/@zerodevx/svelte-toast/dist/SvelteToast.svelte","../../src/App.svelte","../../src/main.js","../../node_modules/svelte/src/internal/client/dom/legacy/event-modifiers.js","../../node_modules/svelte/src/internal/client/dom/elements/actions.js","../../src/components/ThemeToggle.svelte"],"sourcesContent":["import { PUBLIC_VERSION } from '../version.js';\n\nif (typeof window !== 'undefined') {\n\t// @ts-expect-error\n\t((window.__svelte ??= {}).v ??= new Set()).add(PUBLIC_VERSION);\n}\n","// generated during release, do not modify\n\n/**\n * The current version, as set in package.json.\n * @type {string}\n */\nexport const VERSION = '5.23.0';\nexport const PUBLIC_VERSION = '5';\n","export const EACH_ITEM_REACTIVE = 1;\nexport const EACH_INDEX_REACTIVE = 1 << 1;\n/** See EachBlock interface metadata.is_controlled for an explanation what this is */\nexport const EACH_IS_CONTROLLED = 1 << 2;\nexport const EACH_IS_ANIMATED = 1 << 3;\nexport const EACH_ITEM_IMMUTABLE = 1 << 4;\n\nexport const PROPS_IS_IMMUTABLE = 1;\nexport const PROPS_IS_RUNES = 1 << 1;\nexport const PROPS_IS_UPDATED = 1 << 2;\nexport const PROPS_IS_BINDABLE = 1 << 3;\nexport const PROPS_IS_LAZY_INITIAL = 1 << 4;\n\nexport const TRANSITION_IN = 1;\nexport const TRANSITION_OUT = 1 << 1;\nexport const TRANSITION_GLOBAL = 1 << 2;\n\nexport const TEMPLATE_FRAGMENT = 1;\nexport const TEMPLATE_USE_IMPORT_NODE = 1 << 1;\n\nexport const HYDRATION_START = '[';\n/** used to indicate that an `{:else}...` block was rendered */\nexport const HYDRATION_START_ELSE = '[!';\nexport const HYDRATION_END = ']';\nexport const HYDRATION_ERROR = {};\n\nexport const ELEMENT_IS_NAMESPACED = 1;\nexport const ELEMENT_PRESERVE_ATTRIBUTE_CASE = 1 << 1;\n\nexport const UNINITIALIZED = Symbol();\n\n// Dev-time component properties\nexport const FILENAME = Symbol('filename');\nexport const HMR = Symbol('hmr');\n\nexport const NAMESPACE_HTML = 'http://www.w3.org/1999/xhtml';\nexport const NAMESPACE_SVG = 'http://www.w3.org/2000/svg';\nexport const NAMESPACE_MATHML = 'http://www.w3.org/1998/Math/MathML';\n\n// we use a list of ignorable runtime warnings because not every runtime warning\n// can be ignored and we want to keep the validation for svelte-ignore in place\nexport const IGNORABLE_RUNTIME_WARNINGS = /** @type {const} */ ([\n\t'state_snapshot_uncloneable',\n\t'binding_property_non_reactive',\n\t'hydration_attribute_changed',\n\t'hydration_html_changed',\n\t'ownership_invalid_binding',\n\t'ownership_invalid_mutation'\n]);\n\n/**\n * Whitespace inside one of these elements will not result in\n * a whitespace node being created in any circumstances. (This\n * list is almost certainly very incomplete)\n * TODO this is currently unused\n */\nexport const ELEMENTS_WITHOUT_TEXT = ['audio', 'datalist', 'dl', 'optgroup', 'select', 'video'];\n","export default false;\n","export const DERIVED = 1 << 1;\nexport const EFFECT = 1 << 2;\nexport const RENDER_EFFECT = 1 << 3;\nexport const BLOCK_EFFECT = 1 << 4;\nexport const BRANCH_EFFECT = 1 << 5;\nexport const ROOT_EFFECT = 1 << 6;\nexport const BOUNDARY_EFFECT = 1 << 7;\nexport const UNOWNED = 1 << 8;\nexport const DISCONNECTED = 1 << 9;\nexport const CLEAN = 1 << 10;\nexport const DIRTY = 1 << 11;\nexport const MAYBE_DIRTY = 1 << 12;\nexport const INERT = 1 << 13;\nexport const DESTROYED = 1 << 14;\nexport const EFFECT_RAN = 1 << 15;\n/** 'Transparent' effects do not create a transition boundary */\nexport const EFFECT_TRANSPARENT = 1 << 16;\n/** Svelte 4 legacy mode props need to be handled with deriveds and be recognized elsewhere, hence the dedicated flag */\nexport const LEGACY_DERIVED_PROP = 1 << 17;\nexport const INSPECT_EFFECT = 1 << 18;\nexport const HEAD_EFFECT = 1 << 19;\nexport const EFFECT_HAS_DERIVED = 1 << 20;\n\nexport const STATE_SYMBOL = Symbol('$state');\nexport const STATE_SYMBOL_METADATA = Symbol('$state metadata');\nexport const LEGACY_PROPS = Symbol('legacy props');\nexport const LOADING_ATTR_SYMBOL = Symbol('');\n","// Store the references to globals in case someone tries to monkey patch these, causing the below\n// to de-opt (this occurs often when using popular extensions).\nexport var is_array = Array.isArray;\nexport var index_of = Array.prototype.indexOf;\nexport var array_from = Array.from;\nexport var object_keys = Object.keys;\nexport var define_property = Object.defineProperty;\nexport var get_descriptor = Object.getOwnPropertyDescriptor;\nexport var get_descriptors = Object.getOwnPropertyDescriptors;\nexport var object_prototype = Object.prototype;\nexport var array_prototype = Array.prototype;\nexport var get_prototype_of = Object.getPrototypeOf;\n\n/**\n * @param {any} thing\n * @returns {thing is Function}\n */\nexport function is_function(thing) {\n\treturn typeof thing === 'function';\n}\n\nexport const noop = () => {};\n\n// Adapted from https://github.com/then/is-promise/blob/master/index.js\n// Distributed under MIT License https://github.com/then/is-promise/blob/master/LICENSE\n\n/**\n * @template [T=any]\n * @param {any} value\n * @returns {value is PromiseLike<T>}\n */\nexport function is_promise(value) {\n\treturn typeof value?.then === 'function';\n}\n\n/** @param {Function} fn */\nexport function run(fn) {\n\treturn fn();\n}\n\n/** @param {Array<() => void>} arr */\nexport function run_all(arr) {\n\tfor (var i = 0; i < arr.length; i++) {\n\t\tarr[i]();\n\t}\n}\n\n/**\n * TODO replace with Promise.withResolvers once supported widely enough\n * @template T\n */\nexport function deferred() {\n\t/** @type {(value: T) => void} */\n\tvar resolve;\n\n\t/** @type {(reason: any) => void} */\n\tvar reject;\n\n\t/** @type {Promise<T>} */\n\tvar promise = new Promise((res, rej) => {\n\t\tresolve = res;\n\t\treject = rej;\n\t});\n\n\t// @ts-expect-error\n\treturn { promise, resolve, reject };\n}\n\n/**\n * @template V\n * @param {V} value\n * @param {V | (() => V)} fallback\n * @param {boolean} [lazy]\n * @returns {V}\n */\nexport function fallback(value, fallback, lazy = false) {\n\treturn value === undefined\n\t\t? lazy\n\t\t\t? /** @type {() => V} */ (fallback)()\n\t\t\t: /** @type {V} */ (fallback)\n\t\t: value;\n}\n","import { run_all } from '../../shared/utils.js';\n\n// Fallback for when requestIdleCallback is not available\nconst request_idle_callback =\n\ttypeof requestIdleCallback === 'undefined'\n\t\t? (/** @type {() => void} */ cb) => setTimeout(cb, 1)\n\t\t: requestIdleCallback;\n\n/** @type {Array<() => void>} */\nlet micro_tasks = [];\n\n/** @type {Array<() => void>} */\nlet idle_tasks = [];\n\nfunction run_micro_tasks() {\n\tvar tasks = micro_tasks;\n\tmicro_tasks = [];\n\trun_all(tasks);\n}\n\nfunction run_idle_tasks() {\n\tvar tasks = idle_tasks;\n\tidle_tasks = [];\n\trun_all(tasks);\n}\n\n/**\n * @param {() => void} fn\n */\nexport function queue_micro_task(fn) {\n\tif (micro_tasks.length === 0) {\n\t\tqueueMicrotask(run_micro_tasks);\n\t}\n\n\tmicro_tasks.push(fn);\n}\n\n/**\n * @param {() => void} fn\n */\nexport function queue_idle_task(fn) {\n\tif (idle_tasks.length === 0) {\n\t\trequest_idle_callback(run_idle_tasks);\n\t}\n\n\tidle_tasks.push(fn);\n}\n\n/**\n * Synchronously run any queued tasks.\n */\nexport function flush_tasks() {\n\tif (micro_tasks.length > 0) {\n\t\trun_micro_tasks();\n\t}\n\n\tif (idle_tasks.length > 0) {\n\t\trun_idle_tasks();\n\t}\n}\n","/** @import { Equals } from '#client' */\n/** @type {Equals} */\nexport function equals(value) {\n\treturn value === this.v;\n}\n\n/**\n * @param {unknown} a\n * @param {unknown} b\n * @returns {boolean}\n */\nexport function safe_not_equal(a, b) {\n\treturn a != a\n\t\t? b == b\n\t\t: a !== b || (a !== null && typeof a === 'object') || typeof a === 'function';\n}\n\n/**\n * @param {unknown} a\n * @param {unknown} b\n * @returns {boolean}\n */\nexport function not_equal(a, b) {\n\treturn a !== b;\n}\n\n/** @type {Equals} */\nexport function safe_equals(value) {\n\treturn !safe_not_equal(value, this.v);\n}\n","export let legacy_mode_flag = false;\nexport let tracing_mode_flag = false;\n\nexport function enable_legacy_mode_flag() {\n\tlegacy_mode_flag = true;\n}\n\nexport function enable_tracing_mode_flag() {\n\ttracing_mode_flag = true;\n}\n","/** @import { Derived, Effect, Reaction, Source, Value } from '#client' */\nimport { DEV } from 'esm-env';\nimport {\n\tactive_reaction,\n\tactive_effect,\n\tuntracked_writes,\n\tget,\n\tschedule_effect,\n\tset_untracked_writes,\n\tset_signal_status,\n\tuntrack,\n\tincrement_write_version,\n\tupdate_effect,\n\tderived_sources,\n\tset_derived_sources,\n\tcheck_dirtiness,\n\tuntracking,\n\tis_destroying_effect\n} from '../runtime.js';\nimport { equals, safe_equals } from './equality.js';\nimport {\n\tCLEAN,\n\tDERIVED,\n\tDIRTY,\n\tBRANCH_EFFECT,\n\tINSPECT_EFFECT,\n\tUNOWNED,\n\tMAYBE_DIRTY,\n\tBLOCK_EFFECT,\n\tROOT_EFFECT\n} from '../constants.js';\nimport * as e from '../errors.js';\nimport { legacy_mode_flag, tracing_mode_flag } from '../../flags/index.js';\nimport { get_stack } from '../dev/tracing.js';\nimport { component_context, is_runes } from '../context.js';\n\nexport let inspect_effects = new Set();\nexport const old_values = new Map();\n\n/**\n * @param {Set<any>} v\n */\nexport function set_inspect_effects(v) {\n\tinspect_effects = v;\n}\n\n/**\n * @template V\n * @param {V} v\n * @param {Error | null} [stack]\n * @returns {Source<V>}\n */\nexport function source(v, stack) {\n\t/** @type {Value} */\n\tvar signal = {\n\t\tf: 0, // TODO ideally we could skip this altogether, but it causes type errors\n\t\tv,\n\t\treactions: null,\n\t\tequals,\n\t\trv: 0,\n\t\twv: 0\n\t};\n\n\tif (DEV && tracing_mode_flag) {\n\t\tsignal.created = stack ?? get_stack('CreatedAt');\n\t\tsignal.debug = null;\n\t}\n\n\treturn signal;\n}\n\n/**\n * @template V\n * @param {V} v\n */\nexport function state(v) {\n\treturn push_derived_source(source(v));\n}\n\n/**\n * @template V\n * @param {V} initial_value\n * @param {boolean} [immutable]\n * @returns {Source<V>}\n */\n/*#__NO_SIDE_EFFECTS__*/\nexport function mutable_source(initial_value, immutable = false) {\n\tconst s = source(initial_value);\n\tif (!immutable) {\n\t\ts.equals = safe_equals;\n\t}\n\n\t// bind the signal to the component context, in case we need to\n\t// track updates to trigger beforeUpdate/afterUpdate callbacks\n\tif (legacy_mode_flag && component_context !== null && component_context.l !== null) {\n\t\t(component_context.l.s ??= []).push(s);\n\t}\n\n\treturn s;\n}\n\n/**\n * @template V\n * @param {V} v\n * @param {boolean} [immutable]\n * @returns {Source<V>}\n */\nexport function mutable_state(v, immutable = false) {\n\treturn push_derived_source(mutable_source(v, immutable));\n}\n\n/**\n * @template V\n * @param {Source<V>} source\n */\n/*#__NO_SIDE_EFFECTS__*/\nfunction push_derived_source(source) {\n\tif (active_reaction !== null && !untracking && (active_reaction.f & DERIVED) !== 0) {\n\t\tif (derived_sources === null) {\n\t\t\tset_derived_sources([source]);\n\t\t} else {\n\t\t\tderived_sources.push(source);\n\t\t}\n\t}\n\n\treturn source;\n}\n\n/**\n * @template V\n * @param {Value<V>} source\n * @param {V} value\n */\nexport function mutate(source, value) {\n\tset(\n\t\tsource,\n\t\tuntrack(() => get(source))\n\t);\n\treturn value;\n}\n\n/**\n * @template V\n * @param {Source<V>} source\n * @param {V} value\n * @returns {V}\n */\nexport function set(source, value) {\n\tif (\n\t\tactive_reaction !== null &&\n\t\t!untracking &&\n\t\tis_runes() &&\n\t\t(active_reaction.f & (DERIVED | BLOCK_EFFECT)) !== 0 &&\n\t\t// If the source was created locally within the current derived, then\n\t\t// we allow the mutation.\n\t\t(derived_sources === null || !derived_sources.includes(source))\n\t) {\n\t\te.state_unsafe_mutation();\n\t}\n\n\treturn internal_set(source, value);\n}\n\n/**\n * @template V\n * @param {Source<V>} source\n * @param {V} value\n * @returns {V}\n */\nexport function internal_set(source, value) {\n\tif (!source.equals(value)) {\n\t\tvar old_value = source.v;\n\n\t\tif (is_destroying_effect) {\n\t\t\told_values.set(source, value);\n\t\t} else {\n\t\t\told_values.set(source, old_value);\n\t\t}\n\n\t\tsource.v = value;\n\t\tsource.wv = increment_write_version();\n\n\t\tif (DEV && tracing_mode_flag) {\n\t\t\tsource.updated = get_stack('UpdatedAt');\n\t\t\tif (active_effect != null) {\n\t\t\t\tsource.trace_need_increase = true;\n\t\t\t\tsource.trace_v ??= old_value;\n\t\t\t}\n\t\t}\n\n\t\tmark_reactions(source, DIRTY);\n\n\t\t// It's possible that the current reaction might not have up-to-date dependencies\n\t\t// whilst it's actively running. So in the case of ensuring it registers the reaction\n\t\t// properly for itself, we need to ensure the current effect actually gets\n\t\t// scheduled. i.e: `$effect(() => x++)`\n\t\tif (\n\t\t\tis_runes() &&\n\t\t\tactive_effect !== null &&\n\t\t\t(active_effect.f & CLEAN) !== 0 &&\n\t\t\t(active_effect.f & (BRANCH_EFFECT | ROOT_EFFECT)) === 0\n\t\t) {\n\t\t\tif (untracked_writes === null) {\n\t\t\t\tset_untracked_writes([source]);\n\t\t\t} else {\n\t\t\t\tuntracked_writes.push(source);\n\t\t\t}\n\t\t}\n\n\t\tif (DEV && inspect_effects.size > 0) {\n\t\t\tconst inspects = Array.from(inspect_effects);\n\n\t\t\tfor (const effect of inspects) {\n\t\t\t\t// Mark clean inspect-effects as maybe dirty and then check their dirtiness\n\t\t\t\t// instead of just updating the effects - this way we avoid overfiring.\n\t\t\t\tif ((effect.f & CLEAN) !== 0) {\n\t\t\t\t\tset_signal_status(effect, MAYBE_DIRTY);\n\t\t\t\t}\n\t\t\t\tif (check_dirtiness(effect)) {\n\t\t\t\t\tupdate_effect(effect);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tinspect_effects.clear();\n\t\t}\n\t}\n\n\treturn value;\n}\n\n/**\n * @template {number | bigint} T\n * @param {Source<T>} source\n * @param {1 | -1} [d]\n * @returns {T}\n */\nexport function update(source, d = 1) {\n\tvar value = get(source);\n\tvar result = d === 1 ? value++ : value--;\n\n\tset(source, value);\n\n\t// @ts-expect-error\n\treturn result;\n}\n\n/**\n * @template {number | bigint} T\n * @param {Source<T>} source\n * @param {1 | -1} [d]\n * @returns {T}\n */\nexport function update_pre(source, d = 1) {\n\tvar value = get(source);\n\n\t// @ts-expect-error\n\treturn set(source, d === 1 ? ++value : --value);\n}\n\n/**\n * @param {Value} signal\n * @param {number} status should be DIRTY or MAYBE_DIRTY\n * @returns {void}\n */\nfunction mark_reactions(signal, status) {\n\tvar reactions = signal.reactions;\n\tif (reactions === null) return;\n\n\tvar runes = is_runes();\n\tvar length = reactions.length;\n\n\tfor (var i = 0; i < length; i++) {\n\t\tvar reaction = reactions[i];\n\t\tvar flags = reaction.f;\n\n\t\t// Skip any effects that are already dirty\n\t\tif ((flags & DIRTY) !== 0) continue;\n\n\t\t// In legacy mode, skip the current effect to prevent infinite loops\n\t\tif (!runes && reaction === active_effect) continue;\n\n\t\t// Inspect effects need to run immediately, so that the stack trace makes sense\n\t\tif (DEV && (flags & INSPECT_EFFECT) !== 0) {\n\t\t\tinspect_effects.add(reaction);\n\t\t\tcontinue;\n\t\t}\n\n\t\tset_signal_status(reaction, status);\n\n\t\t// If the signal a) was previously clean or b) is an unowned derived, then mark it\n\t\tif ((flags & (CLEAN | UNOWNED)) !== 0) {\n\t\t\tif ((flags & DERIVED) !== 0) {\n\t\t\t\tmark_reactions(/** @type {Derived} */ (reaction), MAYBE_DIRTY);\n\t\t\t} else {\n\t\t\t\tschedule_effect(/** @type {Effect} */ (reaction));\n\t\t\t}\n\t\t}\n\t}\n}\n","/** @import { ComponentContext, Derived, Effect, Reaction, Signal, Source, Value } from '#client' */\nimport { DEV } from 'esm-env';\nimport { define_property, get_descriptors, get_prototype_of, index_of } from '../shared/utils.js';\nimport {\n\tdestroy_block_effect_children,\n\tdestroy_effect_children,\n\texecute_effect_teardown,\n\tunlink_effect\n} from './reactivity/effects.js';\nimport {\n\tEFFECT,\n\tDIRTY,\n\tMAYBE_DIRTY,\n\tCLEAN,\n\tDERIVED,\n\tUNOWNED,\n\tDESTROYED,\n\tINERT,\n\tBRANCH_EFFECT,\n\tSTATE_SYMBOL,\n\tBLOCK_EFFECT,\n\tROOT_EFFECT,\n\tLEGACY_DERIVED_PROP,\n\tDISCONNECTED,\n\tBOUNDARY_EFFECT\n} from './constants.js';\nimport { flush_tasks } from './dom/task.js';\nimport { internal_set, old_values } from './reactivity/sources.js';\nimport { destroy_derived_effects, update_derived } from './reactivity/deriveds.js';\nimport * as e from './errors.js';\nimport { FILENAME } from '../../constants.js';\nimport { tracing_mode_flag } from '../flags/index.js';\nimport { tracing_expressions, get_stack } from './dev/tracing.js';\nimport {\n\tcomponent_context,\n\tdev_current_component_function,\n\tis_runes,\n\tset_component_context,\n\tset_dev_current_component_function\n} from './context.js';\nimport { is_firefox } from './dom/operations.js';\n\n// Used for DEV time error handling\n/** @param {WeakSet<Error>} value */\nconst handled_errors = new WeakSet();\nlet is_throwing_error = false;\n\nlet is_flushing = false;\n\n/** @type {Effect | null} */\nlet last_scheduled_effect = null;\n\nlet is_updating_effect = false;\n\nexport let is_destroying_effect = false;\n\n/** @param {boolean} value */\nexport function set_is_destroying_effect(value) {\n\tis_destroying_effect = value;\n}\n\n// Handle effect queues\n\n/** @type {Effect[]} */\nlet queued_root_effects = [];\n\n/** @type {Effect[]} Stack of effects, dev only */\nlet dev_effect_stack = [];\n// Handle signal reactivity tree dependencies and reactions\n\n/** @type {null | Reaction} */\nexport let active_reaction = null;\n\nexport let untracking = false;\n\n/** @param {null | Reaction} reaction */\nexport function set_active_reaction(reaction) {\n\tactive_reaction = reaction;\n}\n\n/** @type {null | Effect} */\nexport let active_effect = null;\n\n/** @param {null | Effect} effect */\nexport function set_active_effect(effect) {\n\tactive_effect = effect;\n}\n\n/**\n * When sources are created within a derived, we record them so that we can safely allow\n * local mutations to these sources without the side-effect error being invoked unnecessarily.\n * @type {null | Source[]}\n */\nexport let derived_sources = null;\n\n/**\n * @param {Source[] | null} sources\n */\nexport function set_derived_sources(sources) {\n\tderived_sources = sources;\n}\n\n/**\n * The dependencies of the reaction that is currently being executed. In many cases,\n * the dependencies are unchanged between runs, and so this will be `null` unless\n * and until a new dependency is accessed — we track this via `skipped_deps`\n * @type {null | Value[]}\n */\nlet new_deps = null;\n\nlet skipped_deps = 0;\n\n/**\n * Tracks writes that the effect it's executed in doesn't listen to yet,\n * so that the dependency can be added to the effect later on if it then reads it\n * @type {null | Source[]}\n */\nexport let untracked_writes = null;\n\n/** @param {null | Source[]} value */\nexport function set_untracked_writes(value) {\n\tuntracked_writes = value;\n}\n\n/**\n * @type {number} Used by sources and deriveds for handling updates.\n * Version starts from 1 so that unowned deriveds differentiate between a created effect and a run one for tracing\n **/\nlet write_version = 1;\n\n/** @type {number} Used to version each read of a source of derived to avoid duplicating depedencies inside a reaction */\nlet read_version = 0;\n\n// If we are working with a get() chain that has no active container,\n// to prevent memory leaks, we skip adding the reaction.\nexport let skip_reaction = false;\n// Handle collecting all signals which are read during a specific time frame\n/** @type {Set<Value> | null} */\nexport let captured_signals = null;\n\n/** @param {Set<Value> | null} value */\nexport function set_captured_signals(value) {\n\tcaptured_signals = value;\n}\n\nexport function increment_write_version() {\n\treturn ++write_version;\n}\n\n/**\n * Determines whether a derived or effect is dirty.\n * If it is MAYBE_DIRTY, will set the status to CLEAN\n * @param {Reaction} reaction\n * @returns {boolean}\n */\nexport function check_dirtiness(reaction) {\n\tvar flags = reaction.f;\n\n\tif ((flags & DIRTY) !== 0) {\n\t\treturn true;\n\t}\n\n\tif ((flags & MAYBE_DIRTY) !== 0) {\n\t\tvar dependencies = reaction.deps;\n\t\tvar is_unowned = (flags & UNOWNED) !== 0;\n\n\t\tif (dependencies !== null) {\n\t\t\tvar i;\n\t\t\tvar dependency;\n\t\t\tvar is_disconnected = (flags & DISCONNECTED) !== 0;\n\t\t\tvar is_unowned_connected = is_unowned && active_effect !== null && !skip_reaction;\n\t\t\tvar length = dependencies.length;\n\n\t\t\t// If we are working with a disconnected or an unowned signal that is now connected (due to an active effect)\n\t\t\t// then we need to re-connect the reaction to the dependency\n\t\t\tif (is_disconnected || is_unowned_connected) {\n\t\t\t\tvar derived = /** @type {Derived} */ (reaction);\n\t\t\t\tvar parent = derived.parent;\n\n\t\t\t\tfor (i = 0; i < length; i++) {\n\t\t\t\t\tdependency = dependencies[i];\n\n\t\t\t\t\t// We always re-add all reactions (even duplicates) if the derived was\n\t\t\t\t\t// previously disconnected, however we don't if it was unowned as we\n\t\t\t\t\t// de-duplicate dependencies in that case\n\t\t\t\t\tif (is_disconnected || !dependency?.reactions?.includes(derived)) {\n\t\t\t\t\t\t(dependency.reactions ??= []).push(derived);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (is_disconnected) {\n\t\t\t\t\tderived.f ^= DISCONNECTED;\n\t\t\t\t}\n\t\t\t\t// If the unowned derived is now fully connected to the graph again (it's unowned and reconnected, has a parent\n\t\t\t\t// and the parent is not unowned), then we can mark it as connected again, removing the need for the unowned\n\t\t\t\t// flag\n\t\t\t\tif (is_unowned_connected && parent !== null && (parent.f & UNOWNED) === 0) {\n\t\t\t\t\tderived.f ^= UNOWNED;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tfor (i = 0; i < length; i++) {\n\t\t\t\tdependency = dependencies[i];\n\n\t\t\t\tif (check_dirtiness(/** @type {Derived} */ (dependency))) {\n\t\t\t\t\tupdate_derived(/** @type {Derived} */ (dependency));\n\t\t\t\t}\n\n\t\t\t\tif (dependency.wv > reaction.wv) {\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// Unowned signals should never be marked as clean unless they\n\t\t// are used within an active_effect without skip_reaction\n\t\tif (!is_unowned || (active_effect !== null && !skip_reaction)) {\n\t\t\tset_signal_status(reaction, CLEAN);\n\t\t}\n\t}\n\n\treturn false;\n}\n\n/**\n * @param {unknown} error\n * @param {Effect} effect\n */\nfunction propagate_error(error, effect) {\n\t/** @type {Effect | null} */\n\tvar current = effect;\n\n\twhile (current !== null) {\n\t\tif ((current.f & BOUNDARY_EFFECT) !== 0) {\n\t\t\ttry {\n\t\t\t\t// @ts-expect-error\n\t\t\t\tcurrent.fn(error);\n\t\t\t\treturn;\n\t\t\t} catch {\n\t\t\t\t// Remove boundary flag from effect\n\t\t\t\tcurrent.f ^= BOUNDARY_EFFECT;\n\t\t\t}\n\t\t}\n\n\t\tcurrent = current.parent;\n\t}\n\n\tis_throwing_error = false;\n\tthrow error;\n}\n\n/**\n * @param {Effect} effect\n */\nfunction should_rethrow_error(effect) {\n\treturn (\n\t\t(effect.f & DESTROYED) === 0 &&\n\t\t(effect.parent === null || (effect.parent.f & BOUNDARY_EFFECT) === 0)\n\t);\n}\n\nexport function reset_is_throwing_error() {\n\tis_throwing_error = false;\n}\n\n/**\n * @param {unknown} error\n * @param {Effect} effect\n * @param {Effect | null} previous_effect\n * @param {ComponentContext | null} component_context\n */\nexport function handle_error(error, effect, previous_effect, component_context) {\n\tif (is_throwing_error) {\n\t\tif (previous_effect === null) {\n\t\t\tis_throwing_error = false;\n\t\t}\n\n\t\tif (should_rethrow_error(effect)) {\n\t\t\tthrow error;\n\t\t}\n\n\t\treturn;\n\t}\n\n\tif (previous_effect !== null) {\n\t\tis_throwing_error = true;\n\t}\n\n\tif (\n\t\t!DEV ||\n\t\tcomponent_context === null ||\n\t\t!(error instanceof Error) ||\n\t\thandled_errors.has(error)\n\t) {\n\t\tpropagate_error(error, effect);\n\t\treturn;\n\t}\n\n\thandled_errors.add(error);\n\n\tconst component_stack = [];\n\n\tconst effect_name = effect.fn?.name;\n\n\tif (effect_name) {\n\t\tcomponent_stack.push(effect_name);\n\t}\n\n\t/** @type {ComponentContext | null} */\n\tlet current_context = component_context;\n\n\twhile (current_context !== null) {\n\t\tif (DEV) {\n\t\t\t/** @type {string} */\n\t\t\tvar filename = current_context.function?.[FILENAME];\n\n\t\t\tif (filename) {\n\t\t\t\tconst file = filename.split('/').pop();\n\t\t\t\tcomponent_stack.push(file);\n\t\t\t}\n\t\t}\n\n\t\tcurrent_context = current_context.p;\n\t}\n\n\tconst indent = is_firefox ? '  ' : '\\t';\n\tdefine_property(error, 'message', {\n\t\tvalue: error.message + `\\n${component_stack.map((name) => `\\n${indent}in ${name}`).join('')}\\n`\n\t});\n\tdefine_property(error, 'component_stack', {\n\t\tvalue: component_stack\n\t});\n\n\tconst stack = error.stack;\n\n\t// Filter out internal files from callstack\n\tif (stack) {\n\t\tconst lines = stack.split('\\n');\n\t\tconst new_lines = [];\n\t\tfor (let i = 0; i < lines.length; i++) {\n\t\t\tconst line = lines[i];\n\t\t\tif (line.includes('svelte/src/internal')) {\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tnew_lines.push(line);\n\t\t}\n\t\tdefine_property(error, 'stack', {\n\t\t\tvalue: new_lines.join('\\n')\n\t\t});\n\t}\n\n\tpropagate_error(error, effect);\n\n\tif (should_rethrow_error(effect)) {\n\t\tthrow error;\n\t}\n}\n\n/**\n * @param {Value} signal\n * @param {Effect} effect\n * @param {boolean} [root]\n */\nfunction schedule_possible_effect_self_invalidation(signal, effect, root = true) {\n\tvar reactions = signal.reactions;\n\tif (reactions === null) return;\n\n\tfor (var i = 0; i < reactions.length; i++) {\n\t\tvar reaction = reactions[i];\n\t\tif ((reaction.f & DERIVED) !== 0) {\n\t\t\tschedule_possible_effect_self_invalidation(/** @type {Derived} */ (reaction), effect, false);\n\t\t} else if (effect === reaction) {\n\t\t\tif (root) {\n\t\t\t\tset_signal_status(reaction, DIRTY);\n\t\t\t} else if ((reaction.f & CLEAN) !== 0) {\n\t\t\t\tset_signal_status(reaction, MAYBE_DIRTY);\n\t\t\t}\n\t\t\tschedule_effect(/** @type {Effect} */ (reaction));\n\t\t}\n\t}\n}\n\n/**\n * @template V\n * @param {Reaction} reaction\n * @returns {V}\n */\nexport function update_reaction(reaction) {\n\tvar previous_deps = new_deps;\n\tvar previous_skipped_deps = skipped_deps;\n\tvar previous_untracked_writes = untracked_writes;\n\tvar previous_reaction = active_reaction;\n\tvar previous_skip_reaction = skip_reaction;\n\tvar prev_derived_sources = derived_sources;\n\tvar previous_component_context = component_context;\n\tvar previous_untracking = untracking;\n\tvar flags = reaction.f;\n\n\tnew_deps = /** @type {null | Value[]} */ (null);\n\tskipped_deps = 0;\n\tuntracked_writes = null;\n\tskip_reaction =\n\t\t(flags & UNOWNED) !== 0 && (untracking || !is_updating_effect || active_reaction === null);\n\tactive_reaction = (flags & (BRANCH_EFFECT | ROOT_EFFECT)) === 0 ? reaction : null;\n\n\tderived_sources = null;\n\tset_component_context(reaction.ctx);\n\tuntracking = false;\n\tread_version++;\n\n\ttry {\n\t\tvar result = /** @type {Function} */ (0, reaction.fn)();\n\t\tvar deps = reaction.deps;\n\n\t\tif (new_deps !== null) {\n\t\t\tvar i;\n\n\t\t\tremove_reactions(reaction, skipped_deps);\n\n\t\t\tif (deps !== null && skipped_deps > 0) {\n\t\t\t\tdeps.length = skipped_deps + new_deps.length;\n\t\t\t\tfor (i = 0; i < new_deps.length; i++) {\n\t\t\t\t\tdeps[skipped_deps + i] = new_deps[i];\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\treaction.deps = deps = new_deps;\n\t\t\t}\n\n\t\t\tif (!skip_reaction) {\n\t\t\t\tfor (i = skipped_deps; i < deps.length; i++) {\n\t\t\t\t\t(deps[i].reactions ??= []).push(reaction);\n\t\t\t\t}\n\t\t\t}\n\t\t} else if (deps !== null && skipped_deps < deps.length) {\n\t\t\tremove_reactions(reaction, skipped_deps);\n\t\t\tdeps.length = skipped_deps;\n\t\t}\n\n\t\t// If we're inside an effect and we have untracked writes, then we need to\n\t\t// ensure that if any of those untracked writes result in re-invalidation\n\t\t// of the current effect, then that happens accordingly\n\t\tif (\n\t\t\tis_runes() &&\n\t\t\tuntracked_writes !== null &&\n\t\t\t!untracking &&\n\t\t\tdeps !== null &&\n\t\t\t(reaction.f & (DERIVED | MAYBE_DIRTY | DIRTY)) === 0\n\t\t) {\n\t\t\tfor (i = 0; i < /** @type {Source[]} */ (untracked_writes).length; i++) {\n\t\t\t\tschedule_possible_effect_self_invalidation(\n\t\t\t\t\tuntracked_writes[i],\n\t\t\t\t\t/** @type {Effect} */ (reaction)\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\n\t\t// If we are returning to an previous reaction then\n\t\t// we need to increment the read version to ensure that\n\t\t// any dependencies in this reaction aren't marked with\n\t\t// the same version\n\t\tif (previous_reaction !== null) {\n\t\t\tread_version++;\n\t\t}\n\n\t\treturn result;\n\t} finally {\n\t\tnew_deps = previous_deps;\n\t\tskipped_deps = previous_skipped_deps;\n\t\tuntracked_writes = previous_untracked_writes;\n\t\tactive_reaction = previous_reaction;\n\t\tskip_reaction = previous_skip_reaction;\n\t\tderived_sources = prev_derived_sources;\n\t\tset_component_context(previous_component_context);\n\t\tuntracking = previous_untracking;\n\t}\n}\n\n/**\n * @template V\n * @param {Reaction} signal\n * @param {Value<V>} dependency\n * @returns {void}\n */\nfunction remove_reaction(signal, dependency) {\n\tlet reactions = dependency.reactions;\n\tif (reactions !== null) {\n\t\tvar index = index_of.call(reactions, signal);\n\t\tif (index !== -1) {\n\t\t\tvar new_length = reactions.length - 1;\n\t\t\tif (new_length === 0) {\n\t\t\t\treactions = dependency.reactions = null;\n\t\t\t} else {\n\t\t\t\t// Swap with last element and then remove.\n\t\t\t\treactions[index] = reactions[new_length];\n\t\t\t\treactions.pop();\n\t\t\t}\n\t\t}\n\t}\n\t// If the derived has no reactions, then we can disconnect it from the graph,\n\t// allowing it to either reconnect in the future, or be GC'd by the VM.\n\tif (\n\t\treactions === null &&\n\t\t(dependency.f & DERIVED) !== 0 &&\n\t\t// Destroying a child effect while updating a parent effect can cause a dependency to appear\n\t\t// to be unused, when in fact it is used by the currently-updating parent. Checking `new_deps`\n\t\t// allows us to skip the expensive work of disconnecting and immediately reconnecting it\n\t\t(new_deps === null || !new_deps.includes(dependency))\n\t) {\n\t\tset_signal_status(dependency, MAYBE_DIRTY);\n\t\t// If we are working with a derived that is owned by an effect, then mark it as being\n\t\t// disconnected.\n\t\tif ((dependency.f & (UNOWNED | DISCONNECTED)) === 0) {\n\t\t\tdependency.f ^= DISCONNECTED;\n\t\t}\n\t\t// Disconnect any reactions owned by this reaction\n\t\tdestroy_derived_effects(/** @type {Derived} **/ (dependency));\n\t\tremove_reactions(/** @type {Derived} **/ (dependency), 0);\n\t}\n}\n\n/**\n * @param {Reaction} signal\n * @param {number} start_index\n * @returns {void}\n */\nexport function remove_reactions(signal, start_index) {\n\tvar dependencies = signal.deps;\n\tif (dependencies === null) return;\n\n\tfor (var i = start_index; i < dependencies.length; i++) {\n\t\tremove_reaction(signal, dependencies[i]);\n\t}\n}\n\n/**\n * @param {Effect} effect\n * @returns {void}\n */\nexport function update_effect(effect) {\n\tvar flags = effect.f;\n\n\tif ((flags & DESTROYED) !== 0) {\n\t\treturn;\n\t}\n\n\tset_signal_status(effect, CLEAN);\n\n\tvar previous_effect = active_effect;\n\tvar previous_component_context = component_context;\n\tvar was_updating_effect = is_updating_effect;\n\n\tactive_effect = effect;\n\tis_updating_effect = true;\n\n\tif (DEV) {\n\t\tvar previous_component_fn = dev_current_component_function;\n\t\tset_dev_current_component_function(effect.component_function);\n\t}\n\n\ttry {\n\t\tif ((flags & BLOCK_EFFECT) !== 0) {\n\t\t\tdestroy_block_effect_children(effect);\n\t\t} else {\n\t\t\tdestroy_effect_children(effect);\n\t\t}\n\n\t\texecute_effect_teardown(effect);\n\t\tvar teardown = update_reaction(effect);\n\t\teffect.teardown = typeof teardown === 'function' ? teardown : null;\n\t\teffect.wv = write_version;\n\n\t\tvar deps = effect.deps;\n\n\t\t// In DEV, we need to handle a case where $inspect.trace() might\n\t\t// incorrectly state a source dependency has not changed when it has.\n\t\t// That's beacuse that source was changed by the same effect, causing\n\t\t// the versions to match. We can avoid this by incrementing the version\n\t\tif (DEV && tracing_mode_flag && (effect.f & DIRTY) !== 0 && deps !== null) {\n\t\t\tfor (let i = 0; i < deps.length; i++) {\n\t\t\t\tvar dep = deps[i];\n\t\t\t\tif (dep.trace_need_increase) {\n\t\t\t\t\tdep.wv = increment_write_version();\n\t\t\t\t\tdep.trace_need_increase = undefined;\n\t\t\t\t\tdep.trace_v = undefined;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (DEV) {\n\t\t\tdev_effect_stack.push(effect);\n\t\t}\n\t} catch (error) {\n\t\thandle_error(error, effect, previous_effect, previous_component_context || effect.ctx);\n\t} finally {\n\t\tis_updating_effect = was_updating_effect;\n\t\tactive_effect = previous_effect;\n\n\t\tif (DEV) {\n\t\t\tset_dev_current_component_function(previous_component_fn);\n\t\t}\n\t}\n}\n\nfunction log_effect_stack() {\n\t// eslint-disable-next-line no-console\n\tconsole.error(\n\t\t'Last ten effects were: ',\n\t\tdev_effect_stack.slice(-10).map((d) => d.fn)\n\t);\n\tdev_effect_stack = [];\n}\n\nfunction infinite_loop_guard() {\n\ttry {\n\t\te.effect_update_depth_exceeded();\n\t} catch (error) {\n\t\tif (DEV) {\n\t\t\t// stack is garbage, ignore. Instead add a console.error message.\n\t\t\tdefine_property(error, 'stack', {\n\t\t\t\tvalue: ''\n\t\t\t});\n\t\t}\n\t\t// Try and handle the error so it can be caught at a boundary, that's\n\t\t// if there's an effect available from when it was last scheduled\n\t\tif (last_scheduled_effect !== null) {\n\t\t\tif (DEV) {\n\t\t\t\ttry {\n\t\t\t\t\thandle_error(error, last_scheduled_effect, null, null);\n\t\t\t\t} catch (e) {\n\t\t\t\t\t// Only log the effect stack if the error is re-thrown\n\t\t\t\t\tlog_effect_stack();\n\t\t\t\t\tthrow e;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\thandle_error(error, last_scheduled_effect, null, null);\n\t\t\t}\n\t\t} else {\n\t\t\tif (DEV) {\n\t\t\t\tlog_effect_stack();\n\t\t\t}\n\t\t\tthrow error;\n\t\t}\n\t}\n}\n\nfunction flush_queued_root_effects() {\n\tvar was_updating_effect = is_updating_effect;\n\n\ttry {\n\t\tvar flush_count = 0;\n\t\tis_updating_effect = true;\n\n\t\twhile (queued_root_effects.length > 0) {\n\t\t\tif (flush_count++ > 1000) {\n\t\t\t\tinfinite_loop_guard();\n\t\t\t}\n\n\t\t\tvar root_effects = queued_root_effects;\n\t\t\tvar length = root_effects.length;\n\n\t\t\tqueued_root_effects = [];\n\n\t\t\tfor (var i = 0; i < length; i++) {\n\t\t\t\tvar collected_effects = process_effects(root_effects[i]);\n\t\t\t\tflush_queued_effects(collected_effects);\n\t\t\t}\n\t\t}\n\t} finally {\n\t\tis_flushing = false;\n\t\tis_updating_effect = was_updating_effect;\n\n\t\tlast_scheduled_effect = null;\n\t\tif (DEV) {\n\t\t\tdev_effect_stack = [];\n\t\t}\n\t\told_values.clear();\n\t}\n}\n\n/**\n * @param {Array<Effect>} effects\n * @returns {void}\n */\nfunction flush_queued_effects(effects) {\n\tvar length = effects.length;\n\tif (length === 0) return;\n\n\tfor (var i = 0; i < length; i++) {\n\t\tvar effect = effects[i];\n\n\t\tif ((effect.f & (DESTROYED | INERT)) === 0) {\n\t\t\ttry {\n\t\t\t\tif (check_dirtiness(effect)) {\n\t\t\t\t\tupdate_effect(effect);\n\n\t\t\t\t\t// Effects with no dependencies or teardown do not get added to the effect tree.\n\t\t\t\t\t// Deferred effects (e.g. `$effect(...)`) _are_ added to the tree because we\n\t\t\t\t\t// don't know if we need to keep them until they are executed. Doing the check\n\t\t\t\t\t// here (rather than in `update_effect`) allows us to skip the work for\n\t\t\t\t\t// immediate effects.\n\t\t\t\t\tif (effect.deps === null && effect.first === null && effect.nodes_start === null) {\n\t\t\t\t\t\tif (effect.teardown === null) {\n\t\t\t\t\t\t\t// remove this effect from the graph\n\t\t\t\t\t\t\tunlink_effect(effect);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t// keep the effect in the graph, but free up some memory\n\t\t\t\t\t\t\teffect.fn = null;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} catch (error) {\n\t\t\t\thandle_error(error, effect, null, effect.ctx);\n\t\t\t}\n\t\t}\n\t}\n}\n\n/**\n * @param {Effect} signal\n * @returns {void}\n */\nexport function schedule_effect(signal) {\n\tif (!is_flushing) {\n\t\tis_flushing = true;\n\t\tqueueMicrotask(flush_queued_root_effects);\n\t}\n\n\tvar effect = (last_scheduled_effect = signal);\n\n\twhile (effect.parent !== null) {\n\t\teffect = effect.parent;\n\t\tvar flags = effect.f;\n\n\t\tif ((flags & (ROOT_EFFECT | BRANCH_EFFECT)) !== 0) {\n\t\t\tif ((flags & CLEAN) === 0) return;\n\t\t\teffect.f ^= CLEAN;\n\t\t}\n\t}\n\n\tqueued_root_effects.push(effect);\n}\n\n/**\n *\n * This function both runs render effects and collects user effects in topological order\n * from the starting effect passed in. Effects will be collected when they match the filtered\n * bitwise flag passed in only. The collected effects array will be populated with all the user\n * effects to be flushed.\n *\n * @param {Effect} root\n * @returns {Effect[]}\n */\nfunction process_effects(root) {\n\t/** @type {Effect[]} */\n\tvar effects = [];\n\n\t/** @type {Effect | null} */\n\tvar effect = root;\n\n\twhile (effect !== null) {\n\t\tvar flags = effect.f;\n\t\tvar is_branch = (flags & (BRANCH_EFFECT | ROOT_EFFECT)) !== 0;\n\t\tvar is_skippable_branch = is_branch && (flags & CLEAN) !== 0;\n\n\t\tif (!is_skippable_branch && (flags & INERT) === 0) {\n\t\t\tif ((flags & EFFECT) !== 0) {\n\t\t\t\teffects.push(effect);\n\t\t\t} else if (is_branch) {\n\t\t\t\teffect.f ^= CLEAN;\n\t\t\t} else {\n\t\t\t\t// Ensure we set the effect to be the active reaction\n\t\t\t\t// to ensure that unowned deriveds are correctly tracked\n\t\t\t\t// because we're flushing the current effect\n\t\t\t\tvar previous_active_reaction = active_reaction;\n\t\t\t\ttry {\n\t\t\t\t\tactive_reaction = effect;\n\t\t\t\t\tif (check_dirtiness(effect)) {\n\t\t\t\t\t\tupdate_effect(effect);\n\t\t\t\t\t}\n\t\t\t\t} catch (error) {\n\t\t\t\t\thandle_error(error, effect, null, effect.ctx);\n\t\t\t\t} finally {\n\t\t\t\t\tactive_reaction = previous_active_reaction;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t/** @type {Effect | null} */\n\t\t\tvar child = effect.first;\n\n\t\t\tif (child !== null) {\n\t\t\t\teffect = child;\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t}\n\n\t\tvar parent = effect.parent;\n\t\teffect = effect.next;\n\n\t\twhile (effect === null && parent !== null) {\n\t\t\teffect = parent.next;\n\t\t\tparent = parent.parent;\n\t\t}\n\t}\n\n\treturn effects;\n}\n\n/**\n * Synchronously flush any pending updates.\n * Returns void if no callback is provided, otherwise returns the result of calling the callback.\n * @template [T=void]\n * @param {(() => T) | undefined} [fn]\n * @returns {T}\n */\nexport function flushSync(fn) {\n\tvar result;\n\n\tif (fn) {\n\t\tis_flushing = true;\n\t\tflush_queued_root_effects();\n\t\tresult = fn();\n\t}\n\n\tflush_tasks();\n\n\twhile (queued_root_effects.length > 0) {\n\t\tis_flushing = true;\n\t\tflush_queued_root_effects();\n\t\tflush_tasks();\n\t}\n\n\treturn /** @type {T} */ (result);\n}\n\n/**\n * Returns a promise that resolves once any pending state changes have been applied.\n * @returns {Promise<void>}\n */\nexport async function tick() {\n\tawait Promise.resolve();\n\t// By calling flushSync we guarantee that any pending state changes are applied after one tick.\n\t// TODO look into whether we can make flushing subsequent updates synchronously in the future.\n\tflushSync();\n}\n\n/**\n * @template V\n * @param {Value<V>} signal\n * @returns {V}\n */\nexport function get(signal) {\n\tvar flags = signal.f;\n\tvar is_derived = (flags & DERIVED) !== 0;\n\n\tif (captured_signals !== null) {\n\t\tcaptured_signals.add(signal);\n\t}\n\n\t// Register the dependency on the current reaction signal.\n\tif (active_reaction !== null && !untracking) {\n\t\tif (derived_sources !== null && derived_sources.includes(signal)) {\n\t\t\te.state_unsafe_local_read();\n\t\t}\n\t\tvar deps = active_reaction.deps;\n\t\tif (signal.rv < read_version) {\n\t\t\tsignal.rv = read_version;\n\t\t\t// If the signal is accessing the same dependencies in the same\n\t\t\t// order as it did last time, increment `skipped_deps`\n\t\t\t// rather than updating `new_deps`, which creates GC cost\n\t\t\tif (new_deps === null && deps !== null && deps[skipped_deps] === signal) {\n\t\t\t\tskipped_deps++;\n\t\t\t} else if (new_deps === null) {\n\t\t\t\tnew_deps = [signal];\n\t\t\t} else if (!skip_reaction || !new_deps.includes(signal)) {\n\t\t\t\t// Normally we can push duplicated dependencies to `new_deps`, but if we're inside\n\t\t\t\t// an unowned derived because skip_reaction is true, then we need to ensure that\n\t\t\t\t// we don't have duplicates\n\t\t\t\tnew_deps.push(signal);\n\t\t\t}\n\t\t}\n\t} else if (\n\t\tis_derived &&\n\t\t/** @type {Derived} */ (signal).deps === null &&\n\t\t/** @type {Derived} */ (signal).effects === null\n\t) {\n\t\tvar derived = /** @type {Derived} */ (signal);\n\t\tvar parent = derived.parent;\n\n\t\tif (parent !== null && (parent.f & UNOWNED) === 0) {\n\t\t\t// If the derived is owned by another derived then mark it as unowned\n\t\t\t// as the derived value might have been referenced in a different context\n\t\t\t// since and thus its parent might not be its true owner anymore\n\t\t\tderived.f ^= UNOWNED;\n\t\t}\n\t}\n\n\tif (is_derived) {\n\t\tderived = /** @type {Derived} */ (signal);\n\n\t\tif (check_dirtiness(derived)) {\n\t\t\tupdate_derived(derived);\n\t\t}\n\t}\n\n\tif (\n\t\tDEV &&\n\t\ttracing_mode_flag &&\n\t\ttracing_expressions !== null &&\n\t\tactive_reaction !== null &&\n\t\ttracing_expressions.reaction === active_reaction\n\t) {\n\t\t// Used when mapping state between special blocks like `each`\n\t\tif (signal.debug) {\n\t\t\tsignal.debug();\n\t\t} else if (signal.created) {\n\t\t\tvar entry = tracing_expressions.entries.get(signal);\n\n\t\t\tif (entry === undefined) {\n\t\t\t\tentry = { read: [] };\n\t\t\t\ttracing_expressions.entries.set(signal, entry);\n\t\t\t}\n\n\t\t\tentry.read.push(get_stack('TracedAt'));\n\t\t}\n\t}\n\n\tif (is_destroying_effect && old_values.has(signal)) {\n\t\treturn old_values.get(signal);\n\t}\n\n\treturn signal.v;\n}\n\n/**\n * Like `get`, but checks for `undefined`. Used for `var` declarations because they can be accessed before being declared\n * @template V\n * @param {Value<V> | undefined} signal\n * @returns {V | undefined}\n */\nexport function safe_get(signal) {\n\treturn signal && get(signal);\n}\n\n/**\n * Capture an array of all the signals that are read when `fn` is called\n * @template T\n * @param {() => T} fn\n */\nfunction capture_signals(fn) {\n\tvar previous_captured_signals = captured_signals;\n\tcaptured_signals = new Set();\n\n\tvar captured = captured_signals;\n\tvar signal;\n\n\ttry {\n\t\tuntrack(fn);\n\t\tif (previous_captured_signals !== null) {\n\t\t\tfor (signal of captured_signals) {\n\t\t\t\tprevious_captured_signals.add(signal);\n\t\t\t}\n\t\t}\n\t} finally {\n\t\tcaptured_signals = previous_captured_signals;\n\t}\n\n\treturn captured;\n}\n\n/**\n * Invokes a function and captures all signals that are read during the invocation,\n * then invalidates them.\n * @param {() => any} fn\n */\nexport function invalidate_inner_signals(fn) {\n\tvar captured = capture_signals(() => untrack(fn));\n\n\tfor (var signal of captured) {\n\t\t// Go one level up because derived signals created as part of props in legacy mode\n\t\tif ((signal.f & LEGACY_DERIVED_PROP) !== 0) {\n\t\t\tfor (const dep of /** @type {Derived} */ (signal).deps || []) {\n\t\t\t\tif ((dep.f & DERIVED) === 0) {\n\t\t\t\t\t// Use internal_set instead of set here and below to avoid mutation validation\n\t\t\t\t\tinternal_set(dep, dep.v);\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\tinternal_set(signal, signal.v);\n\t\t}\n\t}\n}\n\n/**\n * When used inside a [`$derived`](https://svelte.dev/docs/svelte/$derived) or [`$effect`](https://svelte.dev/docs/svelte/$effect),\n * any state read inside `fn` will not be treated as a dependency.\n *\n * ```ts\n * $effect(() => {\n *   // this will run when `data` changes, but not when `time` changes\n *   save(data, {\n *     timestamp: untrack(() => time)\n *   });\n * });\n * ```\n * @template T\n * @param {() => T} fn\n * @returns {T}\n */\nexport function untrack(fn) {\n\tvar previous_untracking = untracking;\n\ttry {\n\t\tuntracking = true;\n\t\treturn fn();\n\t} finally {\n\t\tuntracking = previous_untracking;\n\t}\n}\n\nconst STATUS_MASK = ~(DIRTY | MAYBE_DIRTY | CLEAN);\n\n/**\n * @param {Signal} signal\n * @param {number} status\n * @returns {void}\n */\nexport function set_signal_status(signal, status) {\n\tsignal.f = (signal.f & STATUS_MASK) | status;\n}\n\n/**\n * @param {Record<string, unknown>} obj\n * @param {string[]} keys\n * @returns {Record<string, unknown>}\n */\nexport function exclude_from_object(obj, keys) {\n\t/** @type {Record<string, unknown>} */\n\tvar result = {};\n\n\tfor (var key in obj) {\n\t\tif (!keys.includes(key)) {\n\t\t\tresult[key] = obj[key];\n\t\t}\n\t}\n\n\treturn result;\n}\n\n/**\n * Possibly traverse an object and read all its properties so that they're all reactive in case this is `$state`.\n * Does only check first level of an object for performance reasons (heuristic should be good for 99% of all cases).\n * @param {any} value\n * @returns {void}\n */\nexport function deep_read_state(value) {\n\tif (typeof value !== 'object' || !value || value instanceof EventTarget) {\n\t\treturn;\n\t}\n\n\tif (STATE_SYMBOL in value) {\n\t\tdeep_read(value);\n\t} else if (!Array.isArray(value)) {\n\t\tfor (let key in value) {\n\t\t\tconst prop = value[key];\n\t\t\tif (typeof prop === 'object' && prop && STATE_SYMBOL in prop) {\n\t\t\t\tdeep_read(prop);\n\t\t\t}\n\t\t}\n\t}\n}\n\n/**\n * Deeply traverse an object and read all its properties\n * so that they're all reactive in case this is `$state`\n * @param {any} value\n * @param {Set<any>} visited\n * @returns {void}\n */\nexport function deep_read(value, visited = new Set()) {\n\tif (\n\t\ttypeof value === 'object' &&\n\t\tvalue !== null &&\n\t\t// We don't want to traverse DOM elements\n\t\t!(value instanceof EventTarget) &&\n\t\t!visited.has(value)\n\t) {\n\t\tvisited.add(value);\n\t\t// When working with a possible SvelteDate, this\n\t\t// will ensure we capture changes to it.\n\t\tif (value instanceof Date) {\n\t\t\tvalue.getTime();\n\t\t}\n\t\tfor (let key in value) {\n\t\t\ttry {\n\t\t\t\tdeep_read(value[key], visited);\n\t\t\t} catch (e) {\n\t\t\t\t// continue\n\t\t\t}\n\t\t}\n\t\tconst proto = get_prototype_of(value);\n\t\tif (\n\t\t\tproto !== Object.prototype &&\n\t\t\tproto !== Array.prototype &&\n\t\t\tproto !== Map.prototype &&\n\t\t\tproto !== Set.prototype &&\n\t\t\tproto !== Date.prototype\n\t\t) {\n\t\t\tconst descriptors = get_descriptors(proto);\n\t\t\tfor (let key in descriptors) {\n\t\t\t\tconst get = descriptors[key].get;\n\t\t\t\tif (get) {\n\t\t\t\t\ttry {\n\t\t\t\t\t\tget.call(value);\n\t\t\t\t\t} catch (e) {\n\t\t\t\t\t\t// continue\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}\n","/* This file is generated by scripts/process-messages/index.js. Do not edit! */\n\nimport { DEV } from 'esm-env';\n\n/**\n * Using `bind:value` together with a checkbox input is not allowed. Use `bind:checked` instead\n * @returns {never}\n */\nexport function bind_invalid_checkbox_value() {\n\tif (DEV) {\n\t\tconst error = new Error(`bind_invalid_checkbox_value\\nUsing \\`bind:value\\` together with a checkbox input is not allowed. Use \\`bind:checked\\` instead\\nhttps://svelte.dev/e/bind_invalid_checkbox_value`);\n\n\t\terror.name = 'Svelte error';\n\t\tthrow error;\n\t} else {\n\t\tthrow new Error(`https://svelte.dev/e/bind_invalid_checkbox_value`);\n\t}\n}\n\n/**\n * Component %component% has an export named `%key%` that a consumer component is trying to access using `bind:%key%`, which is disallowed. Instead, use `bind:this` (e.g. `<%name% bind:this={component} />`) and then access the property on the bound component instance (e.g. `component.%key%`)\n * @param {string} component\n * @param {string} key\n * @param {string} name\n * @returns {never}\n */\nexport function bind_invalid_export(component, key, name) {\n\tif (DEV) {\n\t\tconst error = new Error(`bind_invalid_export\\nComponent ${component} has an export named \\`${key}\\` that a consumer component is trying to access using \\`bind:${key}\\`, which is disallowed. Instead, use \\`bind:this\\` (e.g. \\`<${name} bind:this={component} />\\`) and then access the property on the bound component instance (e.g. \\`component.${key}\\`)\\nhttps://svelte.dev/e/bind_invalid_export`);\n\n\t\terror.name = 'Svelte error';\n\t\tthrow error;\n\t} else {\n\t\tthrow new Error(`https://svelte.dev/e/bind_invalid_export`);\n\t}\n}\n\n/**\n * A component is attempting to bind to a non-bindable property `%key%` belonging to %component% (i.e. `<%name% bind:%key%={...}>`). To mark a property as bindable: `let { %key% = $bindable() } = $props()`\n * @param {string} key\n * @param {string} component\n * @param {string} name\n * @returns {never}\n */\nexport function bind_not_bindable(key, component, name) {\n\tif (DEV) {\n\t\tconst error = new Error(`bind_not_bindable\\nA component is attempting to bind to a non-bindable property \\`${key}\\` belonging to ${component} (i.e. \\`<${name} bind:${key}={...}>\\`). To mark a property as bindable: \\`let { ${key} = $bindable() } = $props()\\`\\nhttps://svelte.dev/e/bind_not_bindable`);\n\n\t\terror.name = 'Svelte error';\n\t\tthrow error;\n\t} else {\n\t\tthrow new Error(`https://svelte.dev/e/bind_not_bindable`);\n\t}\n}\n\n/**\n * %parent% called `%method%` on an instance of %component%, which is no longer valid in Svelte 5\n * @param {string} parent\n * @param {string} method\n * @param {string} component\n * @returns {never}\n */\nexport function component_api_changed(parent, method, component) {\n\tif (DEV) {\n\t\tconst error = new Error(`component_api_changed\\n${parent} called \\`${method}\\` on an instance of ${component}, which is no longer valid in Svelte 5\\nhttps://svelte.dev/e/component_api_changed`);\n\n\t\terror.name = 'Svelte error';\n\t\tthrow error;\n\t} else {\n\t\tthrow new Error(`https://svelte.dev/e/component_api_changed`);\n\t}\n}\n\n/**\n * Attempted to instantiate %component% with `new %name%`, which is no longer valid in Svelte 5. If this component is not under your control, set the `compatibility.componentApi` compiler option to `4` to keep it working.\n * @param {string} component\n * @param {string} name\n * @returns {never}\n */\nexport function component_api_invalid_new(component, name) {\n\tif (DEV) {\n\t\tconst error = new Error(`component_api_invalid_new\\nAttempted to instantiate ${component} with \\`new ${name}\\`, which is no longer valid in Svelte 5. If this component is not under your control, set the \\`compatibility.componentApi\\` compiler option to \\`4\\` to keep it working.\\nhttps://svelte.dev/e/component_api_invalid_new`);\n\n\t\terror.name = 'Svelte error';\n\t\tthrow error;\n\t} else {\n\t\tthrow new Error(`https://svelte.dev/e/component_api_invalid_new`);\n\t}\n}\n\n/**\n * A derived value cannot reference itself recursively\n * @returns {never}\n */\nexport function derived_references_self() {\n\tif (DEV) {\n\t\tconst error = new Error(`derived_references_self\\nA derived value cannot reference itself recursively\\nhttps://svelte.dev/e/derived_references_self`);\n\n\t\terror.name = 'Svelte error';\n\t\tthrow error;\n\t} else {\n\t\tthrow new Error(`https://svelte.dev/e/derived_references_self`);\n\t}\n}\n\n/**\n * Keyed each block has duplicate key `%value%` at indexes %a% and %b%\n * @param {string} a\n * @param {string} b\n * @param {string | undefined | null} [value]\n * @returns {never}\n */\nexport function each_key_duplicate(a, b, value) {\n\tif (DEV) {\n\t\tconst error = new Error(`each_key_duplicate\\n${value ? `Keyed each block has duplicate key \\`${value}\\` at indexes ${a} and ${b}` : `Keyed each block has duplicate key at indexes ${a} and ${b}`}\\nhttps://svelte.dev/e/each_key_duplicate`);\n\n\t\terror.name = 'Svelte error';\n\t\tthrow error;\n\t} else {\n\t\tthrow new Error(`https://svelte.dev/e/each_key_duplicate`);\n\t}\n}\n\n/**\n * `%rune%` cannot be used inside an effect cleanup function\n * @param {string} rune\n * @returns {never}\n */\nexport function effect_in_teardown(rune) {\n\tif (DEV) {\n\t\tconst error = new Error(`effect_in_teardown\\n\\`${rune}\\` cannot be used inside an effect cleanup function\\nhttps://svelte.dev/e/effect_in_teardown`);\n\n\t\terror.name = 'Svelte error';\n\t\tthrow error;\n\t} else {\n\t\tthrow new Error(`https://svelte.dev/e/effect_in_teardown`);\n\t}\n}\n\n/**\n * Effect cannot be created inside a `$derived` value that was not itself created inside an effect\n * @returns {never}\n */\nexport function effect_in_unowned_derived() {\n\tif (DEV) {\n\t\tconst error = new Error(`effect_in_unowned_derived\\nEffect cannot be created inside a \\`$derived\\` value that was not itself created inside an effect\\nhttps://svelte.dev/e/effect_in_unowned_derived`);\n\n\t\terror.name = 'Svelte error';\n\t\tthrow error;\n\t} else {\n\t\tthrow new Error(`https://svelte.dev/e/effect_in_unowned_derived`);\n\t}\n}\n\n/**\n * `%rune%` can only be used inside an effect (e.g. during component initialisation)\n * @param {string} rune\n * @returns {never}\n */\nexport function effect_orphan(rune) {\n\tif (DEV) {\n\t\tconst error = new Error(`effect_orphan\\n\\`${rune}\\` can only be used inside an effect (e.g. during component initialisation)\\nhttps://svelte.dev/e/effect_orphan`);\n\n\t\terror.name = 'Svelte error';\n\t\tthrow error;\n\t} else {\n\t\tthrow new Error(`https://svelte.dev/e/effect_orphan`);\n\t}\n}\n\n/**\n * Maximum update depth exceeded. This can happen when a reactive block or effect repeatedly sets a new value. Svelte limits the number of nested updates to prevent infinite loops\n * @returns {never}\n */\nexport function effect_update_depth_exceeded() {\n\tif (DEV) {\n\t\tconst error = new Error(`effect_update_depth_exceeded\\nMaximum update depth exceeded. This can happen when a reactive block or effect repeatedly sets a new value. Svelte limits the number of nested updates to prevent infinite loops\\nhttps://svelte.dev/e/effect_update_depth_exceeded`);\n\n\t\terror.name = 'Svelte error';\n\t\tthrow error;\n\t} else {\n\t\tthrow new Error(`https://svelte.dev/e/effect_update_depth_exceeded`);\n\t}\n}\n\n/**\n * Failed to hydrate the application\n * @returns {never}\n */\nexport function hydration_failed() {\n\tif (DEV) {\n\t\tconst error = new Error(`hydration_failed\\nFailed to hydrate the application\\nhttps://svelte.dev/e/hydration_failed`);\n\n\t\terror.name = 'Svelte error';\n\t\tthrow error;\n\t} else {\n\t\tthrow new Error(`https://svelte.dev/e/hydration_failed`);\n\t}\n}\n\n/**\n * Could not `{@render}` snippet due to the expression being `null` or `undefined`. Consider using optional chaining `{@render snippet?.()}`\n * @returns {never}\n */\nexport function invalid_snippet() {\n\tif (DEV) {\n\t\tconst error = new Error(`invalid_snippet\\nCould not \\`{@render}\\` snippet due to the expression being \\`null\\` or \\`undefined\\`. Consider using optional chaining \\`{@render snippet?.()}\\`\\nhttps://svelte.dev/e/invalid_snippet`);\n\n\t\terror.name = 'Svelte error';\n\t\tthrow error;\n\t} else {\n\t\tthrow new Error(`https://svelte.dev/e/invalid_snippet`);\n\t}\n}\n\n/**\n * `%name%(...)` cannot be used in runes mode\n * @param {string} name\n * @returns {never}\n */\nexport function lifecycle_legacy_only(name) {\n\tif (DEV) {\n\t\tconst error = new Error(`lifecycle_legacy_only\\n\\`${name}(...)\\` cannot be used in runes mode\\nhttps://svelte.dev/e/lifecycle_legacy_only`);\n\n\t\terror.name = 'Svelte error';\n\t\tthrow error;\n\t} else {\n\t\tthrow new Error(`https://svelte.dev/e/lifecycle_legacy_only`);\n\t}\n}\n\n/**\n * Cannot do `bind:%key%={undefined}` when `%key%` has a fallback value\n * @param {string} key\n * @returns {never}\n */\nexport function props_invalid_value(key) {\n\tif (DEV) {\n\t\tconst error = new Error(`props_invalid_value\\nCannot do \\`bind:${key}={undefined}\\` when \\`${key}\\` has a fallback value\\nhttps://svelte.dev/e/props_invalid_value`);\n\n\t\terror.name = 'Svelte error';\n\t\tthrow error;\n\t} else {\n\t\tthrow new Error(`https://svelte.dev/e/props_invalid_value`);\n\t}\n}\n\n/**\n * Rest element properties of `$props()` such as `%property%` are readonly\n * @param {string} property\n * @returns {never}\n */\nexport function props_rest_readonly(property) {\n\tif (DEV) {\n\t\tconst error = new Error(`props_rest_readonly\\nRest element properties of \\`$props()\\` such as \\`${property}\\` are readonly\\nhttps://svelte.dev/e/props_rest_readonly`);\n\n\t\terror.name = 'Svelte error';\n\t\tthrow error;\n\t} else {\n\t\tthrow new Error(`https://svelte.dev/e/props_rest_readonly`);\n\t}\n}\n\n/**\n * The `%rune%` rune is only available inside `.svelte` and `.svelte.js/ts` files\n * @param {string} rune\n * @returns {never}\n */\nexport function rune_outside_svelte(rune) {\n\tif (DEV) {\n\t\tconst error = new Error(`rune_outside_svelte\\nThe \\`${rune}\\` rune is only available inside \\`.svelte\\` and \\`.svelte.js/ts\\` files\\nhttps://svelte.dev/e/rune_outside_svelte`);\n\n\t\terror.name = 'Svelte error';\n\t\tthrow error;\n\t} else {\n\t\tthrow new Error(`https://svelte.dev/e/rune_outside_svelte`);\n\t}\n}\n\n/**\n * Property descriptors defined on `$state` objects must contain `value` and always be `enumerable`, `configurable` and `writable`.\n * @returns {never}\n */\nexport function state_descriptors_fixed() {\n\tif (DEV) {\n\t\tconst error = new Error(`state_descriptors_fixed\\nProperty descriptors defined on \\`$state\\` objects must contain \\`value\\` and always be \\`enumerable\\`, \\`configurable\\` and \\`writable\\`.\\nhttps://svelte.dev/e/state_descriptors_fixed`);\n\n\t\terror.name = 'Svelte error';\n\t\tthrow error;\n\t} else {\n\t\tthrow new Error(`https://svelte.dev/e/state_descriptors_fixed`);\n\t}\n}\n\n/**\n * Cannot set prototype of `$state` object\n * @returns {never}\n */\nexport function state_prototype_fixed() {\n\tif (DEV) {\n\t\tconst error = new Error(`state_prototype_fixed\\nCannot set prototype of \\`$state\\` object\\nhttps://svelte.dev/e/state_prototype_fixed`);\n\n\t\terror.name = 'Svelte error';\n\t\tthrow error;\n\t} else {\n\t\tthrow new Error(`https://svelte.dev/e/state_prototype_fixed`);\n\t}\n}\n\n/**\n * Reading state that was created inside the same derived is forbidden. Consider using `untrack` to read locally created state\n * @returns {never}\n */\nexport function state_unsafe_local_read() {\n\tif (DEV) {\n\t\tconst error = new Error(`state_unsafe_local_read\\nReading state that was created inside the same derived is forbidden. Consider using \\`untrack\\` to read locally created state\\nhttps://svelte.dev/e/state_unsafe_local_read`);\n\n\t\terror.name = 'Svelte error';\n\t\tthrow error;\n\t} else {\n\t\tthrow new Error(`https://svelte.dev/e/state_unsafe_local_read`);\n\t}\n}\n\n/**\n * Updating state inside a derived or a template expression is forbidden. If the value should not be reactive, declare it without `$state`\n * @returns {never}\n */\nexport function state_unsafe_mutation() {\n\tif (DEV) {\n\t\tconst error = new Error(`state_unsafe_mutation\\nUpdating state inside a derived or a template expression is forbidden. If the value should not be reactive, declare it without \\`$state\\`\\nhttps://svelte.dev/e/state_unsafe_mutation`);\n\n\t\terror.name = 'Svelte error';\n\t\tthrow error;\n\t} else {\n\t\tthrow new Error(`https://svelte.dev/e/state_unsafe_mutation`);\n\t}\n}","/** @import { Derived, Effect } from '#client' */\nimport { DEV } from 'esm-env';\nimport { CLEAN, DERIVED, DIRTY, EFFECT_HAS_DERIVED, MAYBE_DIRTY, UNOWNED } from '../constants.js';\nimport {\n\tactive_reaction,\n\tactive_effect,\n\tset_signal_status,\n\tskip_reaction,\n\tupdate_reaction,\n\tincrement_write_version,\n\tset_active_effect\n} from '../runtime.js';\nimport { equals, safe_equals } from './equality.js';\nimport * as e from '../errors.js';\nimport { destroy_effect } from './effects.js';\nimport { inspect_effects, set_inspect_effects } from './sources.js';\nimport { get_stack } from '../dev/tracing.js';\nimport { tracing_mode_flag } from '../../flags/index.js';\nimport { component_context } from '../context.js';\n\n/**\n * @template V\n * @param {() => V} fn\n * @returns {Derived<V>}\n */\n/*#__NO_SIDE_EFFECTS__*/\nexport function derived(fn) {\n\tvar flags = DERIVED | DIRTY;\n\tvar parent_derived =\n\t\tactive_reaction !== null && (active_reaction.f & DERIVED) !== 0\n\t\t\t? /** @type {Derived} */ (active_reaction)\n\t\t\t: null;\n\n\tif (active_effect === null || (parent_derived !== null && (parent_derived.f & UNOWNED) !== 0)) {\n\t\tflags |= UNOWNED;\n\t} else {\n\t\t// Since deriveds are evaluated lazily, any effects created inside them are\n\t\t// created too late to ensure that the parent effect is added to the tree\n\t\tactive_effect.f |= EFFECT_HAS_DERIVED;\n\t}\n\n\t/** @type {Derived<V>} */\n\tconst signal = {\n\t\tctx: component_context,\n\t\tdeps: null,\n\t\teffects: null,\n\t\tequals,\n\t\tf: flags,\n\t\tfn,\n\t\treactions: null,\n\t\trv: 0,\n\t\tv: /** @type {V} */ (null),\n\t\twv: 0,\n\t\tparent: parent_derived ?? active_effect\n\t};\n\n\tif (DEV && tracing_mode_flag) {\n\t\tsignal.created = get_stack('CreatedAt');\n\t}\n\n\treturn signal;\n}\n\n/**\n * @template V\n * @param {() => V} fn\n * @returns {Derived<V>}\n */\n/*#__NO_SIDE_EFFECTS__*/\nexport function derived_safe_equal(fn) {\n\tconst signal = derived(fn);\n\tsignal.equals = safe_equals;\n\treturn signal;\n}\n\n/**\n * @param {Derived} derived\n * @returns {void}\n */\nexport function destroy_derived_effects(derived) {\n\tvar effects = derived.effects;\n\n\tif (effects !== null) {\n\t\tderived.effects = null;\n\n\t\tfor (var i = 0; i < effects.length; i += 1) {\n\t\t\tdestroy_effect(/** @type {Effect} */ (effects[i]));\n\t\t}\n\t}\n}\n\n/**\n * The currently updating deriveds, used to detect infinite recursion\n * in dev mode and provide a nicer error than 'too much recursion'\n * @type {Derived[]}\n */\nlet stack = [];\n\n/**\n * @param {Derived} derived\n * @returns {Effect | null}\n */\nfunction get_derived_parent_effect(derived) {\n\tvar parent = derived.parent;\n\twhile (parent !== null) {\n\t\tif ((parent.f & DERIVED) === 0) {\n\t\t\treturn /** @type {Effect} */ (parent);\n\t\t}\n\t\tparent = parent.parent;\n\t}\n\treturn null;\n}\n\n/**\n * @template T\n * @param {Derived} derived\n * @returns {T}\n */\nfunction execute_derived(derived) {\n\tvar value;\n\tvar prev_active_effect = active_effect;\n\n\tset_active_effect(get_derived_parent_effect(derived));\n\n\tif (DEV) {\n\t\tlet prev_inspect_effects = inspect_effects;\n\t\tset_inspect_effects(new Set());\n\t\ttry {\n\t\t\tif (stack.includes(derived)) {\n\t\t\t\te.derived_references_self();\n\t\t\t}\n\n\t\t\tstack.push(derived);\n\n\t\t\tdestroy_derived_effects(derived);\n\t\t\tvalue = update_reaction(derived);\n\t\t} finally {\n\t\t\tset_active_effect(prev_active_effect);\n\t\t\tset_inspect_effects(prev_inspect_effects);\n\t\t\tstack.pop();\n\t\t}\n\t} else {\n\t\ttry {\n\t\t\tdestroy_derived_effects(derived);\n\t\t\tvalue = update_reaction(derived);\n\t\t} finally {\n\t\t\tset_active_effect(prev_active_effect);\n\t\t}\n\t}\n\n\treturn value;\n}\n\n/**\n * @param {Derived} derived\n * @returns {void}\n */\nexport function update_derived(derived) {\n\tvar value = execute_derived(derived);\n\tvar status =\n\t\t(skip_reaction || (derived.f & UNOWNED) !== 0) && derived.deps !== null ? MAYBE_DIRTY : CLEAN;\n\n\tset_signal_status(derived, status);\n\n\tif (!derived.equals(value)) {\n\t\tderived.v = value;\n\t\tderived.wv = increment_write_version();\n\t}\n}\n","/** @import { ProxyMetadata, Source } from '#client' */\nimport { DEV } from 'esm-env';\nimport { get, active_effect } from './runtime.js';\nimport { component_context } from './context.js';\nimport {\n\tarray_prototype,\n\tget_descriptor,\n\tget_prototype_of,\n\tis_array,\n\tobject_prototype\n} from '../shared/utils.js';\nimport { check_ownership, widen_ownership } from './dev/ownership.js';\nimport { source, set } from './reactivity/sources.js';\nimport { STATE_SYMBOL, STATE_SYMBOL_METADATA } from './constants.js';\nimport { UNINITIALIZED } from '../../constants.js';\nimport * as e from './errors.js';\nimport { get_stack } from './dev/tracing.js';\nimport { tracing_mode_flag } from '../flags/index.js';\n\n/**\n * @template T\n * @param {T} value\n * @param {ProxyMetadata | null} [parent]\n * @param {Source<T>} [prev] dev mode only\n * @returns {T}\n */\nexport function proxy(value, parent = null, prev) {\n\t/** @type {Error | null} */\n\tvar stack = null;\n\tif (DEV && tracing_mode_flag) {\n\t\tstack = get_stack('CreatedAt');\n\t}\n\t// if non-proxyable, or is already a proxy, return `value`\n\tif (typeof value !== 'object' || value === null || STATE_SYMBOL in value) {\n\t\treturn value;\n\t}\n\n\tconst prototype = get_prototype_of(value);\n\n\tif (prototype !== object_prototype && prototype !== array_prototype) {\n\t\treturn value;\n\t}\n\n\t/** @type {Map<any, Source<any>>} */\n\tvar sources = new Map();\n\tvar is_proxied_array = is_array(value);\n\tvar version = source(0);\n\n\tif (is_proxied_array) {\n\t\t// We need to create the length source eagerly to ensure that\n\t\t// mutations to the array are properly synced with our proxy\n\t\tsources.set('length', source(/** @type {any[]} */ (value).length, stack));\n\t}\n\n\t/** @type {ProxyMetadata} */\n\tvar metadata;\n\n\tif (DEV) {\n\t\tmetadata = {\n\t\t\tparent,\n\t\t\towners: null\n\t\t};\n\n\t\tif (prev) {\n\t\t\t// Reuse owners from previous state; necessary because reassignment is not guaranteed to have correct component context.\n\t\t\t// If no previous proxy exists we play it safe and assume ownerless state\n\t\t\t// @ts-expect-error\n\t\t\tconst prev_owners = prev.v?.[STATE_SYMBOL_METADATA]?.owners;\n\t\t\tmetadata.owners = prev_owners ? new Set(prev_owners) : null;\n\t\t} else {\n\t\t\tmetadata.owners =\n\t\t\t\tparent === null\n\t\t\t\t\t? component_context !== null\n\t\t\t\t\t\t? new Set([component_context.function])\n\t\t\t\t\t\t: null\n\t\t\t\t\t: new Set();\n\t\t}\n\t}\n\n\treturn new Proxy(/** @type {any} */ (value), {\n\t\tdefineProperty(_, prop, descriptor) {\n\t\t\tif (\n\t\t\t\t!('value' in descriptor) ||\n\t\t\t\tdescriptor.configurable === false ||\n\t\t\t\tdescriptor.enumerable === false ||\n\t\t\t\tdescriptor.writable === false\n\t\t\t) {\n\t\t\t\t// we disallow non-basic descriptors, because unless they are applied to the\n\t\t\t\t// target object — which we avoid, so that state can be forked — we will run\n\t\t\t\t// afoul of the various invariants\n\t\t\t\t// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Proxy/Proxy/getOwnPropertyDescriptor#invariants\n\t\t\t\te.state_descriptors_fixed();\n\t\t\t}\n\n\t\t\tvar s = sources.get(prop);\n\n\t\t\tif (s === undefined) {\n\t\t\t\ts = source(descriptor.value, stack);\n\t\t\t\tsources.set(prop, s);\n\t\t\t} else {\n\t\t\t\tset(s, proxy(descriptor.value, metadata));\n\t\t\t}\n\n\t\t\treturn true;\n\t\t},\n\n\t\tdeleteProperty(target, prop) {\n\t\t\tvar s = sources.get(prop);\n\n\t\t\tif (s === undefined) {\n\t\t\t\tif (prop in target) {\n\t\t\t\t\tsources.set(prop, source(UNINITIALIZED, stack));\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t// When working with arrays, we need to also ensure we update the length when removing\n\t\t\t\t// an indexed property\n\t\t\t\tif (is_proxied_array && typeof prop === 'string') {\n\t\t\t\t\tvar ls = /** @type {Source<number>} */ (sources.get('length'));\n\t\t\t\t\tvar n = Number(prop);\n\n\t\t\t\t\tif (Number.isInteger(n) && n < ls.v) {\n\t\t\t\t\t\tset(ls, n);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tset(s, UNINITIALIZED);\n\t\t\t\tupdate_version(version);\n\t\t\t}\n\n\t\t\treturn true;\n\t\t},\n\n\t\tget(target, prop, receiver) {\n\t\t\tif (DEV && prop === STATE_SYMBOL_METADATA) {\n\t\t\t\treturn metadata;\n\t\t\t}\n\n\t\t\tif (prop === STATE_SYMBOL) {\n\t\t\t\treturn value;\n\t\t\t}\n\n\t\t\tvar s = sources.get(prop);\n\t\t\tvar exists = prop in target;\n\n\t\t\t// create a source, but only if it's an own property and not a prototype property\n\t\t\tif (s === undefined && (!exists || get_descriptor(target, prop)?.writable)) {\n\t\t\t\ts = source(proxy(exists ? target[prop] : UNINITIALIZED, metadata), stack);\n\t\t\t\tsources.set(prop, s);\n\t\t\t}\n\n\t\t\tif (s !== undefined) {\n\t\t\t\tvar v = get(s);\n\n\t\t\t\t// In case of something like `foo = bar.map(...)`, foo would have ownership\n\t\t\t\t// of the array itself, while the individual items would have ownership\n\t\t\t\t// of the component that created bar. That means if we later do `foo[0].baz = 42`,\n\t\t\t\t// we could get a false-positive ownership violation, since the two proxies\n\t\t\t\t// are not connected to each other via the parent metadata relationship.\n\t\t\t\t// For this reason, we need to widen the ownership of the children\n\t\t\t\t// upon access when we detect they are not connected.\n\t\t\t\tif (DEV) {\n\t\t\t\t\t/** @type {ProxyMetadata | undefined} */\n\t\t\t\t\tvar prop_metadata = v?.[STATE_SYMBOL_METADATA];\n\t\t\t\t\tif (prop_metadata && prop_metadata?.parent !== metadata) {\n\t\t\t\t\t\twiden_ownership(metadata, prop_metadata);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\treturn v === UNINITIALIZED ? undefined : v;\n\t\t\t}\n\n\t\t\treturn Reflect.get(target, prop, receiver);\n\t\t},\n\n\t\tgetOwnPropertyDescriptor(target, prop) {\n\t\t\tvar descriptor = Reflect.getOwnPropertyDescriptor(target, prop);\n\n\t\t\tif (descriptor && 'value' in descriptor) {\n\t\t\t\tvar s = sources.get(prop);\n\t\t\t\tif (s) descriptor.value = get(s);\n\t\t\t} else if (descriptor === undefined) {\n\t\t\t\tvar source = sources.get(prop);\n\t\t\t\tvar value = source?.v;\n\n\t\t\t\tif (source !== undefined && value !== UNINITIALIZED) {\n\t\t\t\t\treturn {\n\t\t\t\t\t\tenumerable: true,\n\t\t\t\t\t\tconfigurable: true,\n\t\t\t\t\t\tvalue,\n\t\t\t\t\t\twritable: true\n\t\t\t\t\t};\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn descriptor;\n\t\t},\n\n\t\thas(target, prop) {\n\t\t\tif (DEV && prop === STATE_SYMBOL_METADATA) {\n\t\t\t\treturn true;\n\t\t\t}\n\n\t\t\tif (prop === STATE_SYMBOL) {\n\t\t\t\treturn true;\n\t\t\t}\n\n\t\t\tvar s = sources.get(prop);\n\t\t\tvar has = (s !== undefined && s.v !== UNINITIALIZED) || Reflect.has(target, prop);\n\n\t\t\tif (\n\t\t\t\ts !== undefined ||\n\t\t\t\t(active_effect !== null && (!has || get_descriptor(target, prop)?.writable))\n\t\t\t) {\n\t\t\t\tif (s === undefined) {\n\t\t\t\t\ts = source(has ? proxy(target[prop], metadata) : UNINITIALIZED, stack);\n\t\t\t\t\tsources.set(prop, s);\n\t\t\t\t}\n\n\t\t\t\tvar value = get(s);\n\t\t\t\tif (value === UNINITIALIZED) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn has;\n\t\t},\n\n\t\tset(target, prop, value, receiver) {\n\t\t\tvar s = sources.get(prop);\n\t\t\tvar has = prop in target;\n\n\t\t\t// variable.length = value -> clear all signals with index >= value\n\t\t\tif (is_proxied_array && prop === 'length') {\n\t\t\t\tfor (var i = value; i < /** @type {Source<number>} */ (s).v; i += 1) {\n\t\t\t\t\tvar other_s = sources.get(i + '');\n\t\t\t\t\tif (other_s !== undefined) {\n\t\t\t\t\t\tset(other_s, UNINITIALIZED);\n\t\t\t\t\t} else if (i in target) {\n\t\t\t\t\t\t// If the item exists in the original, we need to create a uninitialized source,\n\t\t\t\t\t\t// else a later read of the property would result in a source being created with\n\t\t\t\t\t\t// the value of the original item at that index.\n\t\t\t\t\t\tother_s = source(UNINITIALIZED, stack);\n\t\t\t\t\t\tsources.set(i + '', other_s);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// If we haven't yet created a source for this property, we need to ensure\n\t\t\t// we do so otherwise if we read it later, then the write won't be tracked and\n\t\t\t// the heuristics of effects will be different vs if we had read the proxied\n\t\t\t// object property before writing to that property.\n\t\t\tif (s === undefined) {\n\t\t\t\tif (!has || get_descriptor(target, prop)?.writable) {\n\t\t\t\t\ts = source(undefined, stack);\n\t\t\t\t\tset(s, proxy(value, metadata));\n\t\t\t\t\tsources.set(prop, s);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\thas = s.v !== UNINITIALIZED;\n\t\t\t\tset(s, proxy(value, metadata));\n\t\t\t}\n\n\t\t\tif (DEV) {\n\t\t\t\t/** @type {ProxyMetadata | undefined} */\n\t\t\t\tvar prop_metadata = value?.[STATE_SYMBOL_METADATA];\n\t\t\t\tif (prop_metadata && prop_metadata?.parent !== metadata) {\n\t\t\t\t\twiden_ownership(metadata, prop_metadata);\n\t\t\t\t}\n\t\t\t\tcheck_ownership(metadata);\n\t\t\t}\n\n\t\t\tvar descriptor = Reflect.getOwnPropertyDescriptor(target, prop);\n\n\t\t\t// Set the new value before updating any signals so that any listeners get the new value\n\t\t\tif (descriptor?.set) {\n\t\t\t\tdescriptor.set.call(receiver, value);\n\t\t\t}\n\n\t\t\tif (!has) {\n\t\t\t\t// If we have mutated an array directly, we might need to\n\t\t\t\t// signal that length has also changed. Do it before updating metadata\n\t\t\t\t// to ensure that iterating over the array as a result of a metadata update\n\t\t\t\t// will not cause the length to be out of sync.\n\t\t\t\tif (is_proxied_array && typeof prop === 'string') {\n\t\t\t\t\tvar ls = /** @type {Source<number>} */ (sources.get('length'));\n\t\t\t\t\tvar n = Number(prop);\n\n\t\t\t\t\tif (Number.isInteger(n) && n >= ls.v) {\n\t\t\t\t\t\tset(ls, n + 1);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tupdate_version(version);\n\t\t\t}\n\n\t\t\treturn true;\n\t\t},\n\n\t\townKeys(target) {\n\t\t\tget(version);\n\n\t\t\tvar own_keys = Reflect.ownKeys(target).filter((key) => {\n\t\t\t\tvar source = sources.get(key);\n\t\t\t\treturn source === undefined || source.v !== UNINITIALIZED;\n\t\t\t});\n\n\t\t\tfor (var [key, source] of sources) {\n\t\t\t\tif (source.v !== UNINITIALIZED && !(key in target)) {\n\t\t\t\t\town_keys.push(key);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn own_keys;\n\t\t},\n\n\t\tsetPrototypeOf() {\n\t\t\te.state_prototype_fixed();\n\t\t}\n\t});\n}\n\n/**\n * @param {Source<number>} signal\n * @param {1 | -1} [d]\n */\nfunction update_version(signal, d = 1) {\n\tset(signal, signal.v + d);\n}\n\n/**\n * @param {any} value\n */\nexport function get_proxied_value(value) {\n\tif (value !== null && typeof value === 'object' && STATE_SYMBOL in value) {\n\t\treturn value[STATE_SYMBOL];\n\t}\n\n\treturn value;\n}\n\n/**\n * @param {any} a\n * @param {any} b\n */\nexport function is(a, b) {\n\treturn Object.is(get_proxied_value(a), get_proxied_value(b));\n}\n","/** @import { TemplateNode } from '#client' */\nimport { hydrate_node, hydrating, set_hydrate_node } from './hydration.js';\nimport { DEV } from 'esm-env';\nimport { init_array_prototype_warnings } from '../dev/equality.js';\nimport { get_descriptor } from '../../shared/utils.js';\n\n// export these for reference in the compiled code, making global name deduplication unnecessary\n/** @type {Window} */\nexport var $window;\n\n/** @type {Document} */\nexport var $document;\n\n/** @type {boolean} */\nexport var is_firefox;\n\n/** @type {() => Node | null} */\nvar first_child_getter;\n/** @type {() => Node | null} */\nvar next_sibling_getter;\n\n/**\n * Initialize these lazily to avoid issues when using the runtime in a server context\n * where these globals are not available while avoiding a separate server entry point\n */\nexport function init_operations() {\n\tif ($window !== undefined) {\n\t\treturn;\n\t}\n\n\t$window = window;\n\t$document = document;\n\tis_firefox = /Firefox/.test(navigator.userAgent);\n\n\tvar element_prototype = Element.prototype;\n\tvar node_prototype = Node.prototype;\n\n\t// @ts-ignore\n\tfirst_child_getter = get_descriptor(node_prototype, 'firstChild').get;\n\t// @ts-ignore\n\tnext_sibling_getter = get_descriptor(node_prototype, 'nextSibling').get;\n\n\t// the following assignments improve perf of lookups on DOM nodes\n\t// @ts-expect-error\n\telement_prototype.__click = undefined;\n\t// @ts-expect-error\n\telement_prototype.__className = undefined;\n\t// @ts-expect-error\n\telement_prototype.__attributes = null;\n\t// @ts-expect-error\n\telement_prototype.__style = undefined;\n\t// @ts-expect-error\n\telement_prototype.__e = undefined;\n\n\t// @ts-expect-error\n\tText.prototype.__t = undefined;\n\n\tif (DEV) {\n\t\t// @ts-expect-error\n\t\telement_prototype.__svelte_meta = null;\n\n\t\tinit_array_prototype_warnings();\n\t}\n}\n\n/**\n * @param {string} value\n * @returns {Text}\n */\nexport function create_text(value = '') {\n\treturn document.createTextNode(value);\n}\n\n/**\n * @template {Node} N\n * @param {N} node\n * @returns {Node | null}\n */\n/*@__NO_SIDE_EFFECTS__*/\nexport function get_first_child(node) {\n\treturn first_child_getter.call(node);\n}\n\n/**\n * @template {Node} N\n * @param {N} node\n * @returns {Node | null}\n */\n/*@__NO_SIDE_EFFECTS__*/\nexport function get_next_sibling(node) {\n\treturn next_sibling_getter.call(node);\n}\n\n/**\n * Don't mark this as side-effect-free, hydration needs to walk all nodes\n * @template {Node} N\n * @param {N} node\n * @param {boolean} is_text\n * @returns {Node | null}\n */\nexport function child(node, is_text) {\n\tif (!hydrating) {\n\t\treturn get_first_child(node);\n\t}\n\n\tvar child = /** @type {TemplateNode} */ (get_first_child(hydrate_node));\n\n\t// Child can be null if we have an element with a single child, like `<p>{text}</p>`, where `text` is empty\n\tif (child === null) {\n\t\tchild = hydrate_node.appendChild(create_text());\n\t} else if (is_text && child.nodeType !== 3) {\n\t\tvar text = create_text();\n\t\tchild?.before(text);\n\t\tset_hydrate_node(text);\n\t\treturn text;\n\t}\n\n\tset_hydrate_node(child);\n\treturn child;\n}\n\n/**\n * Don't mark this as side-effect-free, hydration needs to walk all nodes\n * @param {DocumentFragment | TemplateNode[]} fragment\n * @param {boolean} is_text\n * @returns {Node | null}\n */\nexport function first_child(fragment, is_text) {\n\tif (!hydrating) {\n\t\t// when not hydrating, `fragment` is a `DocumentFragment` (the result of calling `open_frag`)\n\t\tvar first = /** @type {DocumentFragment} */ (get_first_child(/** @type {Node} */ (fragment)));\n\n\t\t// TODO prevent user comments with the empty string when preserveComments is true\n\t\tif (first instanceof Comment && first.data === '') return get_next_sibling(first);\n\n\t\treturn first;\n\t}\n\n\t// if an {expression} is empty during SSR, there might be no\n\t// text node to hydrate — we must therefore create one\n\tif (is_text && hydrate_node?.nodeType !== 3) {\n\t\tvar text = create_text();\n\n\t\thydrate_node?.before(text);\n\t\tset_hydrate_node(text);\n\t\treturn text;\n\t}\n\n\treturn hydrate_node;\n}\n\n/**\n * Don't mark this as side-effect-free, hydration needs to walk all nodes\n * @param {TemplateNode} node\n * @param {number} count\n * @param {boolean} is_text\n * @returns {Node | null}\n */\nexport function sibling(node, count = 1, is_text = false) {\n\tlet next_sibling = hydrating ? hydrate_node : node;\n\tvar last_sibling;\n\n\twhile (count--) {\n\t\tlast_sibling = next_sibling;\n\t\tnext_sibling = /** @type {TemplateNode} */ (get_next_sibling(next_sibling));\n\t}\n\n\tif (!hydrating) {\n\t\treturn next_sibling;\n\t}\n\n\tvar type = next_sibling?.nodeType;\n\n\t// if a sibling {expression} is empty during SSR, there might be no\n\t// text node to hydrate — we must therefore create one\n\tif (is_text && type !== 3) {\n\t\tvar text = create_text();\n\t\t// If the next sibling is `null` and we're handling text then it's because\n\t\t// the SSR content was empty for the text, so we need to generate a new text\n\t\t// node and insert it after the last sibling\n\t\tif (next_sibling === null) {\n\t\t\tlast_sibling?.after(text);\n\t\t} else {\n\t\t\tnext_sibling.before(text);\n\t\t}\n\t\tset_hydrate_node(text);\n\t\treturn text;\n\t}\n\n\tset_hydrate_node(next_sibling);\n\treturn /** @type {TemplateNode} */ (next_sibling);\n}\n\n/**\n * @template {Node} N\n * @param {N} node\n * @returns {void}\n */\nexport function clear_text_content(node) {\n\tnode.textContent = '';\n}\n","/** @import { ComponentContext, ComponentContextLegacy, Derived, Effect, TemplateNode, TransitionManager } from '#client' */\nimport {\n\tcheck_dirtiness,\n\tactive_effect,\n\tactive_reaction,\n\tupdate_effect,\n\tget,\n\tis_destroying_effect,\n\tremove_reactions,\n\tschedule_effect,\n\tset_active_reaction,\n\tset_is_destroying_effect,\n\tset_signal_status,\n\tuntrack,\n\tuntracking\n} from '../runtime.js';\nimport {\n\tDIRTY,\n\tBRANCH_EFFECT,\n\tRENDER_EFFECT,\n\tEFFECT,\n\tDESTROYED,\n\tINERT,\n\tEFFECT_RAN,\n\tBLOCK_EFFECT,\n\tROOT_EFFECT,\n\tEFFECT_TRANSPARENT,\n\tDERIVED,\n\tUNOWNED,\n\tCLEAN,\n\tINSPECT_EFFECT,\n\tHEAD_EFFECT,\n\tMAYBE_DIRTY,\n\tEFFECT_HAS_DERIVED,\n\tBOUNDARY_EFFECT\n} from '../constants.js';\nimport { set } from './sources.js';\nimport * as e from '../errors.js';\nimport { DEV } from 'esm-env';\nimport { define_property } from '../../shared/utils.js';\nimport { get_next_sibling } from '../dom/operations.js';\nimport { derived } from './deriveds.js';\nimport { component_context, dev_current_component_function } from '../context.js';\n\n/**\n * @param {'$effect' | '$effect.pre' | '$inspect'} rune\n */\nexport function validate_effect(rune) {\n\tif (active_effect === null && active_reaction === null) {\n\t\te.effect_orphan(rune);\n\t}\n\n\tif (active_reaction !== null && (active_reaction.f & UNOWNED) !== 0 && active_effect === null) {\n\t\te.effect_in_unowned_derived();\n\t}\n\n\tif (is_destroying_effect) {\n\t\te.effect_in_teardown(rune);\n\t}\n}\n\n/**\n * @param {Effect} effect\n * @param {Effect} parent_effect\n */\nfunction push_effect(effect, parent_effect) {\n\tvar parent_last = parent_effect.last;\n\tif (parent_last === null) {\n\t\tparent_effect.last = parent_effect.first = effect;\n\t} else {\n\t\tparent_last.next = effect;\n\t\teffect.prev = parent_last;\n\t\tparent_effect.last = effect;\n\t}\n}\n\n/**\n * @param {number} type\n * @param {null | (() => void | (() => void))} fn\n * @param {boolean} sync\n * @param {boolean} push\n * @returns {Effect}\n */\nfunction create_effect(type, fn, sync, push = true) {\n\tvar parent = active_effect;\n\n\tif (DEV) {\n\t\t// Ensure the parent is never an inspect effect\n\t\twhile (parent !== null && (parent.f & INSPECT_EFFECT) !== 0) {\n\t\t\tparent = parent.parent;\n\t\t}\n\t}\n\n\t/** @type {Effect} */\n\tvar effect = {\n\t\tctx: component_context,\n\t\tdeps: null,\n\t\tnodes_start: null,\n\t\tnodes_end: null,\n\t\tf: type | DIRTY,\n\t\tfirst: null,\n\t\tfn,\n\t\tlast: null,\n\t\tnext: null,\n\t\tparent,\n\t\tprev: null,\n\t\tteardown: null,\n\t\ttransitions: null,\n\t\twv: 0\n\t};\n\n\tif (DEV) {\n\t\teffect.component_function = dev_current_component_function;\n\t}\n\n\tif (sync) {\n\t\ttry {\n\t\t\tupdate_effect(effect);\n\t\t\teffect.f |= EFFECT_RAN;\n\t\t} catch (e) {\n\t\t\tdestroy_effect(effect);\n\t\t\tthrow e;\n\t\t}\n\t} else if (fn !== null) {\n\t\tschedule_effect(effect);\n\t}\n\n\t// if an effect has no dependencies, no DOM and no teardown function,\n\t// don't bother adding it to the effect tree\n\tvar inert =\n\t\tsync &&\n\t\teffect.deps === null &&\n\t\teffect.first === null &&\n\t\teffect.nodes_start === null &&\n\t\teffect.teardown === null &&\n\t\t(effect.f & (EFFECT_HAS_DERIVED | BOUNDARY_EFFECT)) === 0;\n\n\tif (!inert && push) {\n\t\tif (parent !== null) {\n\t\t\tpush_effect(effect, parent);\n\t\t}\n\n\t\t// if we're in a derived, add the effect there too\n\t\tif (active_reaction !== null && (active_reaction.f & DERIVED) !== 0) {\n\t\t\tvar derived = /** @type {Derived} */ (active_reaction);\n\t\t\t(derived.effects ??= []).push(effect);\n\t\t}\n\t}\n\n\treturn effect;\n}\n\n/**\n * Internal representation of `$effect.tracking()`\n * @returns {boolean}\n */\nexport function effect_tracking() {\n\treturn active_reaction !== null && !untracking;\n}\n\n/**\n * @param {() => void} fn\n */\nexport function teardown(fn) {\n\tconst effect = create_effect(RENDER_EFFECT, null, false);\n\tset_signal_status(effect, CLEAN);\n\teffect.teardown = fn;\n\treturn effect;\n}\n\n/**\n * Internal representation of `$effect(...)`\n * @param {() => void | (() => void)} fn\n */\nexport function user_effect(fn) {\n\tvalidate_effect('$effect');\n\n\t// Non-nested `$effect(...)` in a component should be deferred\n\t// until the component is mounted\n\tvar defer =\n\t\tactive_effect !== null &&\n\t\t(active_effect.f & BRANCH_EFFECT) !== 0 &&\n\t\tcomponent_context !== null &&\n\t\t!component_context.m;\n\n\tif (DEV) {\n\t\tdefine_property(fn, 'name', {\n\t\t\tvalue: '$effect'\n\t\t});\n\t}\n\n\tif (defer) {\n\t\tvar context = /** @type {ComponentContext} */ (component_context);\n\t\t(context.e ??= []).push({\n\t\t\tfn,\n\t\t\teffect: active_effect,\n\t\t\treaction: active_reaction\n\t\t});\n\t} else {\n\t\tvar signal = effect(fn);\n\t\treturn signal;\n\t}\n}\n\n/**\n * Internal representation of `$effect.pre(...)`\n * @param {() => void | (() => void)} fn\n * @returns {Effect}\n */\nexport function user_pre_effect(fn) {\n\tvalidate_effect('$effect.pre');\n\tif (DEV) {\n\t\tdefine_property(fn, 'name', {\n\t\t\tvalue: '$effect.pre'\n\t\t});\n\t}\n\treturn render_effect(fn);\n}\n\n/** @param {() => void | (() => void)} fn */\nexport function inspect_effect(fn) {\n\treturn create_effect(INSPECT_EFFECT, fn, true);\n}\n\n/**\n * Internal representation of `$effect.root(...)`\n * @param {() => void | (() => void)} fn\n * @returns {() => void}\n */\nexport function effect_root(fn) {\n\tconst effect = create_effect(ROOT_EFFECT, fn, true);\n\n\treturn () => {\n\t\tdestroy_effect(effect);\n\t};\n}\n\n/**\n * An effect root whose children can transition out\n * @param {() => void} fn\n * @returns {(options?: { outro?: boolean }) => Promise<void>}\n */\nexport function component_root(fn) {\n\tconst effect = create_effect(ROOT_EFFECT, fn, true);\n\n\treturn (options = {}) => {\n\t\treturn new Promise((fulfil) => {\n\t\t\tif (options.outro) {\n\t\t\t\tpause_effect(effect, () => {\n\t\t\t\t\tdestroy_effect(effect);\n\t\t\t\t\tfulfil(undefined);\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tdestroy_effect(effect);\n\t\t\t\tfulfil(undefined);\n\t\t\t}\n\t\t});\n\t};\n}\n\n/**\n * @param {() => void | (() => void)} fn\n * @returns {Effect}\n */\nexport function effect(fn) {\n\treturn create_effect(EFFECT, fn, false);\n}\n\n/**\n * Internal representation of `$: ..`\n * @param {() => any} deps\n * @param {() => void | (() => void)} fn\n */\nexport function legacy_pre_effect(deps, fn) {\n\tvar context = /** @type {ComponentContextLegacy} */ (component_context);\n\n\t/** @type {{ effect: null | Effect, ran: boolean }} */\n\tvar token = { effect: null, ran: false };\n\tcontext.l.r1.push(token);\n\n\ttoken.effect = render_effect(() => {\n\t\tdeps();\n\n\t\t// If this legacy pre effect has already run before the end of the reset, then\n\t\t// bail out to emulate the same behavior.\n\t\tif (token.ran) return;\n\n\t\ttoken.ran = true;\n\t\tset(context.l.r2, true);\n\t\tuntrack(fn);\n\t});\n}\n\nexport function legacy_pre_effect_reset() {\n\tvar context = /** @type {ComponentContextLegacy} */ (component_context);\n\n\trender_effect(() => {\n\t\tif (!get(context.l.r2)) return;\n\n\t\t// Run dirty `$:` statements\n\t\tfor (var token of context.l.r1) {\n\t\t\tvar effect = token.effect;\n\n\t\t\t// If the effect is CLEAN, then make it MAYBE_DIRTY. This ensures we traverse through\n\t\t\t// the effects dependencies and correctly ensure each dependency is up-to-date.\n\t\t\tif ((effect.f & CLEAN) !== 0) {\n\t\t\t\tset_signal_status(effect, MAYBE_DIRTY);\n\t\t\t}\n\n\t\t\tif (check_dirtiness(effect)) {\n\t\t\t\tupdate_effect(effect);\n\t\t\t}\n\n\t\t\ttoken.ran = false;\n\t\t}\n\n\t\tcontext.l.r2.v = false; // set directly to avoid rerunning this effect\n\t});\n}\n\n/**\n * @param {() => void | (() => void)} fn\n * @returns {Effect}\n */\nexport function render_effect(fn) {\n\treturn create_effect(RENDER_EFFECT, fn, true);\n}\n\n/**\n * @param {(...expressions: any) => void | (() => void)} fn\n * @param {Array<() => any>} thunks\n * @returns {Effect}\n */\nexport function template_effect(fn, thunks = [], d = derived) {\n\tconst deriveds = thunks.map(d);\n\tconst effect = () => fn(...deriveds.map(get));\n\n\tif (DEV) {\n\t\tdefine_property(effect, 'name', {\n\t\t\tvalue: '{expression}'\n\t\t});\n\t}\n\n\treturn block(effect);\n}\n\n/**\n * @param {(() => void)} fn\n * @param {number} flags\n */\nexport function block(fn, flags = 0) {\n\treturn create_effect(RENDER_EFFECT | BLOCK_EFFECT | flags, fn, true);\n}\n\n/**\n * @param {(() => void)} fn\n * @param {boolean} [push]\n */\nexport function branch(fn, push = true) {\n\treturn create_effect(RENDER_EFFECT | BRANCH_EFFECT, fn, true, push);\n}\n\n/**\n * @param {Effect} effect\n */\nexport function execute_effect_teardown(effect) {\n\tvar teardown = effect.teardown;\n\tif (teardown !== null) {\n\t\tconst previously_destroying_effect = is_destroying_effect;\n\t\tconst previous_reaction = active_reaction;\n\t\tset_is_destroying_effect(true);\n\t\tset_active_reaction(null);\n\t\ttry {\n\t\t\tteardown.call(null);\n\t\t} finally {\n\t\t\tset_is_destroying_effect(previously_destroying_effect);\n\t\t\tset_active_reaction(previous_reaction);\n\t\t}\n\t}\n}\n\n/**\n * @param {Effect} signal\n * @param {boolean} remove_dom\n * @returns {void}\n */\nexport function destroy_effect_children(signal, remove_dom = false) {\n\tvar effect = signal.first;\n\tsignal.first = signal.last = null;\n\n\twhile (effect !== null) {\n\t\tvar next = effect.next;\n\n\t\tif ((effect.f & ROOT_EFFECT) !== 0) {\n\t\t\t// this is now an independent root\n\t\t\teffect.parent = null;\n\t\t} else {\n\t\t\tdestroy_effect(effect, remove_dom);\n\t\t}\n\n\t\teffect = next;\n\t}\n}\n\n/**\n * @param {Effect} signal\n * @returns {void}\n */\nexport function destroy_block_effect_children(signal) {\n\tvar effect = signal.first;\n\n\twhile (effect !== null) {\n\t\tvar next = effect.next;\n\t\tif ((effect.f & BRANCH_EFFECT) === 0) {\n\t\t\tdestroy_effect(effect);\n\t\t}\n\t\teffect = next;\n\t}\n}\n\n/**\n * @param {Effect} effect\n * @param {boolean} [remove_dom]\n * @returns {void}\n */\nexport function destroy_effect(effect, remove_dom = true) {\n\tvar removed = false;\n\n\tif ((remove_dom || (effect.f & HEAD_EFFECT) !== 0) && effect.nodes_start !== null) {\n\t\t/** @type {TemplateNode | null} */\n\t\tvar node = effect.nodes_start;\n\t\tvar end = effect.nodes_end;\n\n\t\twhile (node !== null) {\n\t\t\t/** @type {TemplateNode | null} */\n\t\t\tvar next = node === end ? null : /** @type {TemplateNode} */ (get_next_sibling(node));\n\n\t\t\tnode.remove();\n\t\t\tnode = next;\n\t\t}\n\n\t\tremoved = true;\n\t}\n\n\tdestroy_effect_children(effect, remove_dom && !removed);\n\tremove_reactions(effect, 0);\n\tset_signal_status(effect, DESTROYED);\n\n\tvar transitions = effect.transitions;\n\n\tif (transitions !== null) {\n\t\tfor (const transition of transitions) {\n\t\t\ttransition.stop();\n\t\t}\n\t}\n\n\texecute_effect_teardown(effect);\n\n\tvar parent = effect.parent;\n\n\t// If the parent doesn't have any children, then skip this work altogether\n\tif (parent !== null && parent.first !== null) {\n\t\tunlink_effect(effect);\n\t}\n\n\tif (DEV) {\n\t\teffect.component_function = null;\n\t}\n\n\t// `first` and `child` are nulled out in destroy_effect_children\n\t// we don't null out `parent` so that error propagation can work correctly\n\teffect.next =\n\t\teffect.prev =\n\t\teffect.teardown =\n\t\teffect.ctx =\n\t\teffect.deps =\n\t\teffect.fn =\n\t\teffect.nodes_start =\n\t\teffect.nodes_end =\n\t\t\tnull;\n}\n\n/**\n * Detach an effect from the effect tree, freeing up memory and\n * reducing the amount of work that happens on subsequent traversals\n * @param {Effect} effect\n */\nexport function unlink_effect(effect) {\n\tvar parent = effect.parent;\n\tvar prev = effect.prev;\n\tvar next = effect.next;\n\n\tif (prev !== null) prev.next = next;\n\tif (next !== null) next.prev = prev;\n\n\tif (parent !== null) {\n\t\tif (parent.first === effect) parent.first = next;\n\t\tif (parent.last === effect) parent.last = prev;\n\t}\n}\n\n/**\n * When a block effect is removed, we don't immediately destroy it or yank it\n * out of the DOM, because it might have transitions. Instead, we 'pause' it.\n * It stays around (in memory, and in the DOM) until outro transitions have\n * completed, and if the state change is reversed then we _resume_ it.\n * A paused effect does not update, and the DOM subtree becomes inert.\n * @param {Effect} effect\n * @param {() => void} [callback]\n */\nexport function pause_effect(effect, callback) {\n\t/** @type {TransitionManager[]} */\n\tvar transitions = [];\n\n\tpause_children(effect, transitions, true);\n\n\trun_out_transitions(transitions, () => {\n\t\tdestroy_effect(effect);\n\t\tif (callback) callback();\n\t});\n}\n\n/**\n * @param {TransitionManager[]} transitions\n * @param {() => void} fn\n */\nexport function run_out_transitions(transitions, fn) {\n\tvar remaining = transitions.length;\n\tif (remaining > 0) {\n\t\tvar check = () => --remaining || fn();\n\t\tfor (var transition of transitions) {\n\t\t\ttransition.out(check);\n\t\t}\n\t} else {\n\t\tfn();\n\t}\n}\n\n/**\n * @param {Effect} effect\n * @param {TransitionManager[]} transitions\n * @param {boolean} local\n */\nexport function pause_children(effect, transitions, local) {\n\tif ((effect.f & INERT) !== 0) return;\n\teffect.f ^= INERT;\n\n\tif (effect.transitions !== null) {\n\t\tfor (const transition of effect.transitions) {\n\t\t\tif (transition.is_global || local) {\n\t\t\t\ttransitions.push(transition);\n\t\t\t}\n\t\t}\n\t}\n\n\tvar child = effect.first;\n\n\twhile (child !== null) {\n\t\tvar sibling = child.next;\n\t\tvar transparent = (child.f & EFFECT_TRANSPARENT) !== 0 || (child.f & BRANCH_EFFECT) !== 0;\n\t\t// TODO we don't need to call pause_children recursively with a linked list in place\n\t\t// it's slightly more involved though as we have to account for `transparent` changing\n\t\t// through the tree.\n\t\tpause_children(child, transitions, transparent ? local : false);\n\t\tchild = sibling;\n\t}\n}\n\n/**\n * The opposite of `pause_effect`. We call this if (for example)\n * `x` becomes falsy then truthy: `{#if x}...{/if}`\n * @param {Effect} effect\n */\nexport function resume_effect(effect) {\n\tresume_children(effect, true);\n}\n\n/**\n * @param {Effect} effect\n * @param {boolean} local\n */\nfunction resume_children(effect, local) {\n\tif ((effect.f & INERT) === 0) return;\n\teffect.f ^= INERT;\n\n\t// Ensure the effect is marked as clean again so that any dirty child\n\t// effects can schedule themselves for execution\n\tif ((effect.f & CLEAN) === 0) {\n\t\teffect.f ^= CLEAN;\n\t}\n\n\t// If a dependency of this effect changed while it was paused,\n\t// schedule the effect to update\n\tif (check_dirtiness(effect)) {\n\t\tset_signal_status(effect, DIRTY);\n\t\tschedule_effect(effect);\n\t}\n\n\tvar child = effect.first;\n\n\twhile (child !== null) {\n\t\tvar sibling = child.next;\n\t\tvar transparent = (child.f & EFFECT_TRANSPARENT) !== 0 || (child.f & BRANCH_EFFECT) !== 0;\n\t\t// TODO we don't need to call resume_children recursively with a linked list in place\n\t\t// it's slightly more involved though as we have to account for `transparent` changing\n\t\t// through the tree.\n\t\tresume_children(child, transparent ? local : false);\n\t\tchild = sibling;\n\t}\n\n\tif (effect.transitions !== null) {\n\t\tfor (const transition of effect.transitions) {\n\t\t\tif (transition.is_global || local) {\n\t\t\t\ttransition.in();\n\t\t\t}\n\t\t}\n\t}\n}\n","/* This file is generated by scripts/process-messages/index.js. Do not edit! */\n\nimport { DEV } from 'esm-env';\n\n/**\n * Cannot use `{@render children(...)}` if the parent component uses `let:` directives. Consider using a named snippet instead\n * @returns {never}\n */\nexport function invalid_default_snippet() {\n\tif (DEV) {\n\t\tconst error = new Error(`invalid_default_snippet\\nCannot use \\`{@render children(...)}\\` if the parent component uses \\`let:\\` directives. Consider using a named snippet instead\\nhttps://svelte.dev/e/invalid_default_snippet`);\n\n\t\terror.name = 'Svelte error';\n\t\tthrow error;\n\t} else {\n\t\tthrow new Error(`https://svelte.dev/e/invalid_default_snippet`);\n\t}\n}\n\n/**\n * `%name%(...)` can only be used during component initialisation\n * @param {string} name\n * @returns {never}\n */\nexport function lifecycle_outside_component(name) {\n\tif (DEV) {\n\t\tconst error = new Error(`lifecycle_outside_component\\n\\`${name}(...)\\` can only be used during component initialisation\\nhttps://svelte.dev/e/lifecycle_outside_component`);\n\n\t\terror.name = 'Svelte error';\n\t\tthrow error;\n\t} else {\n\t\tthrow new Error(`https://svelte.dev/e/lifecycle_outside_component`);\n\t}\n}\n\n/**\n * `%name%` is not a store with a `subscribe` method\n * @param {string} name\n * @returns {never}\n */\nexport function store_invalid_shape(name) {\n\tif (DEV) {\n\t\tconst error = new Error(`store_invalid_shape\\n\\`${name}\\` is not a store with a \\`subscribe\\` method\\nhttps://svelte.dev/e/store_invalid_shape`);\n\n\t\terror.name = 'Svelte error';\n\t\tthrow error;\n\t} else {\n\t\tthrow new Error(`https://svelte.dev/e/store_invalid_shape`);\n\t}\n}\n\n/**\n * The `this` prop on `<svelte:element>` must be a string, if defined\n * @returns {never}\n */\nexport function svelte_element_invalid_this_value() {\n\tif (DEV) {\n\t\tconst error = new Error(`svelte_element_invalid_this_value\\nThe \\`this\\` prop on \\`<svelte:element>\\` must be a string, if defined\\nhttps://svelte.dev/e/svelte_element_invalid_this_value`);\n\n\t\terror.name = 'Svelte error';\n\t\tthrow error;\n\t} else {\n\t\tthrow new Error(`https://svelte.dev/e/svelte_element_invalid_this_value`);\n\t}\n}","/** @import { ComponentContext } from '#client' */\n\nimport { DEV } from 'esm-env';\nimport { add_owner } from './dev/ownership.js';\nimport { lifecycle_outside_component } from '../shared/errors.js';\nimport { source } from './reactivity/sources.js';\nimport {\n\tactive_effect,\n\tactive_reaction,\n\tset_active_effect,\n\tset_active_reaction,\n\tuntrack\n} from './runtime.js';\nimport { effect, teardown } from './reactivity/effects.js';\nimport { legacy_mode_flag } from '../flags/index.js';\n\n/** @type {ComponentContext | null} */\nexport let component_context = null;\n\n/** @param {ComponentContext | null} context */\nexport function set_component_context(context) {\n\tcomponent_context = context;\n}\n\n/**\n * The current component function. Different from current component context:\n * ```html\n * <!-- App.svelte -->\n * <Foo>\n *   <Bar /> <!-- context == Foo.svelte, function == App.svelte -->\n * </Foo>\n * ```\n * @type {ComponentContext['function']}\n */\nexport let dev_current_component_function = null;\n\n/** @param {ComponentContext['function']} fn */\nexport function set_dev_current_component_function(fn) {\n\tdev_current_component_function = fn;\n}\n\n/**\n * Retrieves the context that belongs to the closest parent component with the specified `key`.\n * Must be called during component initialisation.\n *\n * @template T\n * @param {any} key\n * @returns {T}\n */\nexport function getContext(key) {\n\tconst context_map = get_or_init_context_map('getContext');\n\tconst result = /** @type {T} */ (context_map.get(key));\n\treturn result;\n}\n\n/**\n * Associates an arbitrary `context` object with the current component and the specified `key`\n * and returns that object. The context is then available to children of the component\n * (including slotted content) with `getContext`.\n *\n * Like lifecycle functions, this must be called during component initialisation.\n *\n * @template T\n * @param {any} key\n * @param {T} context\n * @returns {T}\n */\nexport function setContext(key, context) {\n\tconst context_map = get_or_init_context_map('setContext');\n\n\tif (DEV) {\n\t\t// When state is put into context, we treat as if it's global from now on.\n\t\t// We do for performance reasons (it's for example very expensive to call\n\t\t// getContext on a big object many times when part of a list component)\n\t\t// and danger of false positives.\n\t\tuntrack(() => add_owner(context, null, true));\n\t}\n\n\tcontext_map.set(key, context);\n\treturn context;\n}\n\n/**\n * Checks whether a given `key` has been set in the context of a parent component.\n * Must be called during component initialisation.\n *\n * @param {any} key\n * @returns {boolean}\n */\nexport function hasContext(key) {\n\tconst context_map = get_or_init_context_map('hasContext');\n\treturn context_map.has(key);\n}\n\n/**\n * Retrieves the whole context map that belongs to the closest parent component.\n * Must be called during component initialisation. Useful, for example, if you\n * programmatically create a component and want to pass the existing context to it.\n *\n * @template {Map<any, any>} [T=Map<any, any>]\n * @returns {T}\n */\nexport function getAllContexts() {\n\tconst context_map = get_or_init_context_map('getAllContexts');\n\treturn /** @type {T} */ (context_map);\n}\n\n/**\n * @param {Record<string, unknown>} props\n * @param {any} runes\n * @param {Function} [fn]\n * @returns {void}\n */\nexport function push(props, runes = false, fn) {\n\tvar ctx = (component_context = {\n\t\tp: component_context,\n\t\tc: null,\n\t\td: false,\n\t\te: null,\n\t\tm: false,\n\t\ts: props,\n\t\tx: null,\n\t\tl: null\n\t});\n\n\tif (legacy_mode_flag && !runes) {\n\t\tcomponent_context.l = {\n\t\t\ts: null,\n\t\t\tu: null,\n\t\t\tr1: [],\n\t\t\tr2: source(false)\n\t\t};\n\t}\n\n\tteardown(() => {\n\t\t/** @type {ComponentContext} */ (ctx).d = true;\n\t});\n\n\tif (DEV) {\n\t\t// component function\n\t\tcomponent_context.function = fn;\n\t\tdev_current_component_function = fn;\n\t}\n}\n\n/**\n * @template {Record<string, any>} T\n * @param {T} [component]\n * @returns {T}\n */\nexport function pop(component) {\n\tconst context_stack_item = component_context;\n\tif (context_stack_item !== null) {\n\t\tif (component !== undefined) {\n\t\t\tcontext_stack_item.x = component;\n\t\t}\n\t\tconst component_effects = context_stack_item.e;\n\t\tif (component_effects !== null) {\n\t\t\tvar previous_effect = active_effect;\n\t\t\tvar previous_reaction = active_reaction;\n\t\t\tcontext_stack_item.e = null;\n\t\t\ttry {\n\t\t\t\tfor (var i = 0; i < component_effects.length; i++) {\n\t\t\t\t\tvar component_effect = component_effects[i];\n\t\t\t\t\tset_active_effect(component_effect.effect);\n\t\t\t\t\tset_active_reaction(component_effect.reaction);\n\t\t\t\t\teffect(component_effect.fn);\n\t\t\t\t}\n\t\t\t} finally {\n\t\t\t\tset_active_effect(previous_effect);\n\t\t\t\tset_active_reaction(previous_reaction);\n\t\t\t}\n\t\t}\n\t\tcomponent_context = context_stack_item.p;\n\t\tif (DEV) {\n\t\t\tdev_current_component_function = context_stack_item.p?.function ?? null;\n\t\t}\n\t\tcontext_stack_item.m = true;\n\t}\n\t// Micro-optimization: Don't set .a above to the empty object\n\t// so it can be garbage-collected when the return here is unused\n\treturn component || /** @type {T} */ ({});\n}\n\n/** @returns {boolean} */\nexport function is_runes() {\n\treturn !legacy_mode_flag || (component_context !== null && component_context.l === null);\n}\n\n/**\n * @param {string} name\n * @returns {Map<unknown, unknown>}\n */\nfunction get_or_init_context_map(name) {\n\tif (component_context === null) {\n\t\tlifecycle_outside_component(name);\n\t}\n\n\treturn (component_context.c ??= new Map(get_parent_context(component_context) || undefined));\n}\n\n/**\n * @param {ComponentContext} component_context\n * @returns {Map<unknown, unknown> | null}\n */\nfunction get_parent_context(component_context) {\n\tlet parent = component_context.p;\n\twhile (parent !== null) {\n\t\tconst context_map = parent.c;\n\t\tif (context_map !== null) {\n\t\t\treturn context_map;\n\t\t}\n\t\tparent = parent.p;\n\t}\n\treturn null;\n}\n","const regex_return_characters = /\\r/g;\n\n/**\n * @param {string} str\n * @returns {string}\n */\nexport function hash(str) {\n\tstr = str.replace(regex_return_characters, '');\n\tlet hash = 5381;\n\tlet i = str.length;\n\n\twhile (i--) hash = ((hash << 5) - hash) ^ str.charCodeAt(i);\n\treturn (hash >>> 0).toString(36);\n}\n\nconst VOID_ELEMENT_NAMES = [\n\t'area',\n\t'base',\n\t'br',\n\t'col',\n\t'command',\n\t'embed',\n\t'hr',\n\t'img',\n\t'input',\n\t'keygen',\n\t'link',\n\t'meta',\n\t'param',\n\t'source',\n\t'track',\n\t'wbr'\n];\n\n/**\n * Returns `true` if `name` is of a void element\n * @param {string} name\n */\nexport function is_void(name) {\n\treturn VOID_ELEMENT_NAMES.includes(name) || name.toLowerCase() === '!doctype';\n}\n\nconst RESERVED_WORDS = [\n\t'arguments',\n\t'await',\n\t'break',\n\t'case',\n\t'catch',\n\t'class',\n\t'const',\n\t'continue',\n\t'debugger',\n\t'default',\n\t'delete',\n\t'do',\n\t'else',\n\t'enum',\n\t'eval',\n\t'export',\n\t'extends',\n\t'false',\n\t'finally',\n\t'for',\n\t'function',\n\t'if',\n\t'implements',\n\t'import',\n\t'in',\n\t'instanceof',\n\t'interface',\n\t'let',\n\t'new',\n\t'null',\n\t'package',\n\t'private',\n\t'protected',\n\t'public',\n\t'return',\n\t'static',\n\t'super',\n\t'switch',\n\t'this',\n\t'throw',\n\t'true',\n\t'try',\n\t'typeof',\n\t'var',\n\t'void',\n\t'while',\n\t'with',\n\t'yield'\n];\n\n/**\n * Returns `true` if `word` is a reserved JavaScript keyword\n * @param {string} word\n */\nexport function is_reserved(word) {\n\treturn RESERVED_WORDS.includes(word);\n}\n\n/**\n * @param {string} name\n */\nexport function is_capture_event(name) {\n\treturn name.endsWith('capture') && name !== 'gotpointercapture' && name !== 'lostpointercapture';\n}\n\n/** List of Element events that will be delegated */\nconst DELEGATED_EVENTS = [\n\t'beforeinput',\n\t'click',\n\t'change',\n\t'dblclick',\n\t'contextmenu',\n\t'focusin',\n\t'focusout',\n\t'input',\n\t'keydown',\n\t'keyup',\n\t'mousedown',\n\t'mousemove',\n\t'mouseout',\n\t'mouseover',\n\t'mouseup',\n\t'pointerdown',\n\t'pointermove',\n\t'pointerout',\n\t'pointerover',\n\t'pointerup',\n\t'touchend',\n\t'touchmove',\n\t'touchstart'\n];\n\n/**\n * Returns `true` if `event_name` is a delegated event\n * @param {string} event_name\n */\nexport function is_delegated(event_name) {\n\treturn DELEGATED_EVENTS.includes(event_name);\n}\n\n/**\n * Attributes that are boolean, i.e. they are present or not present.\n */\nconst DOM_BOOLEAN_ATTRIBUTES = [\n\t'allowfullscreen',\n\t'async',\n\t'autofocus',\n\t'autoplay',\n\t'checked',\n\t'controls',\n\t'default',\n\t'disabled',\n\t'formnovalidate',\n\t'hidden',\n\t'indeterminate',\n\t'inert',\n\t'ismap',\n\t'loop',\n\t'multiple',\n\t'muted',\n\t'nomodule',\n\t'novalidate',\n\t'open',\n\t'playsinline',\n\t'readonly',\n\t'required',\n\t'reversed',\n\t'seamless',\n\t'selected',\n\t'webkitdirectory',\n\t'defer',\n\t'disablepictureinpicture',\n\t'disableremoteplayback'\n];\n\n/**\n * Returns `true` if `name` is a boolean attribute\n * @param {string} name\n */\nexport function is_boolean_attribute(name) {\n\treturn DOM_BOOLEAN_ATTRIBUTES.includes(name);\n}\n\n/**\n * @type {Record<string, string>}\n * List of attribute names that should be aliased to their property names\n * because they behave differently between setting them as an attribute and\n * setting them as a property.\n */\nconst ATTRIBUTE_ALIASES = {\n\t// no `class: 'className'` because we handle that separately\n\tformnovalidate: 'formNoValidate',\n\tismap: 'isMap',\n\tnomodule: 'noModule',\n\tplaysinline: 'playsInline',\n\treadonly: 'readOnly',\n\tdefaultvalue: 'defaultValue',\n\tdefaultchecked: 'defaultChecked',\n\tsrcobject: 'srcObject',\n\tnovalidate: 'noValidate',\n\tallowfullscreen: 'allowFullscreen',\n\tdisablepictureinpicture: 'disablePictureInPicture',\n\tdisableremoteplayback: 'disableRemotePlayback'\n};\n\n/**\n * @param {string} name\n */\nexport function normalize_attribute(name) {\n\tname = name.toLowerCase();\n\treturn ATTRIBUTE_ALIASES[name] ?? name;\n}\n\nconst DOM_PROPERTIES = [\n\t...DOM_BOOLEAN_ATTRIBUTES,\n\t'formNoValidate',\n\t'isMap',\n\t'noModule',\n\t'playsInline',\n\t'readOnly',\n\t'value',\n\t'volume',\n\t'defaultValue',\n\t'defaultChecked',\n\t'srcObject',\n\t'noValidate',\n\t'allowFullscreen',\n\t'disablePictureInPicture',\n\t'disableRemotePlayback'\n];\n\n/**\n * @param {string} name\n */\nexport function is_dom_property(name) {\n\treturn DOM_PROPERTIES.includes(name);\n}\n\nconst NON_STATIC_PROPERTIES = ['autofocus', 'muted', 'defaultValue', 'defaultChecked'];\n\n/**\n * Returns `true` if the given attribute cannot be set through the template\n * string, i.e. needs some kind of JavaScript handling to work.\n * @param {string} name\n */\nexport function cannot_be_set_statically(name) {\n\treturn NON_STATIC_PROPERTIES.includes(name);\n}\n\n/**\n * Subset of delegated events which should be passive by default.\n * These two are already passive via browser defaults on window, document and body.\n * But since\n * - we're delegating them\n * - they happen often\n * - they apply to mobile which is generally less performant\n * we're marking them as passive by default for other elements, too.\n */\nconst PASSIVE_EVENTS = ['touchstart', 'touchmove'];\n\n/**\n * Returns `true` if `name` is a passive event\n * @param {string} name\n */\nexport function is_passive_event(name) {\n\treturn PASSIVE_EVENTS.includes(name);\n}\n\nconst CONTENT_EDITABLE_BINDINGS = ['textContent', 'innerHTML', 'innerText'];\n\n/** @param {string} name */\nexport function is_content_editable_binding(name) {\n\treturn CONTENT_EDITABLE_BINDINGS.includes(name);\n}\n\nconst LOAD_ERROR_ELEMENTS = [\n\t'body',\n\t'embed',\n\t'iframe',\n\t'img',\n\t'link',\n\t'object',\n\t'script',\n\t'style',\n\t'track'\n];\n\n/**\n * Returns `true` if the element emits `load` and `error` events\n * @param {string} name\n */\nexport function is_load_error_element(name) {\n\treturn LOAD_ERROR_ELEMENTS.includes(name);\n}\n\nconst SVG_ELEMENTS = [\n\t'altGlyph',\n\t'altGlyphDef',\n\t'altGlyphItem',\n\t'animate',\n\t'animateColor',\n\t'animateMotion',\n\t'animateTransform',\n\t'circle',\n\t'clipPath',\n\t'color-profile',\n\t'cursor',\n\t'defs',\n\t'desc',\n\t'discard',\n\t'ellipse',\n\t'feBlend',\n\t'feColorMatrix',\n\t'feComponentTransfer',\n\t'feComposite',\n\t'feConvolveMatrix',\n\t'feDiffuseLighting',\n\t'feDisplacementMap',\n\t'feDistantLight',\n\t'feDropShadow',\n\t'feFlood',\n\t'feFuncA',\n\t'feFuncB',\n\t'feFuncG',\n\t'feFuncR',\n\t'feGaussianBlur',\n\t'feImage',\n\t'feMerge',\n\t'feMergeNode',\n\t'feMorphology',\n\t'feOffset',\n\t'fePointLight',\n\t'feSpecularLighting',\n\t'feSpotLight',\n\t'feTile',\n\t'feTurbulence',\n\t'filter',\n\t'font',\n\t'font-face',\n\t'font-face-format',\n\t'font-face-name',\n\t'font-face-src',\n\t'font-face-uri',\n\t'foreignObject',\n\t'g',\n\t'glyph',\n\t'glyphRef',\n\t'hatch',\n\t'hatchpath',\n\t'hkern',\n\t'image',\n\t'line',\n\t'linearGradient',\n\t'marker',\n\t'mask',\n\t'mesh',\n\t'meshgradient',\n\t'meshpatch',\n\t'meshrow',\n\t'metadata',\n\t'missing-glyph',\n\t'mpath',\n\t'path',\n\t'pattern',\n\t'polygon',\n\t'polyline',\n\t'radialGradient',\n\t'rect',\n\t'set',\n\t'solidcolor',\n\t'stop',\n\t'svg',\n\t'switch',\n\t'symbol',\n\t'text',\n\t'textPath',\n\t'tref',\n\t'tspan',\n\t'unknown',\n\t'use',\n\t'view',\n\t'vkern'\n];\n\n/** @param {string} name */\nexport function is_svg(name) {\n\treturn SVG_ELEMENTS.includes(name);\n}\n\nconst MATHML_ELEMENTS = [\n\t'annotation',\n\t'annotation-xml',\n\t'maction',\n\t'math',\n\t'merror',\n\t'mfrac',\n\t'mi',\n\t'mmultiscripts',\n\t'mn',\n\t'mo',\n\t'mover',\n\t'mpadded',\n\t'mphantom',\n\t'mprescripts',\n\t'mroot',\n\t'mrow',\n\t'ms',\n\t'mspace',\n\t'msqrt',\n\t'mstyle',\n\t'msub',\n\t'msubsup',\n\t'msup',\n\t'mtable',\n\t'mtd',\n\t'mtext',\n\t'mtr',\n\t'munder',\n\t'munderover',\n\t'semantics'\n];\n\n/** @param {string} name */\nexport function is_mathml(name) {\n\treturn MATHML_ELEMENTS.includes(name);\n}\n\nconst RUNES = /** @type {const} */ ([\n\t'$state',\n\t'$state.raw',\n\t'$state.snapshot',\n\t'$props',\n\t'$props.id',\n\t'$bindable',\n\t'$derived',\n\t'$derived.by',\n\t'$effect',\n\t'$effect.pre',\n\t'$effect.tracking',\n\t'$effect.root',\n\t'$inspect',\n\t'$inspect().with',\n\t'$inspect.trace',\n\t'$host'\n]);\n\n/**\n * @param {string} name\n * @returns {name is RUNES[number]}\n */\nexport function is_rune(name) {\n\treturn RUNES.includes(/** @type {RUNES[number]} */ (name));\n}\n\n/** List of elements that require raw contents and should not have SSR comments put in them */\nconst RAW_TEXT_ELEMENTS = /** @type {const} */ (['textarea', 'script', 'style', 'title']);\n\n/** @param {string} name */\nexport function is_raw_text_element(name) {\n\treturn RAW_TEXT_ELEMENTS.includes(/** @type {RAW_TEXT_ELEMENTS[number]} */ (name));\n}\n\n/**\n * Prevent devtools trying to make `location` a clickable link by inserting a zero-width space\n * @param {string | undefined} location\n */\nexport function sanitize_location(location) {\n\treturn location?.replace(/\\//g, '/\\u200b');\n}\n","import { hydrating } from '../hydration.js';\nimport { clear_text_content, get_first_child } from '../operations.js';\nimport { queue_micro_task } from '../task.js';\n\n/**\n * @param {HTMLElement} dom\n * @param {boolean} value\n * @returns {void}\n */\nexport function autofocus(dom, value) {\n\tif (value) {\n\t\tconst body = document.body;\n\t\tdom.autofocus = true;\n\n\t\tqueue_micro_task(() => {\n\t\t\tif (document.activeElement === body) {\n\t\t\t\tdom.focus();\n\t\t\t}\n\t\t});\n\t}\n}\n\n/**\n * The child of a textarea actually corresponds to the defaultValue property, so we need\n * to remove it upon hydration to avoid a bug when someone resets the form value.\n * @param {HTMLTextAreaElement} dom\n * @returns {void}\n */\nexport function remove_textarea_child(dom) {\n\tif (hydrating && get_first_child(dom) !== null) {\n\t\tclear_text_content(dom);\n\t}\n}\n\nlet listening_to_form_reset = false;\n\nexport function add_form_reset_listener() {\n\tif (!listening_to_form_reset) {\n\t\tlistening_to_form_reset = true;\n\t\tdocument.addEventListener(\n\t\t\t'reset',\n\t\t\t(evt) => {\n\t\t\t\t// Needs to happen one tick later or else the dom properties of the form\n\t\t\t\t// elements have not updated to their reset values yet\n\t\t\t\tPromise.resolve().then(() => {\n\t\t\t\t\tif (!evt.defaultPrevented) {\n\t\t\t\t\t\tfor (const e of /**@type {HTMLFormElement} */ (evt.target).elements) {\n\t\t\t\t\t\t\t// @ts-expect-error\n\t\t\t\t\t\t\te.__on_r?.();\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t},\n\t\t\t// In the capture phase to guarantee we get noticed of it (no possiblity of stopPropagation)\n\t\t\t{ capture: true }\n\t\t);\n\t}\n}\n","import { teardown } from '../../../reactivity/effects.js';\nimport {\n\tactive_effect,\n\tactive_reaction,\n\tset_active_effect,\n\tset_active_reaction\n} from '../../../runtime.js';\nimport { add_form_reset_listener } from '../misc.js';\n\n/**\n * Fires the handler once immediately (unless corresponding arg is set to `false`),\n * then listens to the given events until the render effect context is destroyed\n * @param {EventTarget} target\n * @param {Array<string>} events\n * @param {(event?: Event) => void} handler\n * @param {any} call_handler_immediately\n */\nexport function listen(target, events, handler, call_handler_immediately = true) {\n\tif (call_handler_immediately) {\n\t\thandler();\n\t}\n\n\tfor (var name of events) {\n\t\ttarget.addEventListener(name, handler);\n\t}\n\n\tteardown(() => {\n\t\tfor (var name of events) {\n\t\t\ttarget.removeEventListener(name, handler);\n\t\t}\n\t});\n}\n\n/**\n * @template T\n * @param {() => T} fn\n */\nexport function without_reactive_context(fn) {\n\tvar previous_reaction = active_reaction;\n\tvar previous_effect = active_effect;\n\tset_active_reaction(null);\n\tset_active_effect(null);\n\ttry {\n\t\treturn fn();\n\t} finally {\n\t\tset_active_reaction(previous_reaction);\n\t\tset_active_effect(previous_effect);\n\t}\n}\n\n/**\n * Listen to the given event, and then instantiate a global form reset listener if not already done,\n * to notify all bindings when the form is reset\n * @param {HTMLElement} element\n * @param {string} event\n * @param {(is_reset?: true) => void} handler\n * @param {(is_reset?: true) => void} [on_reset]\n */\nexport function listen_to_event_and_reset_event(element, event, handler, on_reset = handler) {\n\telement.addEventListener(event, () => without_reactive_context(handler));\n\t// @ts-expect-error\n\tconst prev = element.__on_r;\n\tif (prev) {\n\t\t// special case for checkbox that can have multiple binds (group & checked)\n\t\t// @ts-expect-error\n\t\telement.__on_r = () => {\n\t\t\tprev();\n\t\t\ton_reset(true);\n\t\t};\n\t} else {\n\t\t// @ts-expect-error\n\t\telement.__on_r = () => on_reset(true);\n\t}\n\n\tadd_form_reset_listener();\n}\n","/** @import { Location } from 'locate-character' */\nimport { teardown } from '../../reactivity/effects.js';\nimport { define_property, is_array } from '../../../shared/utils.js';\nimport { hydrating } from '../hydration.js';\nimport { queue_micro_task } from '../task.js';\nimport { FILENAME } from '../../../../constants.js';\nimport * as w from '../../warnings.js';\nimport {\n\tactive_effect,\n\tactive_reaction,\n\tset_active_effect,\n\tset_active_reaction\n} from '../../runtime.js';\nimport { without_reactive_context } from './bindings/shared.js';\n\n/** @type {Set<string>} */\nexport const all_registered_events = new Set();\n\n/** @type {Set<(events: Array<string>) => void>} */\nexport const root_event_handles = new Set();\n\n/**\n * SSR adds onload and onerror attributes to catch those events before the hydration.\n * This function detects those cases, removes the attributes and replays the events.\n * @param {HTMLElement} dom\n */\nexport function replay_events(dom) {\n\tif (!hydrating) return;\n\n\tif (dom.onload) {\n\t\tdom.removeAttribute('onload');\n\t}\n\tif (dom.onerror) {\n\t\tdom.removeAttribute('onerror');\n\t}\n\t// @ts-expect-error\n\tconst event = dom.__e;\n\tif (event !== undefined) {\n\t\t// @ts-expect-error\n\t\tdom.__e = undefined;\n\t\tqueueMicrotask(() => {\n\t\t\tif (dom.isConnected) {\n\t\t\t\tdom.dispatchEvent(event);\n\t\t\t}\n\t\t});\n\t}\n}\n\n/**\n * @param {string} event_name\n * @param {EventTarget} dom\n * @param {EventListener} [handler]\n * @param {AddEventListenerOptions} [options]\n */\nexport function create_event(event_name, dom, handler, options = {}) {\n\t/**\n\t * @this {EventTarget}\n\t */\n\tfunction target_handler(/** @type {Event} */ event) {\n\t\tif (!options.capture) {\n\t\t\t// Only call in the bubble phase, else delegated events would be called before the capturing events\n\t\t\thandle_event_propagation.call(dom, event);\n\t\t}\n\t\tif (!event.cancelBubble) {\n\t\t\treturn without_reactive_context(() => {\n\t\t\t\treturn handler?.call(this, event);\n\t\t\t});\n\t\t}\n\t}\n\n\t// Chrome has a bug where pointer events don't work when attached to a DOM element that has been cloned\n\t// with cloneNode() and the DOM element is disconnected from the document. To ensure the event works, we\n\t// defer the attachment till after it's been appended to the document. TODO: remove this once Chrome fixes\n\t// this bug. The same applies to wheel events and touch events.\n\tif (\n\t\tevent_name.startsWith('pointer') ||\n\t\tevent_name.startsWith('touch') ||\n\t\tevent_name === 'wheel'\n\t) {\n\t\tqueue_micro_task(() => {\n\t\t\tdom.addEventListener(event_name, target_handler, options);\n\t\t});\n\t} else {\n\t\tdom.addEventListener(event_name, target_handler, options);\n\t}\n\n\treturn target_handler;\n}\n\n/**\n * Attaches an event handler to an element and returns a function that removes the handler. Using this\n * rather than `addEventListener` will preserve the correct order relative to handlers added declaratively\n * (with attributes like `onclick`), which use event delegation for performance reasons\n *\n * @param {EventTarget} element\n * @param {string} type\n * @param {EventListener} handler\n * @param {AddEventListenerOptions} [options]\n */\nexport function on(element, type, handler, options = {}) {\n\tvar target_handler = create_event(type, element, handler, options);\n\n\treturn () => {\n\t\telement.removeEventListener(type, target_handler, options);\n\t};\n}\n\n/**\n * @param {string} event_name\n * @param {Element} dom\n * @param {EventListener} [handler]\n * @param {boolean} [capture]\n * @param {boolean} [passive]\n * @returns {void}\n */\nexport function event(event_name, dom, handler, capture, passive) {\n\tvar options = { capture, passive };\n\tvar target_handler = create_event(event_name, dom, handler, options);\n\n\t// @ts-ignore\n\tif (dom === document.body || dom === window || dom === document) {\n\t\tteardown(() => {\n\t\t\tdom.removeEventListener(event_name, target_handler, options);\n\t\t});\n\t}\n}\n\n/**\n * @param {Array<string>} events\n * @returns {void}\n */\nexport function delegate(events) {\n\tfor (var i = 0; i < events.length; i++) {\n\t\tall_registered_events.add(events[i]);\n\t}\n\n\tfor (var fn of root_event_handles) {\n\t\tfn(events);\n\t}\n}\n\n/**\n * @this {EventTarget}\n * @param {Event} event\n * @returns {void}\n */\nexport function handle_event_propagation(event) {\n\tvar handler_element = this;\n\tvar owner_document = /** @type {Node} */ (handler_element).ownerDocument;\n\tvar event_name = event.type;\n\tvar path = event.composedPath?.() || [];\n\tvar current_target = /** @type {null | Element} */ (path[0] || event.target);\n\n\t// composedPath contains list of nodes the event has propagated through.\n\t// We check __root to skip all nodes below it in case this is a\n\t// parent of the __root node, which indicates that there's nested\n\t// mounted apps. In this case we don't want to trigger events multiple times.\n\tvar path_idx = 0;\n\n\t// @ts-expect-error is added below\n\tvar handled_at = event.__root;\n\n\tif (handled_at) {\n\t\tvar at_idx = path.indexOf(handled_at);\n\t\tif (\n\t\t\tat_idx !== -1 &&\n\t\t\t(handler_element === document || handler_element === /** @type {any} */ (window))\n\t\t) {\n\t\t\t// This is the fallback document listener or a window listener, but the event was already handled\n\t\t\t// -> ignore, but set handle_at to document/window so that we're resetting the event\n\t\t\t// chain in case someone manually dispatches the same event object again.\n\t\t\t// @ts-expect-error\n\t\t\tevent.__root = handler_element;\n\t\t\treturn;\n\t\t}\n\n\t\t// We're deliberately not skipping if the index is higher, because\n\t\t// someone could create an event programmatically and emit it multiple times,\n\t\t// in which case we want to handle the whole propagation chain properly each time.\n\t\t// (this will only be a false negative if the event is dispatched multiple times and\n\t\t// the fallback document listener isn't reached in between, but that's super rare)\n\t\tvar handler_idx = path.indexOf(handler_element);\n\t\tif (handler_idx === -1) {\n\t\t\t// handle_idx can theoretically be -1 (happened in some JSDOM testing scenarios with an event listener on the window object)\n\t\t\t// so guard against that, too, and assume that everything was handled at this point.\n\t\t\treturn;\n\t\t}\n\n\t\tif (at_idx <= handler_idx) {\n\t\t\tpath_idx = at_idx;\n\t\t}\n\t}\n\n\tcurrent_target = /** @type {Element} */ (path[path_idx] || event.target);\n\t// there can only be one delegated event per element, and we either already handled the current target,\n\t// or this is the very first target in the chain which has a non-delegated listener, in which case it's safe\n\t// to handle a possible delegated event on it later (through the root delegation listener for example).\n\tif (current_target === handler_element) return;\n\n\t// Proxy currentTarget to correct target\n\tdefine_property(event, 'currentTarget', {\n\t\tconfigurable: true,\n\t\tget() {\n\t\t\treturn current_target || owner_document;\n\t\t}\n\t});\n\n\t// This started because of Chromium issue https://chromestatus.com/feature/5128696823545856,\n\t// where removal or moving of of the DOM can cause sync `blur` events to fire, which can cause logic\n\t// to run inside the current `active_reaction`, which isn't what we want at all. However, on reflection,\n\t// it's probably best that all event handled by Svelte have this behaviour, as we don't really want\n\t// an event handler to run in the context of another reaction or effect.\n\tvar previous_reaction = active_reaction;\n\tvar previous_effect = active_effect;\n\tset_active_reaction(null);\n\tset_active_effect(null);\n\n\ttry {\n\t\t/**\n\t\t * @type {unknown}\n\t\t */\n\t\tvar throw_error;\n\t\t/**\n\t\t * @type {unknown[]}\n\t\t */\n\t\tvar other_errors = [];\n\n\t\twhile (current_target !== null) {\n\t\t\t/** @type {null | Element} */\n\t\t\tvar parent_element =\n\t\t\t\tcurrent_target.assignedSlot ||\n\t\t\t\tcurrent_target.parentNode ||\n\t\t\t\t/** @type {any} */ (current_target).host ||\n\t\t\t\tnull;\n\n\t\t\ttry {\n\t\t\t\t// @ts-expect-error\n\t\t\t\tvar delegated = current_target['__' + event_name];\n\n\t\t\t\tif (\n\t\t\t\t\tdelegated != null &&\n\t\t\t\t\t(!(/** @type {any} */ (current_target).disabled) ||\n\t\t\t\t\t\t// DOM could've been updated already by the time this is reached, so we check this as well\n\t\t\t\t\t\t// -> the target could not have been disabled because it emits the event in the first place\n\t\t\t\t\t\tevent.target === current_target)\n\t\t\t\t) {\n\t\t\t\t\tif (is_array(delegated)) {\n\t\t\t\t\t\tvar [fn, ...data] = delegated;\n\t\t\t\t\t\tfn.apply(current_target, [event, ...data]);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tdelegated.call(current_target, event);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} catch (error) {\n\t\t\t\tif (throw_error) {\n\t\t\t\t\tother_errors.push(error);\n\t\t\t\t} else {\n\t\t\t\t\tthrow_error = error;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (event.cancelBubble || parent_element === handler_element || parent_element === null) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tcurrent_target = parent_element;\n\t\t}\n\n\t\tif (throw_error) {\n\t\t\tfor (let error of other_errors) {\n\t\t\t\t// Throw the rest of the errors, one-by-one on a microtask\n\t\t\t\tqueueMicrotask(() => {\n\t\t\t\t\tthrow error;\n\t\t\t\t});\n\t\t\t}\n\t\t\tthrow throw_error;\n\t\t}\n\t} finally {\n\t\t// @ts-expect-error is used above\n\t\tevent.__root = handler_element;\n\t\t// @ts-ignore remove proxy on currentTarget\n\t\tdelete event.currentTarget;\n\t\tset_active_reaction(previous_reaction);\n\t\tset_active_effect(previous_effect);\n\t}\n}\n\n/**\n * In dev, warn if an event handler is not a function, as it means the\n * user probably called the handler or forgot to add a `() =>`\n * @param {() => (event: Event, ...args: any) => void} thunk\n * @param {EventTarget} element\n * @param {[Event, ...any]} args\n * @param {any} component\n * @param {[number, number]} [loc]\n * @param {boolean} [remove_parens]\n */\nexport function apply(\n\tthunk,\n\telement,\n\targs,\n\tcomponent,\n\tloc,\n\thas_side_effects = false,\n\tremove_parens = false\n) {\n\tlet handler;\n\tlet error;\n\n\ttry {\n\t\thandler = thunk();\n\t} catch (e) {\n\t\terror = e;\n\t}\n\n\tif (typeof handler !== 'function' && (has_side_effects || handler != null || error)) {\n\t\tconst filename = component?.[FILENAME];\n\t\tconst location = loc ? ` at ${filename}:${loc[0]}:${loc[1]}` : ` in ${filename}`;\n\t\tconst phase = args[0]?.eventPhase < Event.BUBBLING_PHASE ? 'capture' : '';\n\t\tconst event_name = args[0]?.type + phase;\n\t\tconst description = `\\`${event_name}\\` handler${location}`;\n\t\tconst suggestion = remove_parens ? 'remove the trailing `()`' : 'add a leading `() =>`';\n\n\t\tw.event_handler_invalid(description, suggestion);\n\n\t\tif (error) {\n\t\t\tthrow error;\n\t\t}\n\t}\n\thandler?.apply(element, args);\n}\n","/** @param {string} html */\nexport function create_fragment_from_html(html) {\n\tvar elem = document.createElement('template');\n\telem.innerHTML = html;\n\treturn elem.content;\n}\n","/** @import { Effect, TemplateNode } from '#client' */\nimport { hydrate_next, hydrate_node, hydrating, set_hydrate_node } from './hydration.js';\nimport { create_text, get_first_child, is_firefox } from './operations.js';\nimport { create_fragment_from_html } from './reconciler.js';\nimport { active_effect } from '../runtime.js';\nimport { TEMPLATE_FRAGMENT, TEMPLATE_USE_IMPORT_NODE } from '../../../constants.js';\n\n/**\n * @param {TemplateNode} start\n * @param {TemplateNode | null} end\n */\nexport function assign_nodes(start, end) {\n\tvar effect = /** @type {Effect} */ (active_effect);\n\tif (effect.nodes_start === null) {\n\t\teffect.nodes_start = start;\n\t\teffect.nodes_end = end;\n\t}\n}\n\n/**\n * @param {string} content\n * @param {number} flags\n * @returns {() => Node | Node[]}\n */\n/*#__NO_SIDE_EFFECTS__*/\nexport function template(content, flags) {\n\tvar is_fragment = (flags & TEMPLATE_FRAGMENT) !== 0;\n\tvar use_import_node = (flags & TEMPLATE_USE_IMPORT_NODE) !== 0;\n\n\t/** @type {Node} */\n\tvar node;\n\n\t/**\n\t * Whether or not the first item is a text/element node. If not, we need to\n\t * create an additional comment node to act as `effect.nodes.start`\n\t */\n\tvar has_start = !content.startsWith('<!>');\n\n\treturn () => {\n\t\tif (hydrating) {\n\t\t\tassign_nodes(hydrate_node, null);\n\t\t\treturn hydrate_node;\n\t\t}\n\n\t\tif (node === undefined) {\n\t\t\tnode = create_fragment_from_html(has_start ? content : '<!>' + content);\n\t\t\tif (!is_fragment) node = /** @type {Node} */ (get_first_child(node));\n\t\t}\n\n\t\tvar clone = /** @type {TemplateNode} */ (\n\t\t\tuse_import_node || is_firefox ? document.importNode(node, true) : node.cloneNode(true)\n\t\t);\n\n\t\tif (is_fragment) {\n\t\t\tvar start = /** @type {TemplateNode} */ (get_first_child(clone));\n\t\t\tvar end = /** @type {TemplateNode} */ (clone.lastChild);\n\n\t\t\tassign_nodes(start, end);\n\t\t} else {\n\t\t\tassign_nodes(clone, clone);\n\t\t}\n\n\t\treturn clone;\n\t};\n}\n\n/**\n * @param {string} content\n * @param {number} flags\n * @returns {() => Node | Node[]}\n */\n/*#__NO_SIDE_EFFECTS__*/\nexport function template_with_script(content, flags) {\n\tvar fn = template(content, flags);\n\treturn () => run_scripts(/** @type {Element | DocumentFragment} */ (fn()));\n}\n\n/**\n * @param {string} content\n * @param {number} flags\n * @param {'svg' | 'math'} ns\n * @returns {() => Node | Node[]}\n */\n/*#__NO_SIDE_EFFECTS__*/\nexport function ns_template(content, flags, ns = 'svg') {\n\t/**\n\t * Whether or not the first item is a text/element node. If not, we need to\n\t * create an additional comment node to act as `effect.nodes.start`\n\t */\n\tvar has_start = !content.startsWith('<!>');\n\n\tvar is_fragment = (flags & TEMPLATE_FRAGMENT) !== 0;\n\tvar wrapped = `<${ns}>${has_start ? content : '<!>' + content}</${ns}>`;\n\n\t/** @type {Element | DocumentFragment} */\n\tvar node;\n\n\treturn () => {\n\t\tif (hydrating) {\n\t\t\tassign_nodes(hydrate_node, null);\n\t\t\treturn hydrate_node;\n\t\t}\n\n\t\tif (!node) {\n\t\t\tvar fragment = /** @type {DocumentFragment} */ (create_fragment_from_html(wrapped));\n\t\t\tvar root = /** @type {Element} */ (get_first_child(fragment));\n\n\t\t\tif (is_fragment) {\n\t\t\t\tnode = document.createDocumentFragment();\n\t\t\t\twhile (get_first_child(root)) {\n\t\t\t\t\tnode.appendChild(/** @type {Node} */ (get_first_child(root)));\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tnode = /** @type {Element} */ (get_first_child(root));\n\t\t\t}\n\t\t}\n\n\t\tvar clone = /** @type {TemplateNode} */ (node.cloneNode(true));\n\n\t\tif (is_fragment) {\n\t\t\tvar start = /** @type {TemplateNode} */ (get_first_child(clone));\n\t\t\tvar end = /** @type {TemplateNode} */ (clone.lastChild);\n\n\t\t\tassign_nodes(start, end);\n\t\t} else {\n\t\t\tassign_nodes(clone, clone);\n\t\t}\n\n\t\treturn clone;\n\t};\n}\n\n/**\n * @param {string} content\n * @param {number} flags\n * @returns {() => Node | Node[]}\n */\n/*#__NO_SIDE_EFFECTS__*/\nexport function svg_template_with_script(content, flags) {\n\tvar fn = ns_template(content, flags);\n\treturn () => run_scripts(/** @type {Element | DocumentFragment} */ (fn()));\n}\n\n/**\n * @param {string} content\n * @param {number} flags\n * @returns {() => Node | Node[]}\n */\n/*#__NO_SIDE_EFFECTS__*/\nexport function mathml_template(content, flags) {\n\treturn ns_template(content, flags, 'math');\n}\n\n/**\n * Creating a document fragment from HTML that contains script tags will not execute\n * the scripts. We need to replace the script tags with new ones so that they are executed.\n * @param {Element | DocumentFragment} node\n * @returns {Node | Node[]}\n */\nfunction run_scripts(node) {\n\t// scripts were SSR'd, in which case they will run\n\tif (hydrating) return node;\n\n\tconst is_fragment = node.nodeType === 11;\n\tconst scripts =\n\t\t/** @type {HTMLElement} */ (node).tagName === 'SCRIPT'\n\t\t\t? [/** @type {HTMLScriptElement} */ (node)]\n\t\t\t: node.querySelectorAll('script');\n\tconst effect = /** @type {Effect} */ (active_effect);\n\n\tfor (const script of scripts) {\n\t\tconst clone = document.createElement('script');\n\t\tfor (var attribute of script.attributes) {\n\t\t\tclone.setAttribute(attribute.name, attribute.value);\n\t\t}\n\n\t\tclone.textContent = script.textContent;\n\n\t\t// The script has changed - if it's at the edges, the effect now points at dead nodes\n\t\tif (is_fragment ? node.firstChild === script : node === script) {\n\t\t\teffect.nodes_start = clone;\n\t\t}\n\t\tif (is_fragment ? node.lastChild === script : node === script) {\n\t\t\teffect.nodes_end = clone;\n\t\t}\n\n\t\tscript.replaceWith(clone);\n\t}\n\treturn node;\n}\n\n/**\n * Don't mark this as side-effect-free, hydration needs to walk all nodes\n * @param {any} value\n */\nexport function text(value = '') {\n\tif (!hydrating) {\n\t\tvar t = create_text(value + '');\n\t\tassign_nodes(t, t);\n\t\treturn t;\n\t}\n\n\tvar node = hydrate_node;\n\n\tif (node.nodeType !== 3) {\n\t\t// if an {expression} is empty during SSR, we need to insert an empty text node\n\t\tnode.before((node = create_text()));\n\t\tset_hydrate_node(node);\n\t}\n\n\tassign_nodes(node, node);\n\treturn node;\n}\n\nexport function comment() {\n\t// we're not delegating to `template` here for performance reasons\n\tif (hydrating) {\n\t\tassign_nodes(hydrate_node, null);\n\t\treturn hydrate_node;\n\t}\n\n\tvar frag = document.createDocumentFragment();\n\tvar start = document.createComment('');\n\tvar anchor = create_text();\n\tfrag.append(start, anchor);\n\n\tassign_nodes(start, anchor);\n\n\treturn frag;\n}\n\n/**\n * Assign the created (or in hydration mode, traversed) dom elements to the current block\n * and insert the elements into the dom (in client mode).\n * @param {Text | Comment | Element} anchor\n * @param {DocumentFragment | Element} dom\n */\nexport function append(anchor, dom) {\n\tif (hydrating) {\n\t\t/** @type {Effect} */ (active_effect).nodes_end = hydrate_node;\n\t\thydrate_next();\n\t\treturn;\n\t}\n\n\tif (anchor === null) {\n\t\t// edge case — void `<svelte:element>` with content\n\t\treturn;\n\t}\n\n\tanchor.before(/** @type {Node} */ (dom));\n}\n\n/**\n * Create (or hydrate) an unique UID for the component instance.\n */\nexport function props_id() {\n\tif (\n\t\thydrating &&\n\t\thydrate_node &&\n\t\thydrate_node.nodeType === 8 &&\n\t\thydrate_node.textContent?.startsWith(`#`)\n\t) {\n\t\tconst id = hydrate_node.textContent.substring(1);\n\t\thydrate_next();\n\t\treturn id;\n\t}\n\n\t// @ts-expect-error This way we ensure the id is unique even across Svelte runtimes\n\t(window.__svelte ??= {}).uid ??= 1;\n\n\t// @ts-expect-error\n\treturn `c${window.__svelte.uid++}`;\n}\n","/** @import { ComponentContext, Effect, TemplateNode } from '#client' */\n/** @import { Component, ComponentType, SvelteComponent, MountOptions } from '../../index.js' */\nimport { DEV } from 'esm-env';\nimport {\n\tclear_text_content,\n\tcreate_text,\n\tget_first_child,\n\tget_next_sibling,\n\tinit_operations\n} from './dom/operations.js';\nimport { HYDRATION_END, HYDRATION_ERROR, HYDRATION_START } from '../../constants.js';\nimport { active_effect } from './runtime.js';\nimport { push, pop, component_context } from './context.js';\nimport { component_root, branch } from './reactivity/effects.js';\nimport {\n\thydrate_next,\n\thydrate_node,\n\thydrating,\n\tset_hydrate_node,\n\tset_hydrating\n} from './dom/hydration.js';\nimport { array_from } from '../shared/utils.js';\nimport {\n\tall_registered_events,\n\thandle_event_propagation,\n\troot_event_handles\n} from './dom/elements/events.js';\nimport { reset_head_anchor } from './dom/blocks/svelte-head.js';\nimport * as w from './warnings.js';\nimport * as e from './errors.js';\nimport { assign_nodes } from './dom/template.js';\nimport { is_passive_event } from '../../utils.js';\n\n/**\n * This is normally true — block effects should run their intro transitions —\n * but is false during hydration (unless `options.intro` is `true`) and\n * when creating the children of a `<svelte:element>` that just changed tag\n */\nexport let should_intro = true;\n\n/** @param {boolean} value */\nexport function set_should_intro(value) {\n\tshould_intro = value;\n}\n\n/**\n * @param {Element} text\n * @param {string} value\n * @returns {void}\n */\nexport function set_text(text, value) {\n\t// For objects, we apply string coercion (which might make things like $state array references in the template reactive) before diffing\n\tvar str = value == null ? '' : typeof value === 'object' ? value + '' : value;\n\t// @ts-expect-error\n\tif (str !== (text.__t ??= text.nodeValue)) {\n\t\t// @ts-expect-error\n\t\ttext.__t = str;\n\t\ttext.nodeValue = str + '';\n\t}\n}\n\n/**\n * Mounts a component to the given target and returns the exports and potentially the props (if compiled with `accessors: true`) of the component.\n * Transitions will play during the initial render unless the `intro` option is set to `false`.\n *\n * @template {Record<string, any>} Props\n * @template {Record<string, any>} Exports\n * @param {ComponentType<SvelteComponent<Props>> | Component<Props, Exports, any>} component\n * @param {MountOptions<Props>} options\n * @returns {Exports}\n */\nexport function mount(component, options) {\n\treturn _mount(component, options);\n}\n\n/**\n * Hydrates a component on the given target and returns the exports and potentially the props (if compiled with `accessors: true`) of the component\n *\n * @template {Record<string, any>} Props\n * @template {Record<string, any>} Exports\n * @param {ComponentType<SvelteComponent<Props>> | Component<Props, Exports, any>} component\n * @param {{} extends Props ? {\n * \t\ttarget: Document | Element | ShadowRoot;\n * \t\tprops?: Props;\n * \t\tevents?: Record<string, (e: any) => any>;\n *  \tcontext?: Map<any, any>;\n * \t\tintro?: boolean;\n * \t\trecover?: boolean;\n * \t} : {\n * \t\ttarget: Document | Element | ShadowRoot;\n * \t\tprops: Props;\n * \t\tevents?: Record<string, (e: any) => any>;\n *  \tcontext?: Map<any, any>;\n * \t\tintro?: boolean;\n * \t\trecover?: boolean;\n * \t}} options\n * @returns {Exports}\n */\nexport function hydrate(component, options) {\n\tinit_operations();\n\toptions.intro = options.intro ?? false;\n\tconst target = options.target;\n\tconst was_hydrating = hydrating;\n\tconst previous_hydrate_node = hydrate_node;\n\n\ttry {\n\t\tvar anchor = /** @type {TemplateNode} */ (get_first_child(target));\n\t\twhile (\n\t\t\tanchor &&\n\t\t\t(anchor.nodeType !== 8 || /** @type {Comment} */ (anchor).data !== HYDRATION_START)\n\t\t) {\n\t\t\tanchor = /** @type {TemplateNode} */ (get_next_sibling(anchor));\n\t\t}\n\n\t\tif (!anchor) {\n\t\t\tthrow HYDRATION_ERROR;\n\t\t}\n\n\t\tset_hydrating(true);\n\t\tset_hydrate_node(/** @type {Comment} */ (anchor));\n\t\thydrate_next();\n\n\t\tconst instance = _mount(component, { ...options, anchor });\n\n\t\tif (\n\t\t\thydrate_node === null ||\n\t\t\thydrate_node.nodeType !== 8 ||\n\t\t\t/** @type {Comment} */ (hydrate_node).data !== HYDRATION_END\n\t\t) {\n\t\t\tw.hydration_mismatch();\n\t\t\tthrow HYDRATION_ERROR;\n\t\t}\n\n\t\tset_hydrating(false);\n\n\t\treturn /**  @type {Exports} */ (instance);\n\t} catch (error) {\n\t\tif (error === HYDRATION_ERROR) {\n\t\t\tif (options.recover === false) {\n\t\t\t\te.hydration_failed();\n\t\t\t}\n\n\t\t\t// If an error occured above, the operations might not yet have been initialised.\n\t\t\tinit_operations();\n\t\t\tclear_text_content(target);\n\n\t\t\tset_hydrating(false);\n\t\t\treturn mount(component, options);\n\t\t}\n\n\t\tthrow error;\n\t} finally {\n\t\tset_hydrating(was_hydrating);\n\t\tset_hydrate_node(previous_hydrate_node);\n\t\treset_head_anchor();\n\t}\n}\n\n/** @type {Map<string, number>} */\nconst document_listeners = new Map();\n\n/**\n * @template {Record<string, any>} Exports\n * @param {ComponentType<SvelteComponent<any>> | Component<any>} Component\n * @param {MountOptions} options\n * @returns {Exports}\n */\nfunction _mount(Component, { target, anchor, props = {}, events, context, intro = true }) {\n\tinit_operations();\n\n\tvar registered_events = new Set();\n\n\t/** @param {Array<string>} events */\n\tvar event_handle = (events) => {\n\t\tfor (var i = 0; i < events.length; i++) {\n\t\t\tvar event_name = events[i];\n\n\t\t\tif (registered_events.has(event_name)) continue;\n\t\t\tregistered_events.add(event_name);\n\n\t\t\tvar passive = is_passive_event(event_name);\n\n\t\t\t// Add the event listener to both the container and the document.\n\t\t\t// The container listener ensures we catch events from within in case\n\t\t\t// the outer content stops propagation of the event.\n\t\t\ttarget.addEventListener(event_name, handle_event_propagation, { passive });\n\n\t\t\tvar n = document_listeners.get(event_name);\n\n\t\t\tif (n === undefined) {\n\t\t\t\t// The document listener ensures we catch events that originate from elements that were\n\t\t\t\t// manually moved outside of the container (e.g. via manual portals).\n\t\t\t\tdocument.addEventListener(event_name, handle_event_propagation, { passive });\n\t\t\t\tdocument_listeners.set(event_name, 1);\n\t\t\t} else {\n\t\t\t\tdocument_listeners.set(event_name, n + 1);\n\t\t\t}\n\t\t}\n\t};\n\n\tevent_handle(array_from(all_registered_events));\n\troot_event_handles.add(event_handle);\n\n\t/** @type {Exports} */\n\t// @ts-expect-error will be defined because the render effect runs synchronously\n\tvar component = undefined;\n\n\tvar unmount = component_root(() => {\n\t\tvar anchor_node = anchor ?? target.appendChild(create_text());\n\n\t\tbranch(() => {\n\t\t\tif (context) {\n\t\t\t\tpush({});\n\t\t\t\tvar ctx = /** @type {ComponentContext} */ (component_context);\n\t\t\t\tctx.c = context;\n\t\t\t}\n\n\t\t\tif (events) {\n\t\t\t\t// We can't spread the object or else we'd lose the state proxy stuff, if it is one\n\t\t\t\t/** @type {any} */ (props).$$events = events;\n\t\t\t}\n\n\t\t\tif (hydrating) {\n\t\t\t\tassign_nodes(/** @type {TemplateNode} */ (anchor_node), null);\n\t\t\t}\n\n\t\t\tshould_intro = intro;\n\t\t\t// @ts-expect-error the public typings are not what the actual function looks like\n\t\t\tcomponent = Component(anchor_node, props) || {};\n\t\t\tshould_intro = true;\n\n\t\t\tif (hydrating) {\n\t\t\t\t/** @type {Effect} */ (active_effect).nodes_end = hydrate_node;\n\t\t\t}\n\n\t\t\tif (context) {\n\t\t\t\tpop();\n\t\t\t}\n\t\t});\n\n\t\treturn () => {\n\t\t\tfor (var event_name of registered_events) {\n\t\t\t\ttarget.removeEventListener(event_name, handle_event_propagation);\n\n\t\t\t\tvar n = /** @type {number} */ (document_listeners.get(event_name));\n\n\t\t\t\tif (--n === 0) {\n\t\t\t\t\tdocument.removeEventListener(event_name, handle_event_propagation);\n\t\t\t\t\tdocument_listeners.delete(event_name);\n\t\t\t\t} else {\n\t\t\t\t\tdocument_listeners.set(event_name, n);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\troot_event_handles.delete(event_handle);\n\n\t\t\tif (anchor_node !== anchor) {\n\t\t\t\tanchor_node.parentNode?.removeChild(anchor_node);\n\t\t\t}\n\t\t};\n\t});\n\n\tmounted_components.set(component, unmount);\n\treturn component;\n}\n\n/**\n * References of the components that were mounted or hydrated.\n * Uses a `WeakMap` to avoid memory leaks.\n */\nlet mounted_components = new WeakMap();\n\n/**\n * Unmounts a component that was previously mounted using `mount` or `hydrate`.\n *\n * Since 5.13.0, if `options.outro` is `true`, [transitions](https://svelte.dev/docs/svelte/transition) will play before the component is removed from the DOM.\n *\n * Returns a `Promise` that resolves after transitions have completed if `options.outro` is true, or immediately otherwise (prior to 5.13.0, returns `void`).\n *\n * ```js\n * import { mount, unmount } from 'svelte';\n * import App from './App.svelte';\n *\n * const app = mount(App, { target: document.body });\n *\n * // later...\n * unmount(app, { outro: true });\n * ```\n * @param {Record<string, any>} component\n * @param {{ outro?: boolean }} [options]\n * @returns {Promise<void>}\n */\nexport function unmount(component, options) {\n\tconst fn = mounted_components.get(component);\n\n\tif (fn) {\n\t\tmounted_components.delete(component);\n\t\treturn fn(options);\n\t}\n\n\tif (DEV) {\n\t\tw.lifecycle_double_unmount();\n\t}\n\n\treturn Promise.resolve();\n}\n","/** @import { Effect, TemplateNode } from '#client' */\nimport { EFFECT_TRANSPARENT } from '../../constants.js';\nimport {\n\thydrate_next,\n\thydrate_node,\n\thydrating,\n\tremove_nodes,\n\tset_hydrate_node,\n\tset_hydrating\n} from '../hydration.js';\nimport { block, branch, pause_effect, resume_effect } from '../../reactivity/effects.js';\nimport { HYDRATION_START, HYDRATION_START_ELSE, UNINITIALIZED } from '../../../../constants.js';\n\n/**\n * @param {TemplateNode} node\n * @param {(branch: (fn: (anchor: Node, elseif?: [number,number]) => void, flag?: boolean) => void) => void} fn\n * @param {[number,number]} [elseif]\n * @returns {void}\n */\nexport function if_block(node, fn, [root_index, hydrate_index] = [0, 0]) {\n\tif (hydrating && root_index === 0) {\n\t\thydrate_next();\n\t}\n\n\tvar anchor = node;\n\n\t/** @type {Effect | null} */\n\tvar consequent_effect = null;\n\n\t/** @type {Effect | null} */\n\tvar alternate_effect = null;\n\n\t/** @type {UNINITIALIZED | boolean | null} */\n\tvar condition = UNINITIALIZED;\n\n\tvar flags = root_index > 0 ? EFFECT_TRANSPARENT : 0;\n\n\tvar has_branch = false;\n\n\tconst set_branch = (\n\t\t/** @type {(anchor: Node, elseif?: [number,number]) => void} */ fn,\n\t\tflag = true\n\t) => {\n\t\thas_branch = true;\n\t\tupdate_branch(flag, fn);\n\t};\n\n\tconst update_branch = (\n\t\t/** @type {boolean | null} */ new_condition,\n\t\t/** @type {null | ((anchor: Node, elseif?: [number,number]) => void)} */ fn\n\t) => {\n\t\tif (condition === (condition = new_condition)) return;\n\n\t\t/** Whether or not there was a hydration mismatch. Needs to be a `let` or else it isn't treeshaken out */\n\t\tlet mismatch = false;\n\n\t\tif (hydrating && hydrate_index !== -1) {\n\t\t\tif (root_index === 0) {\n\t\t\t\tconst data = /** @type {Comment} */ (anchor).data;\n\t\t\t\tif (data === HYDRATION_START) {\n\t\t\t\t\thydrate_index = 0;\n\t\t\t\t} else if (data === HYDRATION_START_ELSE) {\n\t\t\t\t\thydrate_index = Infinity;\n\t\t\t\t} else {\n\t\t\t\t\thydrate_index = parseInt(data.substring(1));\n\t\t\t\t\tif (hydrate_index !== hydrate_index) {\n\t\t\t\t\t\t// if hydrate_index is NaN\n\t\t\t\t\t\t// we set an invalid index to force mismatch\n\t\t\t\t\t\thydrate_index = condition ? Infinity : -1;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tconst is_else = hydrate_index > root_index;\n\n\t\t\tif (!!condition === is_else) {\n\t\t\t\t// Hydration mismatch: remove everything inside the anchor and start fresh.\n\t\t\t\t// This could happen with `{#if browser}...{/if}`, for example\n\t\t\t\tanchor = remove_nodes();\n\n\t\t\t\tset_hydrate_node(anchor);\n\t\t\t\tset_hydrating(false);\n\t\t\t\tmismatch = true;\n\t\t\t\thydrate_index = -1; // ignore hydration in next else if\n\t\t\t}\n\t\t}\n\n\t\tif (condition) {\n\t\t\tif (consequent_effect) {\n\t\t\t\tresume_effect(consequent_effect);\n\t\t\t} else if (fn) {\n\t\t\t\tconsequent_effect = branch(() => fn(anchor));\n\t\t\t}\n\n\t\t\tif (alternate_effect) {\n\t\t\t\tpause_effect(alternate_effect, () => {\n\t\t\t\t\talternate_effect = null;\n\t\t\t\t});\n\t\t\t}\n\t\t} else {\n\t\t\tif (alternate_effect) {\n\t\t\t\tresume_effect(alternate_effect);\n\t\t\t} else if (fn) {\n\t\t\t\talternate_effect = branch(() => fn(anchor, [root_index + 1, hydrate_index]));\n\t\t\t}\n\n\t\t\tif (consequent_effect) {\n\t\t\t\tpause_effect(consequent_effect, () => {\n\t\t\t\t\tconsequent_effect = null;\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\n\t\tif (mismatch) {\n\t\t\t// continue in hydration mode\n\t\t\tset_hydrating(true);\n\t\t}\n\t};\n\n\tblock(() => {\n\t\thas_branch = false;\n\t\tfn(set_branch);\n\t\tif (!has_branch) {\n\t\t\tupdate_branch(null, null);\n\t\t}\n\t}, flags);\n\n\tif (hydrating) {\n\t\tanchor = hydrate_node;\n\t}\n}\n","/** @import { EachItem, EachState, Effect, MaybeSource, Source, TemplateNode, TransitionManager, Value } from '#client' */\nimport {\n\tEACH_INDEX_REACTIVE,\n\tEACH_IS_ANIMATED,\n\tEACH_IS_CONTROLLED,\n\tEACH_ITEM_IMMUTABLE,\n\tEACH_ITEM_REACTIVE,\n\tHYDRATION_END,\n\tHYDRATION_START_ELSE\n} from '../../../../constants.js';\nimport {\n\thydrate_next,\n\thydrate_node,\n\thydrating,\n\tremove_nodes,\n\tset_hydrate_node,\n\tset_hydrating\n} from '../hydration.js';\nimport {\n\tclear_text_content,\n\tcreate_text,\n\tget_first_child,\n\tget_next_sibling\n} from '../operations.js';\nimport {\n\tblock,\n\tbranch,\n\tdestroy_effect,\n\trun_out_transitions,\n\tpause_children,\n\tpause_effect,\n\tresume_effect\n} from '../../reactivity/effects.js';\nimport { source, mutable_source, internal_set } from '../../reactivity/sources.js';\nimport { array_from, is_array } from '../../../shared/utils.js';\nimport { INERT } from '../../constants.js';\nimport { queue_micro_task } from '../task.js';\nimport { active_effect, active_reaction, get } from '../../runtime.js';\nimport { DEV } from 'esm-env';\nimport { derived_safe_equal } from '../../reactivity/deriveds.js';\n\n/**\n * The row of a keyed each block that is currently updating. We track this\n * so that `animate:` directives have something to attach themselves to\n * @type {EachItem | null}\n */\nexport let current_each_item = null;\n\n/** @param {EachItem | null} item */\nexport function set_current_each_item(item) {\n\tcurrent_each_item = item;\n}\n\n/**\n * @param {any} _\n * @param {number} i\n */\nexport function index(_, i) {\n\treturn i;\n}\n\n/**\n * Pause multiple effects simultaneously, and coordinate their\n * subsequent destruction. Used in each blocks\n * @param {EachState} state\n * @param {EachItem[]} items\n * @param {null | Node} controlled_anchor\n * @param {Map<any, EachItem>} items_map\n */\nfunction pause_effects(state, items, controlled_anchor, items_map) {\n\t/** @type {TransitionManager[]} */\n\tvar transitions = [];\n\tvar length = items.length;\n\n\tfor (var i = 0; i < length; i++) {\n\t\tpause_children(items[i].e, transitions, true);\n\t}\n\n\tvar is_controlled = length > 0 && transitions.length === 0 && controlled_anchor !== null;\n\t// If we have a controlled anchor, it means that the each block is inside a single\n\t// DOM element, so we can apply a fast-path for clearing the contents of the element.\n\tif (is_controlled) {\n\t\tvar parent_node = /** @type {Element} */ (\n\t\t\t/** @type {Element} */ (controlled_anchor).parentNode\n\t\t);\n\t\tclear_text_content(parent_node);\n\t\tparent_node.append(/** @type {Element} */ (controlled_anchor));\n\t\titems_map.clear();\n\t\tlink(state, items[0].prev, items[length - 1].next);\n\t}\n\n\trun_out_transitions(transitions, () => {\n\t\tfor (var i = 0; i < length; i++) {\n\t\t\tvar item = items[i];\n\t\t\tif (!is_controlled) {\n\t\t\t\titems_map.delete(item.k);\n\t\t\t\tlink(state, item.prev, item.next);\n\t\t\t}\n\t\t\tdestroy_effect(item.e, !is_controlled);\n\t\t}\n\t});\n}\n\n/**\n * @template V\n * @param {Element | Comment} node The next sibling node, or the parent node if this is a 'controlled' block\n * @param {number} flags\n * @param {() => V[]} get_collection\n * @param {(value: V, index: number) => any} get_key\n * @param {(anchor: Node, item: MaybeSource<V>, index: MaybeSource<number>) => void} render_fn\n * @param {null | ((anchor: Node) => void)} fallback_fn\n * @returns {void}\n */\nexport function each(node, flags, get_collection, get_key, render_fn, fallback_fn = null) {\n\tvar anchor = node;\n\n\t/** @type {EachState} */\n\tvar state = { flags, items: new Map(), first: null };\n\n\tvar is_controlled = (flags & EACH_IS_CONTROLLED) !== 0;\n\n\tif (is_controlled) {\n\t\tvar parent_node = /** @type {Element} */ (node);\n\n\t\tanchor = hydrating\n\t\t\t? set_hydrate_node(/** @type {Comment | Text} */ (get_first_child(parent_node)))\n\t\t\t: parent_node.appendChild(create_text());\n\t}\n\n\tif (hydrating) {\n\t\thydrate_next();\n\t}\n\n\t/** @type {Effect | null} */\n\tvar fallback = null;\n\n\tvar was_empty = false;\n\n\t// TODO: ideally we could use derived for runes mode but because of the ability\n\t// to use a store which can be mutated, we can't do that here as mutating a store\n\t// will still result in the collection array being the same from the store\n\tvar each_array = derived_safe_equal(() => {\n\t\tvar collection = get_collection();\n\n\t\treturn is_array(collection) ? collection : collection == null ? [] : array_from(collection);\n\t});\n\n\tblock(() => {\n\t\tvar array = get(each_array);\n\t\tvar length = array.length;\n\n\t\tif (was_empty && length === 0) {\n\t\t\t// ignore updates if the array is empty,\n\t\t\t// and it already was empty on previous run\n\t\t\treturn;\n\t\t}\n\t\twas_empty = length === 0;\n\n\t\t/** `true` if there was a hydration mismatch. Needs to be a `let` or else it isn't treeshaken out */\n\t\tlet mismatch = false;\n\n\t\tif (hydrating) {\n\t\t\tvar is_else = /** @type {Comment} */ (anchor).data === HYDRATION_START_ELSE;\n\n\t\t\tif (is_else !== (length === 0)) {\n\t\t\t\t// hydration mismatch — remove the server-rendered DOM and start over\n\t\t\t\tanchor = remove_nodes();\n\n\t\t\t\tset_hydrate_node(anchor);\n\t\t\t\tset_hydrating(false);\n\t\t\t\tmismatch = true;\n\t\t\t}\n\t\t}\n\n\t\t// this is separate to the previous block because `hydrating` might change\n\t\tif (hydrating) {\n\t\t\t/** @type {EachItem | null} */\n\t\t\tvar prev = null;\n\n\t\t\t/** @type {EachItem} */\n\t\t\tvar item;\n\n\t\t\tfor (var i = 0; i < length; i++) {\n\t\t\t\tif (\n\t\t\t\t\thydrate_node.nodeType === 8 &&\n\t\t\t\t\t/** @type {Comment} */ (hydrate_node).data === HYDRATION_END\n\t\t\t\t) {\n\t\t\t\t\t// The server rendered fewer items than expected,\n\t\t\t\t\t// so break out and continue appending non-hydrated items\n\t\t\t\t\tanchor = /** @type {Comment} */ (hydrate_node);\n\t\t\t\t\tmismatch = true;\n\t\t\t\t\tset_hydrating(false);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\tvar value = array[i];\n\t\t\t\tvar key = get_key(value, i);\n\t\t\t\titem = create_item(\n\t\t\t\t\thydrate_node,\n\t\t\t\t\tstate,\n\t\t\t\t\tprev,\n\t\t\t\t\tnull,\n\t\t\t\t\tvalue,\n\t\t\t\t\tkey,\n\t\t\t\t\ti,\n\t\t\t\t\trender_fn,\n\t\t\t\t\tflags,\n\t\t\t\t\tget_collection\n\t\t\t\t);\n\t\t\t\tstate.items.set(key, item);\n\n\t\t\t\tprev = item;\n\t\t\t}\n\n\t\t\t// remove excess nodes\n\t\t\tif (length > 0) {\n\t\t\t\tset_hydrate_node(remove_nodes());\n\t\t\t}\n\t\t}\n\n\t\tif (!hydrating) {\n\t\t\treconcile(array, state, anchor, render_fn, flags, get_key, get_collection);\n\t\t}\n\n\t\tif (fallback_fn !== null) {\n\t\t\tif (length === 0) {\n\t\t\t\tif (fallback) {\n\t\t\t\t\tresume_effect(fallback);\n\t\t\t\t} else {\n\t\t\t\t\tfallback = branch(() => fallback_fn(anchor));\n\t\t\t\t}\n\t\t\t} else if (fallback !== null) {\n\t\t\t\tpause_effect(fallback, () => {\n\t\t\t\t\tfallback = null;\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\n\t\tif (mismatch) {\n\t\t\t// continue in hydration mode\n\t\t\tset_hydrating(true);\n\t\t}\n\n\t\t// When we mount the each block for the first time, the collection won't be\n\t\t// connected to this effect as the effect hasn't finished running yet and its deps\n\t\t// won't be assigned. However, it's possible that when reconciling the each block\n\t\t// that a mutation occurred and it's made the collection MAYBE_DIRTY, so reading the\n\t\t// collection again can provide consistency to the reactive graph again as the deriveds\n\t\t// will now be `CLEAN`.\n\t\tget(each_array);\n\t});\n\n\tif (hydrating) {\n\t\tanchor = hydrate_node;\n\t}\n}\n\n/**\n * Add, remove, or reorder items output by an each block as its input changes\n * @template V\n * @param {Array<V>} array\n * @param {EachState} state\n * @param {Element | Comment | Text} anchor\n * @param {(anchor: Node, item: MaybeSource<V>, index: number | Source<number>, collection: () => V[]) => void} render_fn\n * @param {number} flags\n * @param {(value: V, index: number) => any} get_key\n * @param {() => V[]} get_collection\n * @returns {void}\n */\nfunction reconcile(array, state, anchor, render_fn, flags, get_key, get_collection) {\n\tvar is_animated = (flags & EACH_IS_ANIMATED) !== 0;\n\tvar should_update = (flags & (EACH_ITEM_REACTIVE | EACH_INDEX_REACTIVE)) !== 0;\n\n\tvar length = array.length;\n\tvar items = state.items;\n\tvar first = state.first;\n\tvar current = first;\n\n\t/** @type {undefined | Set<EachItem>} */\n\tvar seen;\n\n\t/** @type {EachItem | null} */\n\tvar prev = null;\n\n\t/** @type {undefined | Set<EachItem>} */\n\tvar to_animate;\n\n\t/** @type {EachItem[]} */\n\tvar matched = [];\n\n\t/** @type {EachItem[]} */\n\tvar stashed = [];\n\n\t/** @type {V} */\n\tvar value;\n\n\t/** @type {any} */\n\tvar key;\n\n\t/** @type {EachItem | undefined} */\n\tvar item;\n\n\t/** @type {number} */\n\tvar i;\n\n\tif (is_animated) {\n\t\tfor (i = 0; i < length; i += 1) {\n\t\t\tvalue = array[i];\n\t\t\tkey = get_key(value, i);\n\t\t\titem = items.get(key);\n\n\t\t\tif (item !== undefined) {\n\t\t\t\titem.a?.measure();\n\t\t\t\t(to_animate ??= new Set()).add(item);\n\t\t\t}\n\t\t}\n\t}\n\n\tfor (i = 0; i < length; i += 1) {\n\t\tvalue = array[i];\n\t\tkey = get_key(value, i);\n\t\titem = items.get(key);\n\n\t\tif (item === undefined) {\n\t\t\tvar child_anchor = current ? /** @type {TemplateNode} */ (current.e.nodes_start) : anchor;\n\n\t\t\tprev = create_item(\n\t\t\t\tchild_anchor,\n\t\t\t\tstate,\n\t\t\t\tprev,\n\t\t\t\tprev === null ? state.first : prev.next,\n\t\t\t\tvalue,\n\t\t\t\tkey,\n\t\t\t\ti,\n\t\t\t\trender_fn,\n\t\t\t\tflags,\n\t\t\t\tget_collection\n\t\t\t);\n\n\t\t\titems.set(key, prev);\n\n\t\t\tmatched = [];\n\t\t\tstashed = [];\n\n\t\t\tcurrent = prev.next;\n\t\t\tcontinue;\n\t\t}\n\n\t\tif (should_update) {\n\t\t\tupdate_item(item, value, i, flags);\n\t\t}\n\n\t\tif ((item.e.f & INERT) !== 0) {\n\t\t\tresume_effect(item.e);\n\t\t\tif (is_animated) {\n\t\t\t\titem.a?.unfix();\n\t\t\t\t(to_animate ??= new Set()).delete(item);\n\t\t\t}\n\t\t}\n\n\t\tif (item !== current) {\n\t\t\tif (seen !== undefined && seen.has(item)) {\n\t\t\t\tif (matched.length < stashed.length) {\n\t\t\t\t\t// more efficient to move later items to the front\n\t\t\t\t\tvar start = stashed[0];\n\t\t\t\t\tvar j;\n\n\t\t\t\t\tprev = start.prev;\n\n\t\t\t\t\tvar a = matched[0];\n\t\t\t\t\tvar b = matched[matched.length - 1];\n\n\t\t\t\t\tfor (j = 0; j < matched.length; j += 1) {\n\t\t\t\t\t\tmove(matched[j], start, anchor);\n\t\t\t\t\t}\n\n\t\t\t\t\tfor (j = 0; j < stashed.length; j += 1) {\n\t\t\t\t\t\tseen.delete(stashed[j]);\n\t\t\t\t\t}\n\n\t\t\t\t\tlink(state, a.prev, b.next);\n\t\t\t\t\tlink(state, prev, a);\n\t\t\t\t\tlink(state, b, start);\n\n\t\t\t\t\tcurrent = start;\n\t\t\t\t\tprev = b;\n\t\t\t\t\ti -= 1;\n\n\t\t\t\t\tmatched = [];\n\t\t\t\t\tstashed = [];\n\t\t\t\t} else {\n\t\t\t\t\t// more efficient to move earlier items to the back\n\t\t\t\t\tseen.delete(item);\n\t\t\t\t\tmove(item, current, anchor);\n\n\t\t\t\t\tlink(state, item.prev, item.next);\n\t\t\t\t\tlink(state, item, prev === null ? state.first : prev.next);\n\t\t\t\t\tlink(state, prev, item);\n\n\t\t\t\t\tprev = item;\n\t\t\t\t}\n\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tmatched = [];\n\t\t\tstashed = [];\n\n\t\t\twhile (current !== null && current.k !== key) {\n\t\t\t\t// If the each block isn't inert and an item has an effect that is already inert,\n\t\t\t\t// skip over adding it to our seen Set as the item is already being handled\n\t\t\t\tif ((current.e.f & INERT) === 0) {\n\t\t\t\t\t(seen ??= new Set()).add(current);\n\t\t\t\t}\n\t\t\t\tstashed.push(current);\n\t\t\t\tcurrent = current.next;\n\t\t\t}\n\n\t\t\tif (current === null) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\titem = current;\n\t\t}\n\n\t\tmatched.push(item);\n\t\tprev = item;\n\t\tcurrent = item.next;\n\t}\n\n\tif (current !== null || seen !== undefined) {\n\t\tvar to_destroy = seen === undefined ? [] : array_from(seen);\n\n\t\twhile (current !== null) {\n\t\t\t// If the each block isn't inert, then inert effects are currently outroing and will be removed once the transition is finished\n\t\t\tif ((current.e.f & INERT) === 0) {\n\t\t\t\tto_destroy.push(current);\n\t\t\t}\n\t\t\tcurrent = current.next;\n\t\t}\n\n\t\tvar destroy_length = to_destroy.length;\n\n\t\tif (destroy_length > 0) {\n\t\t\tvar controlled_anchor = (flags & EACH_IS_CONTROLLED) !== 0 && length === 0 ? anchor : null;\n\n\t\t\tif (is_animated) {\n\t\t\t\tfor (i = 0; i < destroy_length; i += 1) {\n\t\t\t\t\tto_destroy[i].a?.measure();\n\t\t\t\t}\n\n\t\t\t\tfor (i = 0; i < destroy_length; i += 1) {\n\t\t\t\t\tto_destroy[i].a?.fix();\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tpause_effects(state, to_destroy, controlled_anchor, items);\n\t\t}\n\t}\n\n\tif (is_animated) {\n\t\tqueue_micro_task(() => {\n\t\t\tif (to_animate === undefined) return;\n\t\t\tfor (item of to_animate) {\n\t\t\t\titem.a?.apply();\n\t\t\t}\n\t\t});\n\t}\n\n\t/** @type {Effect} */ (active_effect).first = state.first && state.first.e;\n\t/** @type {Effect} */ (active_effect).last = prev && prev.e;\n}\n\n/**\n * @param {EachItem} item\n * @param {any} value\n * @param {number} index\n * @param {number} type\n * @returns {void}\n */\nfunction update_item(item, value, index, type) {\n\tif ((type & EACH_ITEM_REACTIVE) !== 0) {\n\t\tinternal_set(item.v, value);\n\t}\n\n\tif ((type & EACH_INDEX_REACTIVE) !== 0) {\n\t\tinternal_set(/** @type {Value<number>} */ (item.i), index);\n\t} else {\n\t\titem.i = index;\n\t}\n}\n\n/**\n * @template V\n * @param {Node} anchor\n * @param {EachState} state\n * @param {EachItem | null} prev\n * @param {EachItem | null} next\n * @param {V} value\n * @param {unknown} key\n * @param {number} index\n * @param {(anchor: Node, item: V | Source<V>, index: number | Value<number>, collection: () => V[]) => void} render_fn\n * @param {number} flags\n * @param {() => V[]} get_collection\n * @returns {EachItem}\n */\nfunction create_item(\n\tanchor,\n\tstate,\n\tprev,\n\tnext,\n\tvalue,\n\tkey,\n\tindex,\n\trender_fn,\n\tflags,\n\tget_collection\n) {\n\tvar previous_each_item = current_each_item;\n\tvar reactive = (flags & EACH_ITEM_REACTIVE) !== 0;\n\tvar mutable = (flags & EACH_ITEM_IMMUTABLE) === 0;\n\n\tvar v = reactive ? (mutable ? mutable_source(value) : source(value)) : value;\n\tvar i = (flags & EACH_INDEX_REACTIVE) === 0 ? index : source(index);\n\n\tif (DEV && reactive) {\n\t\t// For tracing purposes, we need to link the source signal we create with the\n\t\t// collection + index so that tracing works as intended\n\t\t/** @type {Value} */ (v).debug = () => {\n\t\t\tvar collection_index = typeof i === 'number' ? index : i.v;\n\t\t\t// eslint-disable-next-line @typescript-eslint/no-unused-expressions\n\t\t\tget_collection()[collection_index];\n\t\t};\n\t}\n\n\t/** @type {EachItem} */\n\tvar item = {\n\t\ti,\n\t\tv,\n\t\tk: key,\n\t\ta: null,\n\t\t// @ts-expect-error\n\t\te: null,\n\t\tprev,\n\t\tnext\n\t};\n\n\tcurrent_each_item = item;\n\n\ttry {\n\t\titem.e = branch(() => render_fn(anchor, v, i, get_collection), hydrating);\n\n\t\titem.e.prev = prev && prev.e;\n\t\titem.e.next = next && next.e;\n\n\t\tif (prev === null) {\n\t\t\tstate.first = item;\n\t\t} else {\n\t\t\tprev.next = item;\n\t\t\tprev.e.next = item.e;\n\t\t}\n\n\t\tif (next !== null) {\n\t\t\tnext.prev = item;\n\t\t\tnext.e.prev = item.e;\n\t\t}\n\n\t\treturn item;\n\t} finally {\n\t\tcurrent_each_item = previous_each_item;\n\t}\n}\n\n/**\n * @param {EachItem} item\n * @param {EachItem | null} next\n * @param {Text | Element | Comment} anchor\n */\nfunction move(item, next, anchor) {\n\tvar end = item.next ? /** @type {TemplateNode} */ (item.next.e.nodes_start) : anchor;\n\n\tvar dest = next ? /** @type {TemplateNode} */ (next.e.nodes_start) : anchor;\n\tvar node = /** @type {TemplateNode} */ (item.e.nodes_start);\n\n\twhile (node !== end) {\n\t\tvar next_node = /** @type {TemplateNode} */ (get_next_sibling(node));\n\t\tdest.before(node);\n\t\tnode = next_node;\n\t}\n}\n\n/**\n * @param {EachState} state\n * @param {EachItem | null} prev\n * @param {EachItem | null} next\n */\nfunction link(state, prev, next) {\n\tif (prev === null) {\n\t\tstate.first = next;\n\t} else {\n\t\tprev.next = next;\n\t\tprev.e.next = next && next.e;\n\t}\n\n\tif (next !== null) {\n\t\tnext.prev = prev;\n\t\tnext.e.prev = prev && prev.e;\n\t}\n}\n","/** @import { TemplateNode } from '#client' */\n\nimport {\n\tHYDRATION_END,\n\tHYDRATION_ERROR,\n\tHYDRATION_START,\n\tHYDRATION_START_ELSE\n} from '../../../constants.js';\nimport * as w from '../warnings.js';\nimport { get_next_sibling } from './operations.js';\n\n/**\n * Use this variable to guard everything related to hydration code so it can be treeshaken out\n * if the user doesn't use the `hydrate` method and these code paths are therefore not needed.\n */\nexport let hydrating = false;\n\n/** @param {boolean} value */\nexport function set_hydrating(value) {\n\thydrating = value;\n}\n\n/**\n * The node that is currently being hydrated. This starts out as the first node inside the opening\n * <!--[--> comment, and updates each time a component calls `$.child(...)` or `$.sibling(...)`.\n * When entering a block (e.g. `{#if ...}`), `hydrate_node` is the block opening comment; by the\n * time we leave the block it is the closing comment, which serves as the block's anchor.\n * @type {TemplateNode}\n */\nexport let hydrate_node;\n\n/** @param {TemplateNode} node */\nexport function set_hydrate_node(node) {\n\tif (node === null) {\n\t\tw.hydration_mismatch();\n\t\tthrow HYDRATION_ERROR;\n\t}\n\n\treturn (hydrate_node = node);\n}\n\nexport function hydrate_next() {\n\treturn set_hydrate_node(/** @type {TemplateNode} */ (get_next_sibling(hydrate_node)));\n}\n\n/** @param {TemplateNode} node */\nexport function reset(node) {\n\tif (!hydrating) return;\n\n\t// If the node has remaining siblings, something has gone wrong\n\tif (get_next_sibling(hydrate_node) !== null) {\n\t\tw.hydration_mismatch();\n\t\tthrow HYDRATION_ERROR;\n\t}\n\n\thydrate_node = node;\n}\n\n/**\n * @param {HTMLTemplateElement} template\n */\nexport function hydrate_template(template) {\n\tif (hydrating) {\n\t\t// @ts-expect-error TemplateNode doesn't include DocumentFragment, but it's actually fine\n\t\thydrate_node = template.content;\n\t}\n}\n\nexport function next(count = 1) {\n\tif (hydrating) {\n\t\tvar i = count;\n\t\tvar node = hydrate_node;\n\n\t\twhile (i--) {\n\t\t\tnode = /** @type {TemplateNode} */ (get_next_sibling(node));\n\t\t}\n\n\t\thydrate_node = node;\n\t}\n}\n\n/**\n * Removes all nodes starting at `hydrate_node` up until the next hydration end comment\n */\nexport function remove_nodes() {\n\tvar depth = 0;\n\tvar node = hydrate_node;\n\n\twhile (true) {\n\t\tif (node.nodeType === 8) {\n\t\t\tvar data = /** @type {Comment} */ (node).data;\n\n\t\t\tif (data === HYDRATION_END) {\n\t\t\t\tif (depth === 0) return node;\n\t\t\t\tdepth -= 1;\n\t\t\t} else if (data === HYDRATION_START || data === HYDRATION_START_ELSE) {\n\t\t\t\tdepth += 1;\n\t\t\t}\n\t\t}\n\n\t\tvar next = /** @type {TemplateNode} */ (get_next_sibling(node));\n\t\tnode.remove();\n\t\tnode = next;\n\t}\n}\n","function r(e){var t,f,n=\"\";if(\"string\"==typeof e||\"number\"==typeof e)n+=e;else if(\"object\"==typeof e)if(Array.isArray(e)){var o=e.length;for(t=0;t<o;t++)e[t]&&(f=r(e[t]))&&(n&&(n+=\" \"),n+=f)}else for(f in e)e[f]&&(n&&(n+=\" \"),n+=f);return n}export function clsx(){for(var e,t,f=0,n=\"\",o=arguments.length;f<o;f++)(e=arguments[f])&&(t=r(e))&&(n&&(n+=\" \"),n+=t);return n}export default clsx;","import { escape_html } from '../../escaping.js';\nimport { clsx as _clsx } from 'clsx';\n\n/**\n * `<div translate={false}>` should be rendered as `<div translate=\"no\">` and _not_\n * `<div translate=\"false\">`, which is equivalent to `<div translate=\"yes\">`. There\n * may be other odd cases that need to be added to this list in future\n * @type {Record<string, Map<any, string>>}\n */\nconst replacements = {\n\ttranslate: new Map([\n\t\t[true, 'yes'],\n\t\t[false, 'no']\n\t])\n};\n\n/**\n * @template V\n * @param {string} name\n * @param {V} value\n * @param {boolean} [is_boolean]\n * @returns {string}\n */\nexport function attr(name, value, is_boolean = false) {\n\tif (value == null || (!value && is_boolean)) return '';\n\tconst normalized = (name in replacements && replacements[name].get(value)) || value;\n\tconst assignment = is_boolean ? '' : `=\"${escape_html(normalized, true)}\"`;\n\treturn ` ${name}${assignment}`;\n}\n\n/**\n * Small wrapper around clsx to preserve Svelte's (weird) handling of falsy values.\n * TODO Svelte 6 revisit this, and likely turn all falsy values into the empty string (what clsx also does)\n * @param  {any} value\n */\nexport function clsx(value) {\n\tif (typeof value === 'object') {\n\t\treturn _clsx(value);\n\t} else {\n\t\treturn value ?? '';\n\t}\n}\n\nconst whitespace = [...' \\t\\n\\r\\f\\u00a0\\u000b\\ufeff'];\n\n/**\n * @param {any} value\n * @param {string | null} [hash]\n * @param {Record<string, boolean>} [directives]\n * @returns {string | null}\n */\nexport function to_class(value, hash, directives) {\n\tvar classname = value == null ? '' : '' + value;\n\n\tif (hash) {\n\t\tclassname = classname ? classname + ' ' + hash : hash;\n\t}\n\n\tif (directives) {\n\t\tfor (var key in directives) {\n\t\t\tif (directives[key]) {\n\t\t\t\tclassname = classname ? classname + ' ' + key : key;\n\t\t\t} else if (classname.length) {\n\t\t\t\tvar len = key.length;\n\t\t\t\tvar a = 0;\n\n\t\t\t\twhile ((a = classname.indexOf(key, a)) >= 0) {\n\t\t\t\t\tvar b = a + len;\n\n\t\t\t\t\tif (\n\t\t\t\t\t\t(a === 0 || whitespace.includes(classname[a - 1])) &&\n\t\t\t\t\t\t(b === classname.length || whitespace.includes(classname[b]))\n\t\t\t\t\t) {\n\t\t\t\t\t\tclassname = (a === 0 ? '' : classname.substring(0, a)) + classname.substring(b + 1);\n\t\t\t\t\t} else {\n\t\t\t\t\t\ta = b;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\treturn classname === '' ? null : classname;\n}\n\n/**\n *\n * @param {Record<string,any>} styles\n * @param {boolean} important\n */\nfunction append_styles(styles, important = false) {\n\tvar separator = important ? ' !important;' : ';';\n\tvar css = '';\n\n\tfor (var key in styles) {\n\t\tvar value = styles[key];\n\t\tif (value != null && value !== '') {\n\t\t\tcss += ' ' + key + ': ' + value + separator;\n\t\t}\n\t}\n\n\treturn css;\n}\n\n/**\n * @param {string} name\n * @returns {string}\n */\nfunction to_css_name(name) {\n\tif (name[0] !== '-' || name[1] !== '-') {\n\t\treturn name.toLowerCase();\n\t}\n\treturn name;\n}\n\n/**\n * @param {any} value\n * @param {Record<string, any> | [Record<string, any>, Record<string, any>]} [styles]\n * @returns {string | null}\n */\nexport function to_style(value, styles) {\n\tif (styles) {\n\t\tvar new_style = '';\n\n\t\t/** @type {Record<string,any> | undefined} */\n\t\tvar normal_styles;\n\n\t\t/** @type {Record<string,any> | undefined} */\n\t\tvar important_styles;\n\n\t\tif (Array.isArray(styles)) {\n\t\t\tnormal_styles = styles[0];\n\t\t\timportant_styles = styles[1];\n\t\t} else {\n\t\t\tnormal_styles = styles;\n\t\t}\n\n\t\tif (value) {\n\t\t\tvalue = String(value)\n\t\t\t\t.replaceAll(/\\s*\\/\\*.*?\\*\\/\\s*/g, '')\n\t\t\t\t.trim();\n\n\t\t\t/** @type {boolean | '\"' | \"'\"} */\n\t\t\tvar in_str = false;\n\t\t\tvar in_apo = 0;\n\t\t\tvar in_comment = false;\n\n\t\t\tvar reserved_names = [];\n\n\t\t\tif (normal_styles) {\n\t\t\t\treserved_names.push(...Object.keys(normal_styles).map(to_css_name));\n\t\t\t}\n\t\t\tif (important_styles) {\n\t\t\t\treserved_names.push(...Object.keys(important_styles).map(to_css_name));\n\t\t\t}\n\n\t\t\tvar start_index = 0;\n\t\t\tvar name_index = -1;\n\n\t\t\tconst len = value.length;\n\t\t\tfor (var i = 0; i < len; i++) {\n\t\t\t\tvar c = value[i];\n\n\t\t\t\tif (in_comment) {\n\t\t\t\t\tif (c === '/' && value[i - 1] === '*') {\n\t\t\t\t\t\tin_comment = false;\n\t\t\t\t\t}\n\t\t\t\t} else if (in_str) {\n\t\t\t\t\tif (in_str === c) {\n\t\t\t\t\t\tin_str = false;\n\t\t\t\t\t}\n\t\t\t\t} else if (c === '/' && value[i + 1] === '*') {\n\t\t\t\t\tin_comment = true;\n\t\t\t\t} else if (c === '\"' || c === \"'\") {\n\t\t\t\t\tin_str = c;\n\t\t\t\t} else if (c === '(') {\n\t\t\t\t\tin_apo++;\n\t\t\t\t} else if (c === ')') {\n\t\t\t\t\tin_apo--;\n\t\t\t\t}\n\n\t\t\t\tif (!in_comment && in_str === false && in_apo === 0) {\n\t\t\t\t\tif (c === ':' && name_index === -1) {\n\t\t\t\t\t\tname_index = i;\n\t\t\t\t\t} else if (c === ';' || i === len - 1) {\n\t\t\t\t\t\tif (name_index !== -1) {\n\t\t\t\t\t\t\tvar name = to_css_name(value.substring(start_index, name_index).trim());\n\n\t\t\t\t\t\t\tif (!reserved_names.includes(name)) {\n\t\t\t\t\t\t\t\tif (c !== ';') {\n\t\t\t\t\t\t\t\t\ti++;\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\tvar property = value.substring(start_index, i).trim();\n\t\t\t\t\t\t\t\tnew_style += ' ' + property + ';';\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tstart_index = i + 1;\n\t\t\t\t\t\tname_index = -1;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (normal_styles) {\n\t\t\tnew_style += append_styles(normal_styles);\n\t\t}\n\n\t\tif (important_styles) {\n\t\t\tnew_style += append_styles(important_styles, true);\n\t\t}\n\n\t\tnew_style = new_style.trim();\n\t\treturn new_style === '' ? null : new_style;\n\t}\n\n\treturn value == null ? null : String(value);\n}\n","import { to_class } from '../../../shared/attributes.js';\nimport { hydrating } from '../hydration.js';\n\n/**\n * @param {Element} dom\n * @param {boolean | number} is_html\n * @param {string | null} value\n * @param {string} [hash]\n * @param {Record<string, any>} [prev_classes]\n * @param {Record<string, any>} [next_classes]\n * @returns {Record<string, boolean> | undefined}\n */\nexport function set_class(dom, is_html, value, hash, prev_classes, next_classes) {\n\t// @ts-expect-error need to add __className to patched prototype\n\tvar prev = dom.__className;\n\n\tif (hydrating || prev !== value) {\n\t\tvar next_class_name = to_class(value, hash, next_classes);\n\n\t\tif (!hydrating || next_class_name !== dom.getAttribute('class')) {\n\t\t\t// Removing the attribute when the value is only an empty string causes\n\t\t\t// performance issues vs simply making the className an empty string. So\n\t\t\t// we should only remove the class if the the value is nullish\n\t\t\t// and there no hash/directives :\n\t\t\tif (next_class_name == null) {\n\t\t\t\tdom.removeAttribute('class');\n\t\t\t} else if (is_html) {\n\t\t\t\tdom.className = next_class_name;\n\t\t\t} else {\n\t\t\t\tdom.setAttribute('class', next_class_name);\n\t\t\t}\n\t\t}\n\n\t\t// @ts-expect-error need to add __className to patched prototype\n\t\tdom.__className = value;\n\t} else if (next_classes && prev_classes !== next_classes) {\n\t\tfor (var key in next_classes) {\n\t\t\tvar is_present = !!next_classes[key];\n\n\t\t\tif (prev_classes == null || is_present !== !!prev_classes[key]) {\n\t\t\t\tdom.classList.toggle(key, is_present);\n\t\t\t}\n\t\t}\n\t}\n\n\treturn next_classes;\n}\n","import { to_style } from '../../../shared/attributes.js';\nimport { hydrating } from '../hydration.js';\n\n/**\n * @param {Element & ElementCSSInlineStyle} dom\n * @param {Record<string, any>} prev\n * @param {Record<string, any>} next\n * @param {string} [priority]\n */\nfunction update_styles(dom, prev = {}, next, priority) {\n\tfor (var key in next) {\n\t\tvar value = next[key];\n\n\t\tif (prev[key] !== value) {\n\t\t\tif (next[key] == null) {\n\t\t\t\tdom.style.removeProperty(key);\n\t\t\t} else {\n\t\t\t\tdom.style.setProperty(key, value, priority);\n\t\t\t}\n\t\t}\n\t}\n}\n\n/**\n * @param {Element & ElementCSSInlineStyle} dom\n * @param {string | null} value\n * @param {Record<string, any> | [Record<string, any>, Record<string, any>]} [prev_styles]\n * @param {Record<string, any> | [Record<string, any>, Record<string, any>]} [next_styles]\n */\nexport function set_style(dom, value, prev_styles, next_styles) {\n\t// @ts-expect-error\n\tvar prev = dom.__style;\n\n\tif (hydrating || prev !== value) {\n\t\tvar next_style_attr = to_style(value, next_styles);\n\n\t\tif (!hydrating || next_style_attr !== dom.getAttribute('style')) {\n\t\t\tif (next_style_attr == null) {\n\t\t\t\tdom.removeAttribute('style');\n\t\t\t} else {\n\t\t\t\tdom.style.cssText = next_style_attr;\n\t\t\t}\n\t\t}\n\n\t\t// @ts-expect-error\n\t\tdom.__style = value;\n\t} else if (next_styles) {\n\t\tif (Array.isArray(next_styles)) {\n\t\t\tupdate_styles(dom, prev_styles?.[0], next_styles[0]);\n\t\t\tupdate_styles(dom, prev_styles?.[1], next_styles[1], 'important');\n\t\t} else {\n\t\t\tupdate_styles(dom, prev_styles, next_styles);\n\t\t}\n\t}\n\n\treturn next_styles;\n}\n","import { DEV } from 'esm-env';\nimport { hydrating, set_hydrating } from '../hydration.js';\nimport { get_descriptors, get_prototype_of } from '../../../shared/utils.js';\nimport { create_event, delegate } from './events.js';\nimport { add_form_reset_listener, autofocus } from './misc.js';\nimport * as w from '../../warnings.js';\nimport { LOADING_ATTR_SYMBOL } from '../../constants.js';\nimport { queue_idle_task } from '../task.js';\nimport { is_capture_event, is_delegated, normalize_attribute } from '../../../../utils.js';\nimport {\n\tactive_effect,\n\tactive_reaction,\n\tset_active_effect,\n\tset_active_reaction\n} from '../../runtime.js';\nimport { clsx } from '../../../shared/attributes.js';\nimport { set_class } from './class.js';\nimport { set_style } from './style.js';\nimport { NAMESPACE_HTML } from '../../../../constants.js';\n\nexport const CLASS = Symbol('class');\nexport const STYLE = Symbol('style');\n\nconst IS_CUSTOM_ELEMENT = Symbol('is custom element');\nconst IS_HTML = Symbol('is html');\n\n/**\n * The value/checked attribute in the template actually corresponds to the defaultValue property, so we need\n * to remove it upon hydration to avoid a bug when someone resets the form value.\n * @param {HTMLInputElement} input\n * @returns {void}\n */\nexport function remove_input_defaults(input) {\n\tif (!hydrating) return;\n\n\tvar already_removed = false;\n\n\t// We try and remove the default attributes later, rather than sync during hydration.\n\t// Doing it sync during hydration has a negative impact on performance, but deferring the\n\t// work in an idle task alleviates this greatly. If a form reset event comes in before\n\t// the idle callback, then we ensure the input defaults are cleared just before.\n\tvar remove_defaults = () => {\n\t\tif (already_removed) return;\n\t\talready_removed = true;\n\n\t\t// Remove the attributes but preserve the values\n\t\tif (input.hasAttribute('value')) {\n\t\t\tvar value = input.value;\n\t\t\tset_attribute(input, 'value', null);\n\t\t\tinput.value = value;\n\t\t}\n\n\t\tif (input.hasAttribute('checked')) {\n\t\t\tvar checked = input.checked;\n\t\t\tset_attribute(input, 'checked', null);\n\t\t\tinput.checked = checked;\n\t\t}\n\t};\n\n\t// @ts-expect-error\n\tinput.__on_r = remove_defaults;\n\tqueue_idle_task(remove_defaults);\n\tadd_form_reset_listener();\n}\n\n/**\n * @param {Element} element\n * @param {any} value\n */\nexport function set_value(element, value) {\n\tvar attributes = get_attributes(element);\n\n\tif (\n\t\tattributes.value ===\n\t\t\t(attributes.value =\n\t\t\t\t// treat null and undefined the same for the initial value\n\t\t\t\tvalue ?? undefined) ||\n\t\t// @ts-expect-error\n\t\t// `progress` elements always need their value set when it's `0`\n\t\t(element.value === value && (value !== 0 || element.nodeName !== 'PROGRESS'))\n\t) {\n\t\treturn;\n\t}\n\n\t// @ts-expect-error\n\telement.value = value ?? '';\n}\n\n/**\n * @param {Element} element\n * @param {boolean} checked\n */\nexport function set_checked(element, checked) {\n\tvar attributes = get_attributes(element);\n\n\tif (\n\t\tattributes.checked ===\n\t\t(attributes.checked =\n\t\t\t// treat null and undefined the same for the initial value\n\t\t\tchecked ?? undefined)\n\t) {\n\t\treturn;\n\t}\n\n\t// @ts-expect-error\n\telement.checked = checked;\n}\n\n/**\n * Sets the `selected` attribute on an `option` element.\n * Not set through the property because that doesn't reflect to the DOM,\n * which means it wouldn't be taken into account when a form is reset.\n * @param {HTMLOptionElement} element\n * @param {boolean} selected\n */\nexport function set_selected(element, selected) {\n\tif (selected) {\n\t\t// The selected option could've changed via user selection, and\n\t\t// setting the value without this check would set it back.\n\t\tif (!element.hasAttribute('selected')) {\n\t\t\telement.setAttribute('selected', '');\n\t\t}\n\t} else {\n\t\telement.removeAttribute('selected');\n\t}\n}\n\n/**\n * Applies the default checked property without influencing the current checked property.\n * @param {HTMLInputElement} element\n * @param {boolean} checked\n */\nexport function set_default_checked(element, checked) {\n\tconst existing_value = element.checked;\n\telement.defaultChecked = checked;\n\telement.checked = existing_value;\n}\n\n/**\n * Applies the default value property without influencing the current value property.\n * @param {HTMLInputElement | HTMLTextAreaElement} element\n * @param {string} value\n */\nexport function set_default_value(element, value) {\n\tconst existing_value = element.value;\n\telement.defaultValue = value;\n\telement.value = existing_value;\n}\n\n/**\n * @param {Element} element\n * @param {string} attribute\n * @param {string | null} value\n * @param {boolean} [skip_warning]\n */\nexport function set_attribute(element, attribute, value, skip_warning) {\n\tvar attributes = get_attributes(element);\n\n\tif (hydrating) {\n\t\tattributes[attribute] = element.getAttribute(attribute);\n\n\t\tif (\n\t\t\tattribute === 'src' ||\n\t\t\tattribute === 'srcset' ||\n\t\t\t(attribute === 'href' && element.nodeName === 'LINK')\n\t\t) {\n\t\t\tif (!skip_warning) {\n\t\t\t\tcheck_src_in_dev_hydration(element, attribute, value ?? '');\n\t\t\t}\n\n\t\t\t// If we reset these attributes, they would result in another network request, which we want to avoid.\n\t\t\t// We assume they are the same between client and server as checking if they are equal is expensive\n\t\t\t// (we can't just compare the strings as they can be different between client and server but result in the\n\t\t\t// same url, so we would need to create hidden anchor elements to compare them)\n\t\t\treturn;\n\t\t}\n\t}\n\n\tif (attributes[attribute] === (attributes[attribute] = value)) return;\n\n\tif (attribute === 'loading') {\n\t\t// @ts-expect-error\n\t\telement[LOADING_ATTR_SYMBOL] = value;\n\t}\n\n\tif (value == null) {\n\t\telement.removeAttribute(attribute);\n\t} else if (typeof value !== 'string' && get_setters(element).includes(attribute)) {\n\t\t// @ts-ignore\n\t\telement[attribute] = value;\n\t} else {\n\t\telement.setAttribute(attribute, value);\n\t}\n}\n\n/**\n * @param {Element} dom\n * @param {string} attribute\n * @param {string} value\n */\nexport function set_xlink_attribute(dom, attribute, value) {\n\tdom.setAttributeNS('http://www.w3.org/1999/xlink', attribute, value);\n}\n\n/**\n * @param {HTMLElement} node\n * @param {string} prop\n * @param {any} value\n */\nexport function set_custom_element_data(node, prop, value) {\n\t// We need to ensure that setting custom element props, which can\n\t// invoke lifecycle methods on other custom elements, does not also\n\t// associate those lifecycle methods with the current active reaction\n\t// or effect\n\tvar previous_reaction = active_reaction;\n\tvar previous_effect = active_effect;\n\n\t// If we're hydrating but the custom element is from Svelte, and it already scaffolded,\n\t// then it might run block logic in hydration mode, which we have to prevent.\n\tlet was_hydrating = hydrating;\n\tif (hydrating) {\n\t\tset_hydrating(false);\n\t}\n\n\tset_active_reaction(null);\n\tset_active_effect(null);\n\n\ttry {\n\t\tif (\n\t\t\t// `style` should use `set_attribute` rather than the setter\n\t\t\tprop !== 'style' &&\n\t\t\t// Don't compute setters for custom elements while they aren't registered yet,\n\t\t\t// because during their upgrade/instantiation they might add more setters.\n\t\t\t// Instead, fall back to a simple \"an object, then set as property\" heuristic.\n\t\t\t(setters_cache.has(node.nodeName) ||\n\t\t\t// customElements may not be available in browser extension contexts\n\t\t\t!customElements ||\n\t\t\tcustomElements.get(node.tagName.toLowerCase())\n\t\t\t\t? get_setters(node).includes(prop)\n\t\t\t\t: value && typeof value === 'object')\n\t\t) {\n\t\t\t// @ts-expect-error\n\t\t\tnode[prop] = value;\n\t\t} else {\n\t\t\t// We did getters etc checks already, stringify before passing to set_attribute\n\t\t\t// to ensure it doesn't invoke the same logic again, and potentially populating\n\t\t\t// the setters cache too early.\n\t\t\tset_attribute(node, prop, value == null ? value : String(value));\n\t\t}\n\t} finally {\n\t\tset_active_reaction(previous_reaction);\n\t\tset_active_effect(previous_effect);\n\t\tif (was_hydrating) {\n\t\t\tset_hydrating(true);\n\t\t}\n\t}\n}\n\n/**\n * Spreads attributes onto a DOM element, taking into account the currently set attributes\n * @param {Element & ElementCSSInlineStyle} element\n * @param {Record<string | symbol, any> | undefined} prev\n * @param {Record<string | symbol, any>} next New attributes - this function mutates this object\n * @param {string} [css_hash]\n * @param {boolean} [skip_warning]\n * @returns {Record<string, any>}\n */\nexport function set_attributes(element, prev, next, css_hash, skip_warning = false) {\n\tvar attributes = get_attributes(element);\n\n\tvar is_custom_element = attributes[IS_CUSTOM_ELEMENT];\n\tvar preserve_attribute_case = !attributes[IS_HTML];\n\n\t// If we're hydrating but the custom element is from Svelte, and it already scaffolded,\n\t// then it might run block logic in hydration mode, which we have to prevent.\n\tlet is_hydrating_custom_element = hydrating && is_custom_element;\n\tif (is_hydrating_custom_element) {\n\t\tset_hydrating(false);\n\t}\n\n\tvar current = prev || {};\n\tvar is_option_element = element.tagName === 'OPTION';\n\n\tfor (var key in prev) {\n\t\tif (!(key in next)) {\n\t\t\tnext[key] = null;\n\t\t}\n\t}\n\n\tif (next.class) {\n\t\tnext.class = clsx(next.class);\n\t} else if (css_hash || next[CLASS]) {\n\t\tnext.class = null; /* force call to set_class() */\n\t}\n\n\tif (next[STYLE]) {\n\t\tnext.style ??= null; /* force call to set_style() */\n\t}\n\n\tvar setters = get_setters(element);\n\n\t// since key is captured we use const\n\tfor (const key in next) {\n\t\t// let instead of var because referenced in a closure\n\t\tlet value = next[key];\n\n\t\t// Up here because we want to do this for the initial value, too, even if it's undefined,\n\t\t// and this wouldn't be reached in case of undefined because of the equality check below\n\t\tif (is_option_element && key === 'value' && value == null) {\n\t\t\t// The <option> element is a special case because removing the value attribute means\n\t\t\t// the value is set to the text content of the option element, and setting the value\n\t\t\t// to null or undefined means the value is set to the string \"null\" or \"undefined\".\n\t\t\t// To align with how we handle this case in non-spread-scenarios, this logic is needed.\n\t\t\t// There's a super-edge-case bug here that is left in in favor of smaller code size:\n\t\t\t// Because of the \"set missing props to null\" logic above, we can't differentiate\n\t\t\t// between a missing value and an explicitly set value of null or undefined. That means\n\t\t\t// that once set, the value attribute of an <option> element can't be removed. This is\n\t\t\t// a very rare edge case, and removing the attribute altogether isn't possible either\n\t\t\t// for the <option value={undefined}> case, so we're not losing any functionality here.\n\t\t\t// @ts-ignore\n\t\t\telement.value = element.__value = '';\n\t\t\tcurrent[key] = value;\n\t\t\tcontinue;\n\t\t}\n\n\t\tif (key === 'class') {\n\t\t\tvar is_html = element.namespaceURI === 'http://www.w3.org/1999/xhtml';\n\t\t\tset_class(element, is_html, value, css_hash, prev?.[CLASS], next[CLASS]);\n\t\t\tcurrent[key] = value;\n\t\t\tcurrent[CLASS] = next[CLASS];\n\t\t\tcontinue;\n\t\t}\n\n\t\tif (key === 'style') {\n\t\t\tset_style(element, value, prev?.[STYLE], next[STYLE]);\n\t\t\tcurrent[key] = value;\n\t\t\tcurrent[STYLE] = next[STYLE];\n\t\t\tcontinue;\n\t\t}\n\n\t\tvar prev_value = current[key];\n\t\tif (value === prev_value) continue;\n\n\t\tcurrent[key] = value;\n\n\t\tvar prefix = key[0] + key[1]; // this is faster than key.slice(0, 2)\n\t\tif (prefix === '$$') continue;\n\n\t\tif (prefix === 'on') {\n\t\t\t/** @type {{ capture?: true }} */\n\t\t\tconst opts = {};\n\t\t\tconst event_handle_key = '$$' + key;\n\t\t\tlet event_name = key.slice(2);\n\t\t\tvar delegated = is_delegated(event_name);\n\n\t\t\tif (is_capture_event(event_name)) {\n\t\t\t\tevent_name = event_name.slice(0, -7);\n\t\t\t\topts.capture = true;\n\t\t\t}\n\n\t\t\tif (!delegated && prev_value) {\n\t\t\t\t// Listening to same event but different handler -> our handle function below takes care of this\n\t\t\t\t// If we were to remove and add listeners in this case, it could happen that the event is \"swallowed\"\n\t\t\t\t// (the browser seems to not know yet that a new one exists now) and doesn't reach the handler\n\t\t\t\t// https://github.com/sveltejs/svelte/issues/11903\n\t\t\t\tif (value != null) continue;\n\n\t\t\t\telement.removeEventListener(event_name, current[event_handle_key], opts);\n\t\t\t\tcurrent[event_handle_key] = null;\n\t\t\t}\n\n\t\t\tif (value != null) {\n\t\t\t\tif (!delegated) {\n\t\t\t\t\t/**\n\t\t\t\t\t * @this {any}\n\t\t\t\t\t * @param {Event} evt\n\t\t\t\t\t */\n\t\t\t\t\tfunction handle(evt) {\n\t\t\t\t\t\tcurrent[key].call(this, evt);\n\t\t\t\t\t}\n\n\t\t\t\t\tcurrent[event_handle_key] = create_event(event_name, element, handle, opts);\n\t\t\t\t} else {\n\t\t\t\t\t// @ts-ignore\n\t\t\t\t\telement[`__${event_name}`] = value;\n\t\t\t\t\tdelegate([event_name]);\n\t\t\t\t}\n\t\t\t} else if (delegated) {\n\t\t\t\t// @ts-ignore\n\t\t\t\telement[`__${event_name}`] = undefined;\n\t\t\t}\n\t\t} else if (key === 'style') {\n\t\t\t// avoid using the setter\n\t\t\tset_attribute(element, key, value);\n\t\t} else if (key === 'autofocus') {\n\t\t\tautofocus(/** @type {HTMLElement} */ (element), Boolean(value));\n\t\t} else if (!is_custom_element && (key === '__value' || (key === 'value' && value != null))) {\n\t\t\t// @ts-ignore We're not running this for custom elements because __value is actually\n\t\t\t// how Lit stores the current value on the element, and messing with that would break things.\n\t\t\telement.value = element.__value = value;\n\t\t} else if (key === 'selected' && is_option_element) {\n\t\t\tset_selected(/** @type {HTMLOptionElement} */ (element), value);\n\t\t} else {\n\t\t\tvar name = key;\n\t\t\tif (!preserve_attribute_case) {\n\t\t\t\tname = normalize_attribute(name);\n\t\t\t}\n\n\t\t\tvar is_default = name === 'defaultValue' || name === 'defaultChecked';\n\n\t\t\tif (value == null && !is_custom_element && !is_default) {\n\t\t\t\tattributes[key] = null;\n\n\t\t\t\tif (name === 'value' || name === 'checked') {\n\t\t\t\t\t// removing value/checked also removes defaultValue/defaultChecked — preserve\n\t\t\t\t\tlet input = /** @type {HTMLInputElement} */ (element);\n\t\t\t\t\tconst use_default = prev === undefined;\n\t\t\t\t\tif (name === 'value') {\n\t\t\t\t\t\tlet previous = input.defaultValue;\n\t\t\t\t\t\tinput.removeAttribute(name);\n\t\t\t\t\t\tinput.defaultValue = previous;\n\t\t\t\t\t\t// @ts-ignore\n\t\t\t\t\t\tinput.value = input.__value = use_default ? previous : null;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tlet previous = input.defaultChecked;\n\t\t\t\t\t\tinput.removeAttribute(name);\n\t\t\t\t\t\tinput.defaultChecked = previous;\n\t\t\t\t\t\tinput.checked = use_default ? previous : false;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\telement.removeAttribute(key);\n\t\t\t\t}\n\t\t\t} else if (\n\t\t\t\tis_default ||\n\t\t\t\t(setters.includes(name) && (is_custom_element || typeof value !== 'string'))\n\t\t\t) {\n\t\t\t\t// @ts-ignore\n\t\t\t\telement[name] = value;\n\t\t\t} else if (typeof value !== 'function') {\n\t\t\t\tset_attribute(element, name, value, skip_warning);\n\t\t\t}\n\t\t}\n\t}\n\n\tif (is_hydrating_custom_element) {\n\t\tset_hydrating(true);\n\t}\n\n\treturn current;\n}\n\n/**\n *\n * @param {Element} element\n */\nfunction get_attributes(element) {\n\treturn /** @type {Record<string | symbol, unknown>} **/ (\n\t\t// @ts-expect-error\n\t\telement.__attributes ??= {\n\t\t\t[IS_CUSTOM_ELEMENT]: element.nodeName.includes('-'),\n\t\t\t[IS_HTML]: element.namespaceURI === NAMESPACE_HTML\n\t\t}\n\t);\n}\n\n/** @type {Map<string, string[]>} */\nvar setters_cache = new Map();\n\n/** @param {Element} element */\nfunction get_setters(element) {\n\tvar setters = setters_cache.get(element.nodeName);\n\tif (setters) return setters;\n\tsetters_cache.set(element.nodeName, (setters = []));\n\n\tvar descriptors;\n\tvar proto = element; // In the case of custom elements there might be setters on the instance\n\tvar element_proto = Element.prototype;\n\n\t// Stop at Element, from there on there's only unnecessary setters we're not interested in\n\t// Do not use contructor.name here as that's unreliable in some browser environments\n\twhile (element_proto !== proto) {\n\t\tdescriptors = get_descriptors(proto);\n\n\t\tfor (var key in descriptors) {\n\t\t\tif (descriptors[key].set) {\n\t\t\t\tsetters.push(key);\n\t\t\t}\n\t\t}\n\n\t\tproto = get_prototype_of(proto);\n\t}\n\n\treturn setters;\n}\n\n/**\n * @param {any} element\n * @param {string} attribute\n * @param {string} value\n */\nfunction check_src_in_dev_hydration(element, attribute, value) {\n\tif (!DEV) return;\n\tif (attribute === 'srcset' && srcset_url_equal(element, value)) return;\n\tif (src_url_equal(element.getAttribute(attribute) ?? '', value)) return;\n\n\tw.hydration_attribute_changed(\n\t\tattribute,\n\t\telement.outerHTML.replace(element.innerHTML, element.innerHTML && '...'),\n\t\tString(value)\n\t);\n}\n\n/**\n * @param {string} element_src\n * @param {string} url\n * @returns {boolean}\n */\nfunction src_url_equal(element_src, url) {\n\tif (element_src === url) return true;\n\treturn new URL(element_src, document.baseURI).href === new URL(url, document.baseURI).href;\n}\n\n/** @param {string} srcset */\nfunction split_srcset(srcset) {\n\treturn srcset.split(',').map((src) => src.trim().split(' ').filter(Boolean));\n}\n\n/**\n * @param {HTMLSourceElement | HTMLImageElement} element\n * @param {string} srcset\n * @returns {boolean}\n */\nfunction srcset_url_equal(element, srcset) {\n\tvar element_urls = split_srcset(element.srcset);\n\tvar urls = split_srcset(srcset);\n\n\treturn (\n\t\turls.length === element_urls.length &&\n\t\turls.every(\n\t\t\t([url, width], i) =>\n\t\t\t\twidth === element_urls[i][1] &&\n\t\t\t\t// We need to test both ways because Vite will create an a full URL with\n\t\t\t\t// `new URL(asset, import.meta.url).href` for the client when `base: './'`, and the\n\t\t\t\t// relative URLs inside srcset are not automatically resolved to absolute URLs by\n\t\t\t\t// browsers (in contrast to img.src). This means both SSR and DOM code could\n\t\t\t\t// contain relative or absolute URLs.\n\t\t\t\t(src_url_equal(element_urls[i][0], url) || src_url_equal(url, element_urls[i][0]))\n\t\t)\n\t);\n}\n","/** @import { Raf } from '#client' */\nimport { noop } from '../shared/utils.js';\n\nimport { BROWSER } from 'esm-env';\n\nconst now = BROWSER ? () => performance.now() : () => Date.now();\n\n/** @type {Raf} */\nexport const raf = {\n\t// don't access requestAnimationFrame eagerly outside method\n\t// this allows basic testing of user code without JSDOM\n\t// bunder will eval and remove ternary when the user's app is built\n\ttick: /** @param {any} _ */ (_) => (BROWSER ? requestAnimationFrame : noop)(_),\n\tnow: () => now(),\n\ttasks: new Set()\n};\n","/** @import { TaskCallback, Task, TaskEntry } from '#client' */\nimport { raf } from './timing.js';\n\n// TODO move this into timing.js where it probably belongs\n\n/**\n * @returns {void}\n */\nfunction run_tasks() {\n\t// use `raf.now()` instead of the `requestAnimationFrame` callback argument, because\n\t// otherwise things can get wonky https://github.com/sveltejs/svelte/pull/14541\n\tconst now = raf.now();\n\n\traf.tasks.forEach((task) => {\n\t\tif (!task.c(now)) {\n\t\t\traf.tasks.delete(task);\n\t\t\ttask.f();\n\t\t}\n\t});\n\n\tif (raf.tasks.size !== 0) {\n\t\traf.tick(run_tasks);\n\t}\n}\n\n/**\n * Creates a new task that runs on each raf frame\n * until it returns a falsy value or is aborted\n * @param {TaskCallback} callback\n * @returns {Task}\n */\nexport function loop(callback) {\n\t/** @type {TaskEntry} */\n\tlet task;\n\n\tif (raf.tasks.size === 0) {\n\t\traf.tick(run_tasks);\n\t}\n\n\treturn {\n\t\tpromise: new Promise((fulfill) => {\n\t\t\traf.tasks.add((task = { c: callback, f: fulfill }));\n\t\t}),\n\t\tabort() {\n\t\t\traf.tasks.delete(task);\n\t\t}\n\t};\n}\n","/** @import { AnimateFn, Animation, AnimationConfig, EachItem, Effect, TransitionFn, TransitionManager } from '#client' */\nimport { noop, is_function } from '../../../shared/utils.js';\nimport { effect } from '../../reactivity/effects.js';\nimport {\n\tactive_effect,\n\tactive_reaction,\n\tset_active_effect,\n\tset_active_reaction,\n\tuntrack\n} from '../../runtime.js';\nimport { loop } from '../../loop.js';\nimport { should_intro } from '../../render.js';\nimport { current_each_item } from '../blocks/each.js';\nimport { TRANSITION_GLOBAL, TRANSITION_IN, TRANSITION_OUT } from '../../../../constants.js';\nimport { BLOCK_EFFECT, EFFECT_RAN, EFFECT_TRANSPARENT } from '../../constants.js';\nimport { queue_micro_task } from '../task.js';\nimport { without_reactive_context } from './bindings/shared.js';\n\n/**\n * @param {Element} element\n * @param {'introstart' | 'introend' | 'outrostart' | 'outroend'} type\n * @returns {void}\n */\nfunction dispatch_event(element, type) {\n\twithout_reactive_context(() => {\n\t\telement.dispatchEvent(new CustomEvent(type));\n\t});\n}\n\n/**\n * Converts a property to the camel-case format expected by Element.animate(), KeyframeEffect(), and KeyframeEffect.setKeyframes().\n * @param {string} style\n * @returns {string}\n */\nfunction css_property_to_camelcase(style) {\n\t// in compliance with spec\n\tif (style === 'float') return 'cssFloat';\n\tif (style === 'offset') return 'cssOffset';\n\n\t// do not rename custom @properties\n\tif (style.startsWith('--')) return style;\n\n\tconst parts = style.split('-');\n\tif (parts.length === 1) return parts[0];\n\treturn (\n\t\tparts[0] +\n\t\tparts\n\t\t\t.slice(1)\n\t\t\t.map(/** @param {any} word */ (word) => word[0].toUpperCase() + word.slice(1))\n\t\t\t.join('')\n\t);\n}\n\n/**\n * @param {string} css\n * @returns {Keyframe}\n */\nfunction css_to_keyframe(css) {\n\t/** @type {Keyframe} */\n\tconst keyframe = {};\n\tconst parts = css.split(';');\n\tfor (const part of parts) {\n\t\tconst [property, value] = part.split(':');\n\t\tif (!property || value === undefined) break;\n\n\t\tconst formatted_property = css_property_to_camelcase(property.trim());\n\t\tkeyframe[formatted_property] = value.trim();\n\t}\n\treturn keyframe;\n}\n\n/** @param {number} t */\nconst linear = (t) => t;\n\n/**\n * Called inside keyed `{#each ...}` blocks (as `$.animation(...)`). This creates an animation manager\n * and attaches it to the block, so that moves can be animated following reconciliation.\n * @template P\n * @param {Element} element\n * @param {() => AnimateFn<P | undefined>} get_fn\n * @param {(() => P) | null} get_params\n */\nexport function animation(element, get_fn, get_params) {\n\tvar item = /** @type {EachItem} */ (current_each_item);\n\n\t/** @type {DOMRect} */\n\tvar from;\n\n\t/** @type {DOMRect} */\n\tvar to;\n\n\t/** @type {Animation | undefined} */\n\tvar animation;\n\n\t/** @type {null | { position: string, width: string, height: string, transform: string }} */\n\tvar original_styles = null;\n\n\titem.a ??= {\n\t\telement,\n\t\tmeasure() {\n\t\t\tfrom = this.element.getBoundingClientRect();\n\t\t},\n\t\tapply() {\n\t\t\tanimation?.abort();\n\n\t\t\tto = this.element.getBoundingClientRect();\n\n\t\t\tif (\n\t\t\t\tfrom.left !== to.left ||\n\t\t\t\tfrom.right !== to.right ||\n\t\t\t\tfrom.top !== to.top ||\n\t\t\t\tfrom.bottom !== to.bottom\n\t\t\t) {\n\t\t\t\tconst options = get_fn()(this.element, { from, to }, get_params?.());\n\n\t\t\t\tanimation = animate(this.element, options, undefined, 1, () => {\n\t\t\t\t\tanimation?.abort();\n\t\t\t\t\tanimation = undefined;\n\t\t\t\t});\n\t\t\t}\n\t\t},\n\t\tfix() {\n\t\t\t// If an animation is already running, transforming the element is likely to fail,\n\t\t\t// because the styles applied by the animation take precedence. In the case of crossfade,\n\t\t\t// that means the `translate(...)` of the crossfade transition overrules the `translate(...)`\n\t\t\t// we would apply below, leading to the element jumping somewhere to the top left.\n\t\t\tif (element.getAnimations().length) return;\n\n\t\t\t// It's important to destructure these to get fixed values - the object itself has getters,\n\t\t\t// and changing the style to 'absolute' can for example influence the width.\n\t\t\tvar { position, width, height } = getComputedStyle(element);\n\n\t\t\tif (position !== 'absolute' && position !== 'fixed') {\n\t\t\t\tvar style = /** @type {HTMLElement | SVGElement} */ (element).style;\n\n\t\t\t\toriginal_styles = {\n\t\t\t\t\tposition: style.position,\n\t\t\t\t\twidth: style.width,\n\t\t\t\t\theight: style.height,\n\t\t\t\t\ttransform: style.transform\n\t\t\t\t};\n\n\t\t\t\tstyle.position = 'absolute';\n\t\t\t\tstyle.width = width;\n\t\t\t\tstyle.height = height;\n\t\t\t\tvar to = element.getBoundingClientRect();\n\n\t\t\t\tif (from.left !== to.left || from.top !== to.top) {\n\t\t\t\t\tvar transform = `translate(${from.left - to.left}px, ${from.top - to.top}px)`;\n\t\t\t\t\tstyle.transform = style.transform ? `${style.transform} ${transform}` : transform;\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\tunfix() {\n\t\t\tif (original_styles) {\n\t\t\t\tvar style = /** @type {HTMLElement | SVGElement} */ (element).style;\n\n\t\t\t\tstyle.position = original_styles.position;\n\t\t\t\tstyle.width = original_styles.width;\n\t\t\t\tstyle.height = original_styles.height;\n\t\t\t\tstyle.transform = original_styles.transform;\n\t\t\t}\n\t\t}\n\t};\n\n\t// in the case of a `<svelte:element>`, it's possible for `$.animation(...)` to be called\n\t// when an animation manager already exists, if the tag changes. in that case, we need to\n\t// swap out the element rather than creating a new manager, in case it happened at the same\n\t// moment as a reconciliation\n\titem.a.element = element;\n}\n\n/**\n * Called inside block effects as `$.transition(...)`. This creates a transition manager and\n * attaches it to the current effect — later, inside `pause_effect` and `resume_effect`, we\n * use this to create `intro` and `outro` transitions.\n * @template P\n * @param {number} flags\n * @param {HTMLElement} element\n * @param {() => TransitionFn<P | undefined>} get_fn\n * @param {(() => P) | null} get_params\n * @returns {void}\n */\nexport function transition(flags, element, get_fn, get_params) {\n\tvar is_intro = (flags & TRANSITION_IN) !== 0;\n\tvar is_outro = (flags & TRANSITION_OUT) !== 0;\n\tvar is_both = is_intro && is_outro;\n\tvar is_global = (flags & TRANSITION_GLOBAL) !== 0;\n\n\t/** @type {'in' | 'out' | 'both'} */\n\tvar direction = is_both ? 'both' : is_intro ? 'in' : 'out';\n\n\t/** @type {AnimationConfig | ((opts: { direction: 'in' | 'out' }) => AnimationConfig) | undefined} */\n\tvar current_options;\n\n\tvar inert = element.inert;\n\n\t/**\n\t * The default overflow style, stashed so we can revert changes during the transition\n\t * that are necessary to work around a Safari <18 bug\n\t * TODO 6.0 remove this, if older versions of Safari have died out enough\n\t */\n\tvar overflow = element.style.overflow;\n\n\t/** @type {Animation | undefined} */\n\tvar intro;\n\n\t/** @type {Animation | undefined} */\n\tvar outro;\n\n\tfunction get_options() {\n\t\tvar previous_reaction = active_reaction;\n\t\tvar previous_effect = active_effect;\n\t\tset_active_reaction(null);\n\t\tset_active_effect(null);\n\t\ttry {\n\t\t\t// If a transition is still ongoing, we use the existing options rather than generating\n\t\t\t// new ones. This ensures that reversible transitions reverse smoothly, rather than\n\t\t\t// jumping to a new spot because (for example) a different `duration` was used\n\t\t\treturn (current_options ??= get_fn()(element, get_params?.() ?? /** @type {P} */ ({}), {\n\t\t\t\tdirection\n\t\t\t}));\n\t\t} finally {\n\t\t\tset_active_reaction(previous_reaction);\n\t\t\tset_active_effect(previous_effect);\n\t\t}\n\t}\n\n\t/** @type {TransitionManager} */\n\tvar transition = {\n\t\tis_global,\n\t\tin() {\n\t\t\telement.inert = inert;\n\n\t\t\tif (!is_intro) {\n\t\t\t\toutro?.abort();\n\t\t\t\toutro?.reset?.();\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (!is_outro) {\n\t\t\t\t// if we intro then outro then intro again, we want to abort the first intro,\n\t\t\t\t// if it's not a bidirectional transition\n\t\t\t\tintro?.abort();\n\t\t\t}\n\n\t\t\tdispatch_event(element, 'introstart');\n\n\t\t\tintro = animate(element, get_options(), outro, 1, () => {\n\t\t\t\tdispatch_event(element, 'introend');\n\n\t\t\t\t// Ensure we cancel the animation to prevent leaking\n\t\t\t\tintro?.abort();\n\t\t\t\tintro = current_options = undefined;\n\n\t\t\t\telement.style.overflow = overflow;\n\t\t\t});\n\t\t},\n\t\tout(fn) {\n\t\t\tif (!is_outro) {\n\t\t\t\tfn?.();\n\t\t\t\tcurrent_options = undefined;\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\telement.inert = true;\n\n\t\t\tdispatch_event(element, 'outrostart');\n\n\t\t\toutro = animate(element, get_options(), intro, 0, () => {\n\t\t\t\tdispatch_event(element, 'outroend');\n\t\t\t\tfn?.();\n\t\t\t});\n\t\t},\n\t\tstop: () => {\n\t\t\tintro?.abort();\n\t\t\toutro?.abort();\n\t\t}\n\t};\n\n\tvar e = /** @type {Effect} */ (active_effect);\n\n\t(e.transitions ??= []).push(transition);\n\n\t// if this is a local transition, we only want to run it if the parent (branch) effect's\n\t// parent (block) effect is where the state change happened. we can determine that by\n\t// looking at whether the block effect is currently initializing\n\tif (is_intro && should_intro) {\n\t\tvar run = is_global;\n\n\t\tif (!run) {\n\t\t\tvar block = /** @type {Effect | null} */ (e.parent);\n\n\t\t\t// skip over transparent blocks (e.g. snippets, else-if blocks)\n\t\t\twhile (block && (block.f & EFFECT_TRANSPARENT) !== 0) {\n\t\t\t\twhile ((block = block.parent)) {\n\t\t\t\t\tif ((block.f & BLOCK_EFFECT) !== 0) break;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\trun = !block || (block.f & EFFECT_RAN) !== 0;\n\t\t}\n\n\t\tif (run) {\n\t\t\teffect(() => {\n\t\t\t\tuntrack(() => transition.in());\n\t\t\t});\n\t\t}\n\t}\n}\n\n/**\n * Animates an element, according to the provided configuration\n * @param {Element} element\n * @param {AnimationConfig | ((opts: { direction: 'in' | 'out' }) => AnimationConfig)} options\n * @param {Animation | undefined} counterpart The corresponding intro/outro to this outro/intro\n * @param {number} t2 The target `t` value — `1` for intro, `0` for outro\n * @param {(() => void)} on_finish Called after successfully completing the animation\n * @returns {Animation}\n */\nfunction animate(element, options, counterpart, t2, on_finish) {\n\tvar is_intro = t2 === 1;\n\n\tif (is_function(options)) {\n\t\t// In the case of a deferred transition (such as `crossfade`), `option` will be\n\t\t// a function rather than an `AnimationConfig`. We need to call this function\n\t\t// once the DOM has been updated...\n\t\t/** @type {Animation} */\n\t\tvar a;\n\t\tvar aborted = false;\n\n\t\tqueue_micro_task(() => {\n\t\t\tif (aborted) return;\n\t\t\tvar o = options({ direction: is_intro ? 'in' : 'out' });\n\t\t\ta = animate(element, o, counterpart, t2, on_finish);\n\t\t});\n\n\t\t// ...but we want to do so without using `async`/`await` everywhere, so\n\t\t// we return a facade that allows everything to remain synchronous\n\t\treturn {\n\t\t\tabort: () => {\n\t\t\t\taborted = true;\n\t\t\t\ta?.abort();\n\t\t\t},\n\t\t\tdeactivate: () => a.deactivate(),\n\t\t\treset: () => a.reset(),\n\t\t\tt: () => a.t()\n\t\t};\n\t}\n\n\tcounterpart?.deactivate();\n\n\tif (!options?.duration) {\n\t\ton_finish();\n\n\t\treturn {\n\t\t\tabort: noop,\n\t\t\tdeactivate: noop,\n\t\t\treset: noop,\n\t\t\tt: () => t2\n\t\t};\n\t}\n\n\tconst { delay = 0, css, tick, easing = linear } = options;\n\n\tvar keyframes = [];\n\n\tif (is_intro && counterpart === undefined) {\n\t\tif (tick) {\n\t\t\ttick(0, 1); // TODO put in nested effect, to avoid interleaved reads/writes?\n\t\t}\n\n\t\tif (css) {\n\t\t\tvar styles = css_to_keyframe(css(0, 1));\n\t\t\tkeyframes.push(styles, styles);\n\t\t}\n\t}\n\n\tvar get_t = () => 1 - t2;\n\n\t// create a dummy animation that lasts as long as the delay (but with whatever devtools\n\t// multiplier is in effect). in the common case that it is `0`, we keep it anyway so that\n\t// the CSS keyframes aren't created until the DOM is updated\n\tvar animation = element.animate(keyframes, { duration: delay });\n\n\tanimation.onfinish = () => {\n\t\t// for bidirectional transitions, we start from the current position,\n\t\t// rather than doing a full intro/outro\n\t\tvar t1 = counterpart?.t() ?? 1 - t2;\n\t\tcounterpart?.abort();\n\n\t\tvar delta = t2 - t1;\n\t\tvar duration = /** @type {number} */ (options.duration) * Math.abs(delta);\n\t\tvar keyframes = [];\n\n\t\tif (duration > 0) {\n\t\t\t/**\n\t\t\t * Whether or not the CSS includes `overflow: hidden`, in which case we need to\n\t\t\t * add it as an inline style to work around a Safari <18 bug\n\t\t\t * TODO 6.0 remove this, if possible\n\t\t\t */\n\t\t\tvar needs_overflow_hidden = false;\n\n\t\t\tif (css) {\n\t\t\t\tvar n = Math.ceil(duration / (1000 / 60)); // `n` must be an integer, or we risk missing the `t2` value\n\n\t\t\t\tfor (var i = 0; i <= n; i += 1) {\n\t\t\t\t\tvar t = t1 + delta * easing(i / n);\n\t\t\t\t\tvar styles = css_to_keyframe(css(t, 1 - t));\n\t\t\t\t\tkeyframes.push(styles);\n\n\t\t\t\t\tneeds_overflow_hidden ||= styles.overflow === 'hidden';\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (needs_overflow_hidden) {\n\t\t\t\t/** @type {HTMLElement} */ (element).style.overflow = 'hidden';\n\t\t\t}\n\n\t\t\tget_t = () => {\n\t\t\t\tvar time = /** @type {number} */ (\n\t\t\t\t\t/** @type {globalThis.Animation} */ (animation).currentTime\n\t\t\t\t);\n\n\t\t\t\treturn t1 + delta * easing(time / duration);\n\t\t\t};\n\n\t\t\tif (tick) {\n\t\t\t\tloop(() => {\n\t\t\t\t\tif (animation.playState !== 'running') return false;\n\n\t\t\t\t\tvar t = get_t();\n\t\t\t\t\ttick(t, 1 - t);\n\n\t\t\t\t\treturn true;\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\n\t\tanimation = element.animate(keyframes, { duration, fill: 'forwards' });\n\n\t\tanimation.onfinish = () => {\n\t\t\tget_t = () => t2;\n\t\t\ttick?.(t2, 1 - t2);\n\t\t\ton_finish();\n\t\t};\n\t};\n\n\treturn {\n\t\tabort: () => {\n\t\t\tif (animation) {\n\t\t\t\tanimation.cancel();\n\t\t\t\t// This prevents memory leaks in Chromium\n\t\t\t\tanimation.effect = null;\n\t\t\t\t// This prevents onfinish to be launched after cancel(),\n\t\t\t\t// which can happen in some rare cases\n\t\t\t\t// see https://github.com/sveltejs/svelte/issues/13681\n\t\t\t\tanimation.onfinish = noop;\n\t\t\t}\n\t\t},\n\t\tdeactivate: () => {\n\t\t\ton_finish = noop;\n\t\t},\n\t\treset: () => {\n\t\t\tif (t2 === 0) {\n\t\t\t\ttick?.(1, 0);\n\t\t\t}\n\t\t},\n\t\tt: () => get_t()\n\t};\n}\n","import { DEV } from 'esm-env';\nimport { render_effect, teardown } from '../../../reactivity/effects.js';\nimport { listen_to_event_and_reset_event } from './shared.js';\nimport * as e from '../../../errors.js';\nimport { is } from '../../../proxy.js';\nimport { queue_micro_task } from '../../task.js';\nimport { hydrating } from '../../hydration.js';\nimport { untrack } from '../../../runtime.js';\nimport { is_runes } from '../../../context.js';\n\n/**\n * @param {HTMLInputElement} input\n * @param {() => unknown} get\n * @param {(value: unknown) => void} set\n * @returns {void}\n */\nexport function bind_value(input, get, set = get) {\n\tvar runes = is_runes();\n\n\tlisten_to_event_and_reset_event(input, 'input', (is_reset) => {\n\t\tif (DEV && input.type === 'checkbox') {\n\t\t\t// TODO should this happen in prod too?\n\t\t\te.bind_invalid_checkbox_value();\n\t\t}\n\n\t\t/** @type {any} */\n\t\tvar value = is_reset ? input.defaultValue : input.value;\n\t\tvalue = is_numberlike_input(input) ? to_number(value) : value;\n\t\tset(value);\n\n\t\t// In runes mode, respect any validation in accessors (doesn't apply in legacy mode,\n\t\t// because we use mutable state which ensures the render effect always runs)\n\t\tif (runes && value !== (value = get())) {\n\t\t\tvar start = input.selectionStart;\n\t\t\tvar end = input.selectionEnd;\n\n\t\t\t// the value is coerced on assignment\n\t\t\tinput.value = value ?? '';\n\n\t\t\t// Restore selection\n\t\t\tif (end !== null) {\n\t\t\t\tinput.selectionStart = start;\n\t\t\t\tinput.selectionEnd = Math.min(end, input.value.length);\n\t\t\t}\n\t\t}\n\t});\n\n\tif (\n\t\t// If we are hydrating and the value has since changed,\n\t\t// then use the updated value from the input instead.\n\t\t(hydrating && input.defaultValue !== input.value) ||\n\t\t// If defaultValue is set, then value == defaultValue\n\t\t// TODO Svelte 6: remove input.value check and set to empty string?\n\t\t(untrack(get) == null && input.value)\n\t) {\n\t\tset(is_numberlike_input(input) ? to_number(input.value) : input.value);\n\t}\n\n\trender_effect(() => {\n\t\tif (DEV && input.type === 'checkbox') {\n\t\t\t// TODO should this happen in prod too?\n\t\t\te.bind_invalid_checkbox_value();\n\t\t}\n\n\t\tvar value = get();\n\n\t\tif (is_numberlike_input(input) && value === to_number(input.value)) {\n\t\t\t// handles 0 vs 00 case (see https://github.com/sveltejs/svelte/issues/9959)\n\t\t\treturn;\n\t\t}\n\n\t\tif (input.type === 'date' && !value && !input.value) {\n\t\t\t// Handles the case where a temporarily invalid date is set (while typing, for example with a leading 0 for the day)\n\t\t\t// and prevents this state from clearing the other parts of the date input (see https://github.com/sveltejs/svelte/issues/7897)\n\t\t\treturn;\n\t\t}\n\n\t\t// don't set the value of the input if it's the same to allow\n\t\t// minlength to work properly\n\t\tif (value !== input.value) {\n\t\t\t// @ts-expect-error the value is coerced on assignment\n\t\t\tinput.value = value ?? '';\n\t\t}\n\t});\n}\n\n/** @type {Set<HTMLInputElement[]>} */\nconst pending = new Set();\n\n/**\n * @param {HTMLInputElement[]} inputs\n * @param {null | [number]} group_index\n * @param {HTMLInputElement} input\n * @param {() => unknown} get\n * @param {(value: unknown) => void} set\n * @returns {void}\n */\nexport function bind_group(inputs, group_index, input, get, set = get) {\n\tvar is_checkbox = input.getAttribute('type') === 'checkbox';\n\tvar binding_group = inputs;\n\n\t// needs to be let or related code isn't treeshaken out if it's always false\n\tlet hydration_mismatch = false;\n\n\tif (group_index !== null) {\n\t\tfor (var index of group_index) {\n\t\t\t// @ts-expect-error\n\t\t\tbinding_group = binding_group[index] ??= [];\n\t\t}\n\t}\n\n\tbinding_group.push(input);\n\n\tlisten_to_event_and_reset_event(\n\t\tinput,\n\t\t'change',\n\t\t() => {\n\t\t\t// @ts-ignore\n\t\t\tvar value = input.__value;\n\n\t\t\tif (is_checkbox) {\n\t\t\t\tvalue = get_binding_group_value(binding_group, value, input.checked);\n\t\t\t}\n\n\t\t\tset(value);\n\t\t},\n\t\t// TODO better default value handling\n\t\t() => set(is_checkbox ? [] : null)\n\t);\n\n\trender_effect(() => {\n\t\tvar value = get();\n\n\t\t// If we are hydrating and the value has since changed, then use the update value\n\t\t// from the input instead.\n\t\tif (hydrating && input.defaultChecked !== input.checked) {\n\t\t\thydration_mismatch = true;\n\t\t\treturn;\n\t\t}\n\n\t\tif (is_checkbox) {\n\t\t\tvalue = value || [];\n\t\t\t// @ts-ignore\n\t\t\tinput.checked = value.includes(input.__value);\n\t\t} else {\n\t\t\t// @ts-ignore\n\t\t\tinput.checked = is(input.__value, value);\n\t\t}\n\t});\n\n\tteardown(() => {\n\t\tvar index = binding_group.indexOf(input);\n\n\t\tif (index !== -1) {\n\t\t\tbinding_group.splice(index, 1);\n\t\t}\n\t});\n\n\tif (!pending.has(binding_group)) {\n\t\tpending.add(binding_group);\n\n\t\tqueue_micro_task(() => {\n\t\t\t// necessary to maintain binding group order in all insertion scenarios\n\t\t\tbinding_group.sort((a, b) => (a.compareDocumentPosition(b) === 4 ? -1 : 1));\n\t\t\tpending.delete(binding_group);\n\t\t});\n\t}\n\n\tqueue_micro_task(() => {\n\t\tif (hydration_mismatch) {\n\t\t\tvar value;\n\n\t\t\tif (is_checkbox) {\n\t\t\t\tvalue = get_binding_group_value(binding_group, value, input.checked);\n\t\t\t} else {\n\t\t\t\tvar hydration_input = binding_group.find((input) => input.checked);\n\t\t\t\t// @ts-ignore\n\t\t\t\tvalue = hydration_input?.__value;\n\t\t\t}\n\n\t\t\tset(value);\n\t\t}\n\t});\n}\n\n/**\n * @param {HTMLInputElement} input\n * @param {() => unknown} get\n * @param {(value: unknown) => void} set\n * @returns {void}\n */\nexport function bind_checked(input, get, set = get) {\n\tlisten_to_event_and_reset_event(input, 'change', (is_reset) => {\n\t\tvar value = is_reset ? input.defaultChecked : input.checked;\n\t\tset(value);\n\t});\n\n\tif (\n\t\t// If we are hydrating and the value has since changed,\n\t\t// then use the update value from the input instead.\n\t\t(hydrating && input.defaultChecked !== input.checked) ||\n\t\t// If defaultChecked is set, then checked == defaultChecked\n\t\tuntrack(get) == null\n\t) {\n\t\tset(input.checked);\n\t}\n\n\trender_effect(() => {\n\t\tvar value = get();\n\t\tinput.checked = Boolean(value);\n\t});\n}\n\n/**\n * @template V\n * @param {Array<HTMLInputElement>} group\n * @param {V} __value\n * @param {boolean} checked\n * @returns {V[]}\n */\nfunction get_binding_group_value(group, __value, checked) {\n\tvar value = new Set();\n\n\tfor (var i = 0; i < group.length; i += 1) {\n\t\tif (group[i].checked) {\n\t\t\t// @ts-ignore\n\t\t\tvalue.add(group[i].__value);\n\t\t}\n\t}\n\n\tif (!checked) {\n\t\tvalue.delete(__value);\n\t}\n\n\treturn Array.from(value);\n}\n\n/**\n * @param {HTMLInputElement} input\n */\nfunction is_numberlike_input(input) {\n\tvar type = input.type;\n\treturn type === 'number' || type === 'range';\n}\n\n/**\n * @param {string} value\n */\nfunction to_number(value) {\n\treturn value === '' ? null : +value;\n}\n\n/**\n * @param {HTMLInputElement} input\n * @param {() => FileList | null} get\n * @param {(value: FileList | null) => void} set\n */\nexport function bind_files(input, get, set = get) {\n\tlisten_to_event_and_reset_event(input, 'change', () => {\n\t\tset(input.files);\n\t});\n\n\tif (\n\t\t// If we are hydrating and the value has since changed,\n\t\t// then use the updated value from the input instead.\n\t\thydrating &&\n\t\tinput.files\n\t) {\n\t\tset(input.files);\n\t}\n\n\trender_effect(() => {\n\t\tinput.files = get();\n\t});\n}\n","/** @import { ComponentContextLegacy } from '#client' */\nimport { run, run_all } from '../../../shared/utils.js';\nimport { component_context } from '../../context.js';\nimport { derived } from '../../reactivity/deriveds.js';\nimport { user_pre_effect, user_effect } from '../../reactivity/effects.js';\nimport { deep_read_state, get, untrack } from '../../runtime.js';\n\n/**\n * Legacy-mode only: Call `onMount` callbacks and set up `beforeUpdate`/`afterUpdate` effects\n * @param {boolean} [immutable]\n */\nexport function init(immutable = false) {\n\tconst context = /** @type {ComponentContextLegacy} */ (component_context);\n\n\tconst callbacks = context.l.u;\n\tif (!callbacks) return;\n\n\tlet props = () => deep_read_state(context.s);\n\n\tif (immutable) {\n\t\tlet version = 0;\n\t\tlet prev = /** @type {Record<string, any>} */ ({});\n\n\t\t// In legacy immutable mode, before/afterUpdate only fire if the object identity of a prop changes\n\t\tconst d = derived(() => {\n\t\t\tlet changed = false;\n\t\t\tconst props = context.s;\n\t\t\tfor (const key in props) {\n\t\t\t\tif (props[key] !== prev[key]) {\n\t\t\t\t\tprev[key] = props[key];\n\t\t\t\t\tchanged = true;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (changed) version++;\n\t\t\treturn version;\n\t\t});\n\n\t\tprops = () => get(d);\n\t}\n\n\t// beforeUpdate\n\tif (callbacks.b.length) {\n\t\tuser_pre_effect(() => {\n\t\t\tobserve_all(context, props);\n\t\t\trun_all(callbacks.b);\n\t\t});\n\t}\n\n\t// onMount (must run before afterUpdate)\n\tuser_effect(() => {\n\t\tconst fns = untrack(() => callbacks.m.map(run));\n\t\treturn () => {\n\t\t\tfor (const fn of fns) {\n\t\t\t\tif (typeof fn === 'function') {\n\t\t\t\t\tfn();\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t});\n\n\t// afterUpdate\n\tif (callbacks.a.length) {\n\t\tuser_effect(() => {\n\t\t\tobserve_all(context, props);\n\t\t\trun_all(callbacks.a);\n\t\t});\n\t}\n}\n\n/**\n * Invoke the getter of all signals associated with a component\n * so they can be registered to the effect this function is called in.\n * @param {ComponentContextLegacy} context\n * @param {(() => void)} props\n */\nfunction observe_all(context, props) {\n\tif (context.l.s) {\n\t\tfor (const signal of context.l.s) get(signal);\n\t}\n\n\tprops();\n}\n","/** @import { ComponentContext, ComponentContextLegacy } from '#client' */\n/** @import { EventDispatcher } from './index.js' */\n/** @import { NotFunction } from './internal/types.js' */\nimport { untrack } from './internal/client/runtime.js';\nimport { is_array } from './internal/shared/utils.js';\nimport { user_effect } from './internal/client/index.js';\nimport * as e from './internal/client/errors.js';\nimport { lifecycle_outside_component } from './internal/shared/errors.js';\nimport { legacy_mode_flag } from './internal/flags/index.js';\nimport { component_context } from './internal/client/context.js';\nimport { DEV } from 'esm-env';\n\nif (DEV) {\n\t/**\n\t * @param {string} rune\n\t */\n\tfunction throw_rune_error(rune) {\n\t\tif (!(rune in globalThis)) {\n\t\t\t// TODO if people start adjusting the \"this can contain runes\" config through v-p-s more, adjust this message\n\t\t\t/** @type {any} */\n\t\t\tlet value; // let's hope noone modifies this global, but belts and braces\n\t\t\tObject.defineProperty(globalThis, rune, {\n\t\t\t\tconfigurable: true,\n\t\t\t\t// eslint-disable-next-line getter-return\n\t\t\t\tget: () => {\n\t\t\t\t\tif (value !== undefined) {\n\t\t\t\t\t\treturn value;\n\t\t\t\t\t}\n\n\t\t\t\t\te.rune_outside_svelte(rune);\n\t\t\t\t},\n\t\t\t\tset: (v) => {\n\t\t\t\t\tvalue = v;\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t}\n\n\tthrow_rune_error('$state');\n\tthrow_rune_error('$effect');\n\tthrow_rune_error('$derived');\n\tthrow_rune_error('$inspect');\n\tthrow_rune_error('$props');\n\tthrow_rune_error('$bindable');\n}\n\n/**\n * `onMount`, like [`$effect`](https://svelte.dev/docs/svelte/$effect), schedules a function to run as soon as the component has been mounted to the DOM.\n * Unlike `$effect`, the provided function only runs once.\n *\n * It must be called during the component's initialisation (but doesn't need to live _inside_ the component;\n * it can be called from an external module). If a function is returned _synchronously_ from `onMount`,\n * it will be called when the component is unmounted.\n *\n * `onMount` functions do not run during [server-side rendering](https://svelte.dev/docs/svelte/svelte-server#render).\n *\n * @template T\n * @param {() => NotFunction<T> | Promise<NotFunction<T>> | (() => any)} fn\n * @returns {void}\n */\nexport function onMount(fn) {\n\tif (component_context === null) {\n\t\tlifecycle_outside_component('onMount');\n\t}\n\n\tif (legacy_mode_flag && component_context.l !== null) {\n\t\tinit_update_callbacks(component_context).m.push(fn);\n\t} else {\n\t\tuser_effect(() => {\n\t\t\tconst cleanup = untrack(fn);\n\t\t\tif (typeof cleanup === 'function') return /** @type {() => void} */ (cleanup);\n\t\t});\n\t}\n}\n\n/**\n * Schedules a callback to run immediately before the component is unmounted.\n *\n * Out of `onMount`, `beforeUpdate`, `afterUpdate` and `onDestroy`, this is the\n * only one that runs inside a server-side component.\n *\n * @param {() => any} fn\n * @returns {void}\n */\nexport function onDestroy(fn) {\n\tif (component_context === null) {\n\t\tlifecycle_outside_component('onDestroy');\n\t}\n\n\tonMount(() => () => untrack(fn));\n}\n\n/**\n * @template [T=any]\n * @param {string} type\n * @param {T} [detail]\n * @param {any}params_0\n * @returns {CustomEvent<T>}\n */\nfunction create_custom_event(type, detail, { bubbles = false, cancelable = false } = {}) {\n\treturn new CustomEvent(type, { detail, bubbles, cancelable });\n}\n\n/**\n * Creates an event dispatcher that can be used to dispatch [component events](https://svelte.dev/docs/svelte/legacy-on#Component-events).\n * Event dispatchers are functions that can take two arguments: `name` and `detail`.\n *\n * Component events created with `createEventDispatcher` create a\n * [CustomEvent](https://developer.mozilla.org/en-US/docs/Web/API/CustomEvent).\n * These events do not [bubble](https://developer.mozilla.org/en-US/docs/Learn/JavaScript/Building_blocks/Events#Event_bubbling_and_capture).\n * The `detail` argument corresponds to the [CustomEvent.detail](https://developer.mozilla.org/en-US/docs/Web/API/CustomEvent/detail)\n * property and can contain any type of data.\n *\n * The event dispatcher can be typed to narrow the allowed event names and the type of the `detail` argument:\n * ```ts\n * const dispatch = createEventDispatcher<{\n *  loaded: never; // does not take a detail argument\n *  change: string; // takes a detail argument of type string, which is required\n *  optional: number | null; // takes an optional detail argument of type number\n * }>();\n * ```\n *\n * @deprecated Use callback props and/or the `$host()` rune instead — see [migration guide](https://svelte.dev/docs/svelte/v5-migration-guide#Event-changes-Component-events)\n * @template {Record<string, any>} [EventMap = any]\n * @returns {EventDispatcher<EventMap>}\n */\nexport function createEventDispatcher() {\n\tconst active_component_context = component_context;\n\tif (active_component_context === null) {\n\t\tlifecycle_outside_component('createEventDispatcher');\n\t}\n\n\treturn (type, detail, options) => {\n\t\tconst events = /** @type {Record<string, Function | Function[]>} */ (\n\t\t\tactive_component_context.s.$$events\n\t\t)?.[/** @type {any} */ (type)];\n\n\t\tif (events) {\n\t\t\tconst callbacks = is_array(events) ? events.slice() : [events];\n\t\t\t// TODO are there situations where events could be dispatched\n\t\t\t// in a server (non-DOM) environment?\n\t\t\tconst event = create_custom_event(/** @type {string} */ (type), detail, options);\n\t\t\tfor (const fn of callbacks) {\n\t\t\t\tfn.call(active_component_context.x, event);\n\t\t\t}\n\t\t\treturn !event.defaultPrevented;\n\t\t}\n\n\t\treturn true;\n\t};\n}\n\n// TODO mark beforeUpdate and afterUpdate as deprecated in Svelte 6\n\n/**\n * Schedules a callback to run immediately before the component is updated after any state change.\n *\n * The first time the callback runs will be before the initial `onMount`.\n *\n * In runes mode use `$effect.pre` instead.\n *\n * @deprecated Use [`$effect.pre`](https://svelte.dev/docs/svelte/$effect#$effect.pre) instead\n * @param {() => void} fn\n * @returns {void}\n */\nexport function beforeUpdate(fn) {\n\tif (component_context === null) {\n\t\tlifecycle_outside_component('beforeUpdate');\n\t}\n\n\tif (component_context.l === null) {\n\t\te.lifecycle_legacy_only('beforeUpdate');\n\t}\n\n\tinit_update_callbacks(component_context).b.push(fn);\n}\n\n/**\n * Schedules a callback to run immediately after the component has been updated.\n *\n * The first time the callback runs will be after the initial `onMount`.\n *\n * In runes mode use `$effect` instead.\n *\n * @deprecated Use [`$effect`](https://svelte.dev/docs/svelte/$effect) instead\n * @param {() => void} fn\n * @returns {void}\n */\nexport function afterUpdate(fn) {\n\tif (component_context === null) {\n\t\tlifecycle_outside_component('afterUpdate');\n\t}\n\n\tif (component_context.l === null) {\n\t\te.lifecycle_legacy_only('afterUpdate');\n\t}\n\n\tinit_update_callbacks(component_context).a.push(fn);\n}\n\n/**\n * Legacy-mode: Init callbacks object for onMount/beforeUpdate/afterUpdate\n * @param {ComponentContext} context\n */\nfunction init_update_callbacks(context) {\n\tvar l = /** @type {ComponentContextLegacy} */ (context).l;\n\treturn (l.u ??= { a: [], b: [], m: [] });\n}\n\nexport { flushSync } from './internal/client/runtime.js';\nexport { getContext, getAllContexts, hasContext, setContext } from './internal/client/context.js';\nexport { hydrate, mount, unmount } from './internal/client/render.js';\nexport { tick, untrack } from './internal/client/runtime.js';\nexport { createRawSnippet } from './internal/client/dom/blocks/snippet.js';\n","/** @import { Readable } from './public' */\nimport { untrack } from '../index-client.js';\nimport { noop } from '../internal/shared/utils.js';\n\n/**\n * @template T\n * @param {Readable<T> | null | undefined} store\n * @param {(value: T) => void} run\n * @param {(value: T) => void} [invalidate]\n * @returns {() => void}\n */\nexport function subscribe_to_store(store, run, invalidate) {\n\tif (store == null) {\n\t\t// @ts-expect-error\n\t\trun(undefined);\n\n\t\t// @ts-expect-error\n\t\tif (invalidate) invalidate(undefined);\n\n\t\treturn noop;\n\t}\n\n\t// Svelte store takes a private second argument\n\t// StartStopNotifier could mutate state, and we want to silence the corresponding validation error\n\tconst unsub = untrack(() =>\n\t\tstore.subscribe(\n\t\t\trun,\n\t\t\t// @ts-expect-error\n\t\t\tinvalidate\n\t\t)\n\t);\n\n\t// Also support RxJS\n\t// @ts-expect-error TODO fix this in the types?\n\treturn unsub.unsubscribe ? () => unsub.unsubscribe() : unsub;\n}\n","/** @import { Readable, StartStopNotifier, Subscriber, Unsubscriber, Updater, Writable } from '../public.js' */\n/** @import { Stores, StoresValues, SubscribeInvalidateTuple } from '../private.js' */\nimport { noop, run_all } from '../../internal/shared/utils.js';\nimport { safe_not_equal } from '../../internal/client/reactivity/equality.js';\nimport { subscribe_to_store } from '../utils.js';\n\n/**\n * @type {Array<SubscribeInvalidateTuple<any> | any>}\n */\nconst subscriber_queue = [];\n\n/**\n * Creates a `Readable` store that allows reading by subscription.\n *\n * @template T\n * @param {T} [value] initial value\n * @param {StartStopNotifier<T>} [start]\n * @returns {Readable<T>}\n */\nexport function readable(value, start) {\n\treturn {\n\t\tsubscribe: writable(value, start).subscribe\n\t};\n}\n\n/**\n * Create a `Writable` store that allows both updating and reading by subscription.\n *\n * @template T\n * @param {T} [value] initial value\n * @param {StartStopNotifier<T>} [start]\n * @returns {Writable<T>}\n */\nexport function writable(value, start = noop) {\n\t/** @type {Unsubscriber | null} */\n\tlet stop = null;\n\n\t/** @type {Set<SubscribeInvalidateTuple<T>>} */\n\tconst subscribers = new Set();\n\n\t/**\n\t * @param {T} new_value\n\t * @returns {void}\n\t */\n\tfunction set(new_value) {\n\t\tif (safe_not_equal(value, new_value)) {\n\t\t\tvalue = new_value;\n\t\t\tif (stop) {\n\t\t\t\t// store is ready\n\t\t\t\tconst run_queue = !subscriber_queue.length;\n\t\t\t\tfor (const subscriber of subscribers) {\n\t\t\t\t\tsubscriber[1]();\n\t\t\t\t\tsubscriber_queue.push(subscriber, value);\n\t\t\t\t}\n\t\t\t\tif (run_queue) {\n\t\t\t\t\tfor (let i = 0; i < subscriber_queue.length; i += 2) {\n\t\t\t\t\t\tsubscriber_queue[i][0](subscriber_queue[i + 1]);\n\t\t\t\t\t}\n\t\t\t\t\tsubscriber_queue.length = 0;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * @param {Updater<T>} fn\n\t * @returns {void}\n\t */\n\tfunction update(fn) {\n\t\tset(fn(/** @type {T} */ (value)));\n\t}\n\n\t/**\n\t * @param {Subscriber<T>} run\n\t * @param {() => void} [invalidate]\n\t * @returns {Unsubscriber}\n\t */\n\tfunction subscribe(run, invalidate = noop) {\n\t\t/** @type {SubscribeInvalidateTuple<T>} */\n\t\tconst subscriber = [run, invalidate];\n\t\tsubscribers.add(subscriber);\n\t\tif (subscribers.size === 1) {\n\t\t\tstop = start(set, update) || noop;\n\t\t}\n\t\trun(/** @type {T} */ (value));\n\t\treturn () => {\n\t\t\tsubscribers.delete(subscriber);\n\t\t\tif (subscribers.size === 0 && stop) {\n\t\t\t\tstop();\n\t\t\t\tstop = null;\n\t\t\t}\n\t\t};\n\t}\n\treturn { set, update, subscribe };\n}\n\n/**\n * Derived value store by synchronizing one or more readable stores and\n * applying an aggregation function over its input values.\n *\n * @template {Stores} S\n * @template T\n * @overload\n * @param {S} stores\n * @param {(values: StoresValues<S>, set: (value: T) => void, update: (fn: Updater<T>) => void) => Unsubscriber | void} fn\n * @param {T} [initial_value]\n * @returns {Readable<T>}\n */\n/**\n * Derived value store by synchronizing one or more readable stores and\n * applying an aggregation function over its input values.\n *\n * @template {Stores} S\n * @template T\n * @overload\n * @param {S} stores\n * @param {(values: StoresValues<S>) => T} fn\n * @param {T} [initial_value]\n * @returns {Readable<T>}\n */\n/**\n * @template {Stores} S\n * @template T\n * @param {S} stores\n * @param {Function} fn\n * @param {T} [initial_value]\n * @returns {Readable<T>}\n */\nexport function derived(stores, fn, initial_value) {\n\tconst single = !Array.isArray(stores);\n\t/** @type {Array<Readable<any>>} */\n\tconst stores_array = single ? [stores] : stores;\n\tif (!stores_array.every(Boolean)) {\n\t\tthrow new Error('derived() expects stores as input, got a falsy value');\n\t}\n\tconst auto = fn.length < 2;\n\treturn readable(initial_value, (set, update) => {\n\t\tlet started = false;\n\t\t/** @type {T[]} */\n\t\tconst values = [];\n\t\tlet pending = 0;\n\t\tlet cleanup = noop;\n\t\tconst sync = () => {\n\t\t\tif (pending) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tcleanup();\n\t\t\tconst result = fn(single ? values[0] : values, set, update);\n\t\t\tif (auto) {\n\t\t\t\tset(result);\n\t\t\t} else {\n\t\t\t\tcleanup = typeof result === 'function' ? result : noop;\n\t\t\t}\n\t\t};\n\t\tconst unsubscribers = stores_array.map((store, i) =>\n\t\t\tsubscribe_to_store(\n\t\t\t\tstore,\n\t\t\t\t(value) => {\n\t\t\t\t\tvalues[i] = value;\n\t\t\t\t\tpending &= ~(1 << i);\n\t\t\t\t\tif (started) {\n\t\t\t\t\t\tsync();\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t() => {\n\t\t\t\t\tpending |= 1 << i;\n\t\t\t\t}\n\t\t\t)\n\t\t);\n\t\tstarted = true;\n\t\tsync();\n\t\treturn function stop() {\n\t\t\trun_all(unsubscribers);\n\t\t\tcleanup();\n\t\t\t// We need to set this to false because callbacks can still happen despite having unsubscribed:\n\t\t\t// Callbacks might already be placed in the queue which doesn't know it should no longer\n\t\t\t// invoke this derived store.\n\t\t\tstarted = false;\n\t\t};\n\t});\n}\n\n/**\n * Takes a store and returns a new one derived from the old one that is readable.\n *\n * @template T\n * @param {Readable<T>} store  - store to make readonly\n * @returns {Readable<T>}\n */\nexport function readonly(store) {\n\treturn {\n\t\t// @ts-expect-error TODO i suspect the bind is unnecessary\n\t\tsubscribe: store.subscribe.bind(store)\n\t};\n}\n\n/**\n * Get the current value from a store by subscribing and immediately unsubscribing.\n *\n * @template T\n * @param {Readable<T>} store\n * @returns {T}\n */\nexport function get(store) {\n\tlet value;\n\tsubscribe_to_store(store, (_) => (value = _))();\n\t// @ts-expect-error\n\treturn value;\n}\n","/** @import { StoreReferencesContainer } from '#client' */\n/** @import { Store } from '#shared' */\nimport { subscribe_to_store } from '../../../store/utils.js';\nimport { get as get_store } from '../../../store/shared/index.js';\nimport { define_property, noop } from '../../shared/utils.js';\nimport { get } from '../runtime.js';\nimport { teardown } from './effects.js';\nimport { mutable_source, set } from './sources.js';\n\n/**\n * Whether or not the prop currently being read is a store binding, as in\n * `<Child bind:x={$y} />`. If it is, we treat the prop as mutable even in\n * runes mode, and skip `binding_property_non_reactive` validation\n */\nlet is_store_binding = false;\n\nlet IS_UNMOUNTED = Symbol();\n\n/**\n * Gets the current value of a store. If the store isn't subscribed to yet, it will create a proxy\n * signal that will be updated when the store is. The store references container is needed to\n * track reassignments to stores and to track the correct component context.\n * @template V\n * @param {Store<V> | null | undefined} store\n * @param {string} store_name\n * @param {StoreReferencesContainer} stores\n * @returns {V}\n */\nexport function store_get(store, store_name, stores) {\n\tconst entry = (stores[store_name] ??= {\n\t\tstore: null,\n\t\tsource: mutable_source(undefined),\n\t\tunsubscribe: noop\n\t});\n\n\t// if the component that setup this is already unmounted we don't want to register a subscription\n\tif (entry.store !== store && !(IS_UNMOUNTED in stores)) {\n\t\tentry.unsubscribe();\n\t\tentry.store = store ?? null;\n\n\t\tif (store == null) {\n\t\t\tentry.source.v = undefined; // see synchronous callback comment below\n\t\t\tentry.unsubscribe = noop;\n\t\t} else {\n\t\t\tvar is_synchronous_callback = true;\n\n\t\t\tentry.unsubscribe = subscribe_to_store(store, (v) => {\n\t\t\t\tif (is_synchronous_callback) {\n\t\t\t\t\t// If the first updates to the store value (possibly multiple of them) are synchronously\n\t\t\t\t\t// inside a derived, we will hit the `state_unsafe_mutation` error if we `set` the value\n\t\t\t\t\tentry.source.v = v;\n\t\t\t\t} else {\n\t\t\t\t\tset(entry.source, v);\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tis_synchronous_callback = false;\n\t\t}\n\t}\n\n\t// if the component that setup this stores is already unmounted the source will be out of sync\n\t// so we just use the `get` for the stores, less performant but it avoids to create a memory leak\n\t// and it will keep the value consistent\n\tif (store && IS_UNMOUNTED in stores) {\n\t\treturn get_store(store);\n\t}\n\n\treturn get(entry.source);\n}\n\n/**\n * Unsubscribe from a store if it's not the same as the one in the store references container.\n * We need this in addition to `store_get` because someone could unsubscribe from a store but\n * then never subscribe to the new one (if any), causing the subscription to stay open wrongfully.\n * @param {Store<any> | null | undefined} store\n * @param {string} store_name\n * @param {StoreReferencesContainer} stores\n */\nexport function store_unsub(store, store_name, stores) {\n\t/** @type {StoreReferencesContainer[''] | undefined} */\n\tlet entry = stores[store_name];\n\n\tif (entry && entry.store !== store) {\n\t\t// Don't reset store yet, so that store_get above can resubscribe to new store if necessary\n\t\tentry.unsubscribe();\n\t\tentry.unsubscribe = noop;\n\t}\n\n\treturn store;\n}\n\n/**\n * Sets the new value of a store and returns that value.\n * @template V\n * @param {Store<V>} store\n * @param {V} value\n * @returns {V}\n */\nexport function store_set(store, value) {\n\tstore.set(value);\n\treturn value;\n}\n\n/**\n * @param {StoreReferencesContainer} stores\n * @param {string} store_name\n */\nexport function invalidate_store(stores, store_name) {\n\tvar entry = stores[store_name];\n\tif (entry.store !== null) {\n\t\tstore_set(entry.store, entry.source.v);\n\t}\n}\n\n/**\n * Unsubscribes from all auto-subscribed stores on destroy\n * @returns {[StoreReferencesContainer, ()=>void]}\n */\nexport function setup_stores() {\n\t/** @type {StoreReferencesContainer} */\n\tconst stores = {};\n\n\tfunction cleanup() {\n\t\tteardown(() => {\n\t\t\tfor (var store_name in stores) {\n\t\t\t\tconst ref = stores[store_name];\n\t\t\t\tref.unsubscribe();\n\t\t\t}\n\t\t\tdefine_property(stores, IS_UNMOUNTED, {\n\t\t\t\tenumerable: false,\n\t\t\t\tvalue: true\n\t\t\t});\n\t\t});\n\t}\n\n\treturn [stores, cleanup];\n}\n\n/**\n * Updates a store with a new value.\n * @param {Store<V>} store  the store to update\n * @param {any} expression  the expression that mutates the store\n * @param {V} new_value  the new store value\n * @template V\n */\nexport function store_mutate(store, expression, new_value) {\n\tstore.set(new_value);\n\treturn expression;\n}\n\n/**\n * @param {Store<number>} store\n * @param {number} store_value\n * @param {1 | -1} [d]\n * @returns {number}\n */\nexport function update_store(store, store_value, d = 1) {\n\tstore.set(store_value + d);\n\treturn store_value;\n}\n\n/**\n * @param {Store<number>} store\n * @param {number} store_value\n * @param {1 | -1} [d]\n * @returns {number}\n */\nexport function update_pre_store(store, store_value, d = 1) {\n\tconst value = store_value + d;\n\tstore.set(value);\n\treturn value;\n}\n\n/**\n * Called inside prop getters to communicate that the prop is a store binding\n */\nexport function mark_store_binding() {\n\tis_store_binding = true;\n}\n\n/**\n * Returns a tuple that indicates whether `fn()` reads a prop that is a store binding.\n * Used to prevent `binding_property_non_reactive` validation false positives and\n * ensure that these props are treated as mutable even in runes mode\n * @template T\n * @param {() => T} fn\n * @returns {[T, boolean]}\n */\nexport function capture_store_binding(fn) {\n\tvar previous_is_store_binding = is_store_binding;\n\n\ttry {\n\t\tis_store_binding = false;\n\t\treturn [fn(), is_store_binding];\n\t} finally {\n\t\tis_store_binding = previous_is_store_binding;\n\t}\n}\n","/** @import { Derived, Source } from './types.js' */\nimport { DEV } from 'esm-env';\nimport {\n\tPROPS_IS_BINDABLE,\n\tPROPS_IS_IMMUTABLE,\n\tPROPS_IS_LAZY_INITIAL,\n\tPROPS_IS_RUNES,\n\tPROPS_IS_UPDATED\n} from '../../../constants.js';\nimport { get_descriptor, is_function } from '../../shared/utils.js';\nimport { mutable_source, set, source, update } from './sources.js';\nimport { derived, derived_safe_equal } from './deriveds.js';\nimport { get, captured_signals, untrack } from '../runtime.js';\nimport { safe_equals } from './equality.js';\nimport * as e from '../errors.js';\nimport { LEGACY_DERIVED_PROP, LEGACY_PROPS, STATE_SYMBOL } from '../constants.js';\nimport { proxy } from '../proxy.js';\nimport { capture_store_binding } from './store.js';\nimport { legacy_mode_flag } from '../../flags/index.js';\n\n/**\n * @param {((value?: number) => number)} fn\n * @param {1 | -1} [d]\n * @returns {number}\n */\nexport function update_prop(fn, d = 1) {\n\tconst value = fn();\n\tfn(value + d);\n\treturn value;\n}\n\n/**\n * @param {((value?: number) => number)} fn\n * @param {1 | -1} [d]\n * @returns {number}\n */\nexport function update_pre_prop(fn, d = 1) {\n\tconst value = fn() + d;\n\tfn(value);\n\treturn value;\n}\n\n/**\n * The proxy handler for rest props (i.e. `const { x, ...rest } = $props()`).\n * Is passed the full `$$props` object and excludes the named props.\n * @type {ProxyHandler<{ props: Record<string | symbol, unknown>, exclude: Array<string | symbol>, name?: string }>}}\n */\nconst rest_props_handler = {\n\tget(target, key) {\n\t\tif (target.exclude.includes(key)) return;\n\t\treturn target.props[key];\n\t},\n\tset(target, key) {\n\t\tif (DEV) {\n\t\t\t// TODO should this happen in prod too?\n\t\t\te.props_rest_readonly(`${target.name}.${String(key)}`);\n\t\t}\n\n\t\treturn false;\n\t},\n\tgetOwnPropertyDescriptor(target, key) {\n\t\tif (target.exclude.includes(key)) return;\n\t\tif (key in target.props) {\n\t\t\treturn {\n\t\t\t\tenumerable: true,\n\t\t\t\tconfigurable: true,\n\t\t\t\tvalue: target.props[key]\n\t\t\t};\n\t\t}\n\t},\n\thas(target, key) {\n\t\tif (target.exclude.includes(key)) return false;\n\t\treturn key in target.props;\n\t},\n\townKeys(target) {\n\t\treturn Reflect.ownKeys(target.props).filter((key) => !target.exclude.includes(key));\n\t}\n};\n\n/**\n * @param {Record<string, unknown>} props\n * @param {string[]} exclude\n * @param {string} [name]\n * @returns {Record<string, unknown>}\n */\n/*#__NO_SIDE_EFFECTS__*/\nexport function rest_props(props, exclude, name) {\n\treturn new Proxy(\n\t\tDEV ? { props, exclude, name, other: {}, to_proxy: [] } : { props, exclude },\n\t\trest_props_handler\n\t);\n}\n\n/**\n * The proxy handler for legacy $$restProps and $$props\n * @type {ProxyHandler<{ props: Record<string | symbol, unknown>, exclude: Array<string | symbol>, special: Record<string | symbol, (v?: unknown) => unknown>, version: Source<number> }>}}\n */\nconst legacy_rest_props_handler = {\n\tget(target, key) {\n\t\tif (target.exclude.includes(key)) return;\n\t\tget(target.version);\n\t\treturn key in target.special ? target.special[key]() : target.props[key];\n\t},\n\tset(target, key, value) {\n\t\tif (!(key in target.special)) {\n\t\t\t// Handle props that can temporarily get out of sync with the parent\n\t\t\t/** @type {Record<string, (v?: unknown) => unknown>} */\n\t\t\ttarget.special[key] = prop(\n\t\t\t\t{\n\t\t\t\t\tget [key]() {\n\t\t\t\t\t\treturn target.props[key];\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t/** @type {string} */ (key),\n\t\t\t\tPROPS_IS_UPDATED\n\t\t\t);\n\t\t}\n\n\t\ttarget.special[key](value);\n\t\tupdate(target.version); // $$props is coarse-grained: when $$props.x is updated, usages of $$props.y etc are also rerun\n\t\treturn true;\n\t},\n\tgetOwnPropertyDescriptor(target, key) {\n\t\tif (target.exclude.includes(key)) return;\n\t\tif (key in target.props) {\n\t\t\treturn {\n\t\t\t\tenumerable: true,\n\t\t\t\tconfigurable: true,\n\t\t\t\tvalue: target.props[key]\n\t\t\t};\n\t\t}\n\t},\n\tdeleteProperty(target, key) {\n\t\t// Svelte 4 allowed for deletions on $$restProps\n\t\tif (target.exclude.includes(key)) return true;\n\t\ttarget.exclude.push(key);\n\t\tupdate(target.version);\n\t\treturn true;\n\t},\n\thas(target, key) {\n\t\tif (target.exclude.includes(key)) return false;\n\t\treturn key in target.props;\n\t},\n\townKeys(target) {\n\t\treturn Reflect.ownKeys(target.props).filter((key) => !target.exclude.includes(key));\n\t}\n};\n\n/**\n * @param {Record<string, unknown>} props\n * @param {string[]} exclude\n * @returns {Record<string, unknown>}\n */\nexport function legacy_rest_props(props, exclude) {\n\treturn new Proxy({ props, exclude, special: {}, version: source(0) }, legacy_rest_props_handler);\n}\n\n/**\n * The proxy handler for spread props. Handles the incoming array of props\n * that looks like `() => { dynamic: props }, { static: prop }, ..` and wraps\n * them so that the whole thing is passed to the component as the `$$props` argument.\n * @template {Record<string | symbol, unknown>} T\n * @type {ProxyHandler<{ props: Array<T | (() => T)> }>}}\n */\nconst spread_props_handler = {\n\tget(target, key) {\n\t\tlet i = target.props.length;\n\t\twhile (i--) {\n\t\t\tlet p = target.props[i];\n\t\t\tif (is_function(p)) p = p();\n\t\t\tif (typeof p === 'object' && p !== null && key in p) return p[key];\n\t\t}\n\t},\n\tset(target, key, value) {\n\t\tlet i = target.props.length;\n\t\twhile (i--) {\n\t\t\tlet p = target.props[i];\n\t\t\tif (is_function(p)) p = p();\n\t\t\tconst desc = get_descriptor(p, key);\n\t\t\tif (desc && desc.set) {\n\t\t\t\tdesc.set(value);\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t},\n\tgetOwnPropertyDescriptor(target, key) {\n\t\tlet i = target.props.length;\n\t\twhile (i--) {\n\t\t\tlet p = target.props[i];\n\t\t\tif (is_function(p)) p = p();\n\t\t\tif (typeof p === 'object' && p !== null && key in p) {\n\t\t\t\tconst descriptor = get_descriptor(p, key);\n\t\t\t\tif (descriptor && !descriptor.configurable) {\n\t\t\t\t\t// Prevent a \"Non-configurability Report Error\": The target is an array, it does\n\t\t\t\t\t// not actually contain this property. If it is now described as non-configurable,\n\t\t\t\t\t// the proxy throws a validation error. Setting it to true avoids that.\n\t\t\t\t\tdescriptor.configurable = true;\n\t\t\t\t}\n\t\t\t\treturn descriptor;\n\t\t\t}\n\t\t}\n\t},\n\thas(target, key) {\n\t\t// To prevent a false positive `is_entry_props` in the `prop` function\n\t\tif (key === STATE_SYMBOL || key === LEGACY_PROPS) return false;\n\n\t\tfor (let p of target.props) {\n\t\t\tif (is_function(p)) p = p();\n\t\t\tif (p != null && key in p) return true;\n\t\t}\n\n\t\treturn false;\n\t},\n\townKeys(target) {\n\t\t/** @type {Array<string | symbol>} */\n\t\tconst keys = [];\n\n\t\tfor (let p of target.props) {\n\t\t\tif (is_function(p)) p = p();\n\t\t\tfor (const key in p) {\n\t\t\t\tif (!keys.includes(key)) keys.push(key);\n\t\t\t}\n\t\t}\n\n\t\treturn keys;\n\t}\n};\n\n/**\n * @param {Array<Record<string, unknown> | (() => Record<string, unknown>)>} props\n * @returns {any}\n */\nexport function spread_props(...props) {\n\treturn new Proxy({ props }, spread_props_handler);\n}\n\n/**\n * @param {Derived} current_value\n * @returns {boolean}\n */\nfunction has_destroyed_component_ctx(current_value) {\n\treturn current_value.ctx?.d ?? false;\n}\n\n/**\n * This function is responsible for synchronizing a possibly bound prop with the inner component state.\n * It is used whenever the compiler sees that the component writes to the prop, or when it has a default prop_value.\n * @template V\n * @param {Record<string, unknown>} props\n * @param {string} key\n * @param {number} flags\n * @param {V | (() => V)} [fallback]\n * @returns {(() => V | ((arg: V) => V) | ((arg: V, mutation: boolean) => V))}\n */\nexport function prop(props, key, flags, fallback) {\n\tvar immutable = (flags & PROPS_IS_IMMUTABLE) !== 0;\n\tvar runes = !legacy_mode_flag || (flags & PROPS_IS_RUNES) !== 0;\n\tvar bindable = (flags & PROPS_IS_BINDABLE) !== 0;\n\tvar lazy = (flags & PROPS_IS_LAZY_INITIAL) !== 0;\n\tvar is_store_sub = false;\n\tvar prop_value;\n\n\tif (bindable) {\n\t\t[prop_value, is_store_sub] = capture_store_binding(() => /** @type {V} */ (props[key]));\n\t} else {\n\t\tprop_value = /** @type {V} */ (props[key]);\n\t}\n\n\t// Can be the case when someone does `mount(Component, props)` with `let props = $state({...})`\n\t// or `createClassComponent(Component, props)`\n\tvar is_entry_props = STATE_SYMBOL in props || LEGACY_PROPS in props;\n\n\tvar setter =\n\t\t(bindable &&\n\t\t\t(get_descriptor(props, key)?.set ??\n\t\t\t\t(is_entry_props && key in props && ((v) => (props[key] = v))))) ||\n\t\tundefined;\n\n\tvar fallback_value = /** @type {V} */ (fallback);\n\tvar fallback_dirty = true;\n\tvar fallback_used = false;\n\n\tvar get_fallback = () => {\n\t\tfallback_used = true;\n\t\tif (fallback_dirty) {\n\t\t\tfallback_dirty = false;\n\t\t\tif (lazy) {\n\t\t\t\tfallback_value = untrack(/** @type {() => V} */ (fallback));\n\t\t\t} else {\n\t\t\t\tfallback_value = /** @type {V} */ (fallback);\n\t\t\t}\n\t\t}\n\n\t\treturn fallback_value;\n\t};\n\n\tif (prop_value === undefined && fallback !== undefined) {\n\t\tif (setter && runes) {\n\t\t\te.props_invalid_value(key);\n\t\t}\n\n\t\tprop_value = get_fallback();\n\t\tif (setter) setter(prop_value);\n\t}\n\n\t/** @type {() => V} */\n\tvar getter;\n\tif (runes) {\n\t\tgetter = () => {\n\t\t\tvar value = /** @type {V} */ (props[key]);\n\t\t\tif (value === undefined) return get_fallback();\n\t\t\tfallback_dirty = true;\n\t\t\tfallback_used = false;\n\t\t\treturn value;\n\t\t};\n\t} else {\n\t\t// Svelte 4 did not trigger updates when a primitive value was updated to the same value.\n\t\t// Replicate that behavior through using a derived\n\t\tvar derived_getter = (immutable ? derived : derived_safe_equal)(\n\t\t\t() => /** @type {V} */ (props[key])\n\t\t);\n\t\tderived_getter.f |= LEGACY_DERIVED_PROP;\n\t\tgetter = () => {\n\t\t\tvar value = get(derived_getter);\n\t\t\tif (value !== undefined) fallback_value = /** @type {V} */ (undefined);\n\t\t\treturn value === undefined ? fallback_value : value;\n\t\t};\n\t}\n\n\t// easy mode — prop is never written to\n\tif ((flags & PROPS_IS_UPDATED) === 0) {\n\t\treturn getter;\n\t}\n\n\t// intermediate mode — prop is written to, but the parent component had\n\t// `bind:foo` which means we can just call `$$props.foo = value` directly\n\tif (setter) {\n\t\tvar legacy_parent = props.$$legacy;\n\t\treturn function (/** @type {any} */ value, /** @type {boolean} */ mutation) {\n\t\t\tif (arguments.length > 0) {\n\t\t\t\t// We don't want to notify if the value was mutated and the parent is in runes mode.\n\t\t\t\t// In that case the state proxy (if it exists) should take care of the notification.\n\t\t\t\t// If the parent is not in runes mode, we need to notify on mutation, too, that the prop\n\t\t\t\t// has changed because the parent will not be able to detect the change otherwise.\n\t\t\t\tif (!runes || !mutation || legacy_parent || is_store_sub) {\n\t\t\t\t\t/** @type {Function} */ (setter)(mutation ? getter() : value);\n\t\t\t\t}\n\t\t\t\treturn value;\n\t\t\t} else {\n\t\t\t\treturn getter();\n\t\t\t}\n\t\t};\n\t}\n\n\t// hard mode. this is where it gets ugly — the value in the child should\n\t// synchronize with the parent, but it should also be possible to temporarily\n\t// set the value to something else locally.\n\tvar from_child = false;\n\tvar was_from_child = false;\n\n\t// The derived returns the current value. The underlying mutable\n\t// source is written to from various places to persist this value.\n\tvar inner_current_value = mutable_source(prop_value);\n\tvar current_value = derived(() => {\n\t\tvar parent_value = getter();\n\t\tvar child_value = get(inner_current_value);\n\n\t\tif (from_child) {\n\t\t\tfrom_child = false;\n\t\t\twas_from_child = true;\n\t\t\treturn child_value;\n\t\t}\n\n\t\twas_from_child = false;\n\t\treturn (inner_current_value.v = parent_value);\n\t});\n\n\t// Ensure we eagerly capture the initial value if it's bindable\n\tif (bindable) {\n\t\tget(current_value);\n\t}\n\n\tif (!immutable) current_value.equals = safe_equals;\n\n\treturn function (/** @type {any} */ value, /** @type {boolean} */ mutation) {\n\t\t// legacy nonsense — need to ensure the source is invalidated when necessary\n\t\t// also needed for when handling inspect logic so we can inspect the correct source signal\n\t\tif (captured_signals !== null) {\n\t\t\t// set this so that we don't reset to the parent value if `d`\n\t\t\t// is invalidated because of `invalidate_inner_signals` (rather\n\t\t\t// than because the parent or child value changed)\n\t\t\tfrom_child = was_from_child;\n\t\t\t// invoke getters so that signals are picked up by `invalidate_inner_signals`\n\t\t\tgetter();\n\t\t\tget(inner_current_value);\n\t\t}\n\n\t\tif (arguments.length > 0) {\n\t\t\tconst new_value = mutation ? get(current_value) : runes && bindable ? proxy(value) : value;\n\n\t\t\tif (!current_value.equals(new_value)) {\n\t\t\t\tfrom_child = true;\n\t\t\t\tset(inner_current_value, new_value);\n\t\t\t\t// To ensure the fallback value is consistent when used with proxies, we\n\t\t\t\t// update the local fallback_value, but only if the fallback is actively used\n\t\t\t\tif (fallback_used && fallback_value !== undefined) {\n\t\t\t\t\tfallback_value = new_value;\n\t\t\t\t}\n\n\t\t\t\tif (has_destroyed_component_ctx(current_value)) {\n\t\t\t\t\treturn value;\n\t\t\t\t}\n\n\t\t\t\tuntrack(() => get(current_value)); // force a synchronisation immediately\n\t\t\t}\n\n\t\t\treturn value;\n\t\t}\n\n\t\tif (has_destroyed_component_ctx(current_value)) {\n\t\t\treturn current_value.v;\n\t\t}\n\n\t\treturn get(current_value);\n\t};\n}\n","/** @import { BlurParams, CrossfadeParams, DrawParams, FadeParams, FlyParams, ScaleParams, SlideParams, TransitionConfig } from './public' */\n\nimport { DEV } from 'esm-env';\nimport * as w from '../internal/client/warnings.js';\n\n/** @param {number} x */\nconst linear = (x) => x;\n\n/** @param {number} t */\nfunction cubic_out(t) {\n\tconst f = t - 1.0;\n\treturn f * f * f + 1.0;\n}\n\n/**\n * @param {number} t\n * @returns {number}\n */\nfunction cubic_in_out(t) {\n\treturn t < 0.5 ? 4.0 * t * t * t : 0.5 * Math.pow(2.0 * t - 2.0, 3.0) + 1.0;\n}\n\n/** @param {number | string} value\n * @returns {[number, string]}\n */\nfunction split_css_unit(value) {\n\tconst split = typeof value === 'string' && value.match(/^\\s*(-?[\\d.]+)([^\\s]*)\\s*$/);\n\treturn split ? [parseFloat(split[1]), split[2] || 'px'] : [/** @type {number} */ (value), 'px'];\n}\n\n/**\n * Animates a `blur` filter alongside an element's opacity.\n *\n * @param {Element} node\n * @param {BlurParams} [params]\n * @returns {TransitionConfig}\n */\nexport function blur(\n\tnode,\n\t{ delay = 0, duration = 400, easing = cubic_in_out, amount = 5, opacity = 0 } = {}\n) {\n\tconst style = getComputedStyle(node);\n\tconst target_opacity = +style.opacity;\n\tconst f = style.filter === 'none' ? '' : style.filter;\n\tconst od = target_opacity * (1 - opacity);\n\tconst [value, unit] = split_css_unit(amount);\n\treturn {\n\t\tdelay,\n\t\tduration,\n\t\teasing,\n\t\tcss: (_t, u) => `opacity: ${target_opacity - od * u}; filter: ${f} blur(${u * value}${unit});`\n\t};\n}\n\n/**\n * Animates the opacity of an element from 0 to the current opacity for `in` transitions and from the current opacity to 0 for `out` transitions.\n *\n * @param {Element} node\n * @param {FadeParams} [params]\n * @returns {TransitionConfig}\n */\nexport function fade(node, { delay = 0, duration = 400, easing = linear } = {}) {\n\tconst o = +getComputedStyle(node).opacity;\n\treturn {\n\t\tdelay,\n\t\tduration,\n\t\teasing,\n\t\tcss: (t) => `opacity: ${t * o}`\n\t};\n}\n\n/**\n * Animates the x and y positions and the opacity of an element. `in` transitions animate from the provided values, passed as parameters to the element's default values. `out` transitions animate from the element's default values to the provided values.\n *\n * @param {Element} node\n * @param {FlyParams} [params]\n * @returns {TransitionConfig}\n */\nexport function fly(\n\tnode,\n\t{ delay = 0, duration = 400, easing = cubic_out, x = 0, y = 0, opacity = 0 } = {}\n) {\n\tconst style = getComputedStyle(node);\n\tconst target_opacity = +style.opacity;\n\tconst transform = style.transform === 'none' ? '' : style.transform;\n\tconst od = target_opacity * (1 - opacity);\n\tconst [x_value, x_unit] = split_css_unit(x);\n\tconst [y_value, y_unit] = split_css_unit(y);\n\treturn {\n\t\tdelay,\n\t\tduration,\n\t\teasing,\n\t\tcss: (t, u) => `\n\t\t\ttransform: ${transform} translate(${(1 - t) * x_value}${x_unit}, ${(1 - t) * y_value}${y_unit});\n\t\t\topacity: ${target_opacity - od * u}`\n\t};\n}\n\nvar slide_warning = false;\n\n/**\n * Slides an element in and out.\n *\n * @param {Element} node\n * @param {SlideParams} [params]\n * @returns {TransitionConfig}\n */\nexport function slide(node, { delay = 0, duration = 400, easing = cubic_out, axis = 'y' } = {}) {\n\tconst style = getComputedStyle(node);\n\n\tif (DEV && !slide_warning && /(contents|inline|table)/.test(style.display)) {\n\t\tslide_warning = true;\n\t\tPromise.resolve().then(() => (slide_warning = false));\n\t\tw.transition_slide_display(style.display);\n\t}\n\n\tconst opacity = +style.opacity;\n\tconst primary_property = axis === 'y' ? 'height' : 'width';\n\tconst primary_property_value = parseFloat(style[primary_property]);\n\tconst secondary_properties = axis === 'y' ? ['top', 'bottom'] : ['left', 'right'];\n\tconst capitalized_secondary_properties = secondary_properties.map(\n\t\t(e) => /** @type {'Left' | 'Right' | 'Top' | 'Bottom'} */ (`${e[0].toUpperCase()}${e.slice(1)}`)\n\t);\n\tconst padding_start_value = parseFloat(style[`padding${capitalized_secondary_properties[0]}`]);\n\tconst padding_end_value = parseFloat(style[`padding${capitalized_secondary_properties[1]}`]);\n\tconst margin_start_value = parseFloat(style[`margin${capitalized_secondary_properties[0]}`]);\n\tconst margin_end_value = parseFloat(style[`margin${capitalized_secondary_properties[1]}`]);\n\tconst border_width_start_value = parseFloat(\n\t\tstyle[`border${capitalized_secondary_properties[0]}Width`]\n\t);\n\tconst border_width_end_value = parseFloat(\n\t\tstyle[`border${capitalized_secondary_properties[1]}Width`]\n\t);\n\treturn {\n\t\tdelay,\n\t\tduration,\n\t\teasing,\n\t\tcss: (t) =>\n\t\t\t'overflow: hidden;' +\n\t\t\t`opacity: ${Math.min(t * 20, 1) * opacity};` +\n\t\t\t`${primary_property}: ${t * primary_property_value}px;` +\n\t\t\t`padding-${secondary_properties[0]}: ${t * padding_start_value}px;` +\n\t\t\t`padding-${secondary_properties[1]}: ${t * padding_end_value}px;` +\n\t\t\t`margin-${secondary_properties[0]}: ${t * margin_start_value}px;` +\n\t\t\t`margin-${secondary_properties[1]}: ${t * margin_end_value}px;` +\n\t\t\t`border-${secondary_properties[0]}-width: ${t * border_width_start_value}px;` +\n\t\t\t`border-${secondary_properties[1]}-width: ${t * border_width_end_value}px;` +\n\t\t\t`min-${primary_property}: 0`\n\t};\n}\n\n/**\n * Animates the opacity and scale of an element. `in` transitions animate from the provided values, passed as parameters, to an element's current (default) values. `out` transitions animate from an element's default values to the provided values.\n *\n * @param {Element} node\n * @param {ScaleParams} [params]\n * @returns {TransitionConfig}\n */\nexport function scale(\n\tnode,\n\t{ delay = 0, duration = 400, easing = cubic_out, start = 0, opacity = 0 } = {}\n) {\n\tconst style = getComputedStyle(node);\n\tconst target_opacity = +style.opacity;\n\tconst transform = style.transform === 'none' ? '' : style.transform;\n\tconst sd = 1 - start;\n\tconst od = target_opacity * (1 - opacity);\n\treturn {\n\t\tdelay,\n\t\tduration,\n\t\teasing,\n\t\tcss: (_t, u) => `\n\t\t\ttransform: ${transform} scale(${1 - sd * u});\n\t\t\topacity: ${target_opacity - od * u}\n\t\t`\n\t};\n}\n\n/**\n * Animates the stroke of an SVG element, like a snake in a tube. `in` transitions begin with the path invisible and draw the path to the screen over time. `out` transitions start in a visible state and gradually erase the path. `draw` only works with elements that have a `getTotalLength` method, like `<path>` and `<polyline>`.\n *\n * @param {SVGElement & { getTotalLength(): number }} node\n * @param {DrawParams} [params]\n * @returns {TransitionConfig}\n */\nexport function draw(node, { delay = 0, speed, duration, easing = cubic_in_out } = {}) {\n\tlet len = node.getTotalLength();\n\tconst style = getComputedStyle(node);\n\tif (style.strokeLinecap !== 'butt') {\n\t\tlen += parseInt(style.strokeWidth);\n\t}\n\tif (duration === undefined) {\n\t\tif (speed === undefined) {\n\t\t\tduration = 800;\n\t\t} else {\n\t\t\tduration = len / speed;\n\t\t}\n\t} else if (typeof duration === 'function') {\n\t\tduration = duration(len);\n\t}\n\treturn {\n\t\tdelay,\n\t\tduration,\n\t\teasing,\n\t\tcss: (_, u) => `\n\t\t\tstroke-dasharray: ${len};\n\t\t\tstroke-dashoffset: ${u * len};\n\t\t`\n\t};\n}\n\n/**\n * @template T\n * @template S\n * @param {T} tar\n * @param {S} src\n * @returns {T & S}\n */\nfunction assign(tar, src) {\n\t// @ts-ignore\n\tfor (const k in src) tar[k] = src[k];\n\treturn /** @type {T & S} */ (tar);\n}\n\n/**\n * The `crossfade` function creates a pair of [transitions](https://svelte.dev/docs/svelte/transition) called `send` and `receive`. When an element is 'sent', it looks for a corresponding element being 'received', and generates a transition that transforms the element to its counterpart's position and fades it out. When an element is 'received', the reverse happens. If there is no counterpart, the `fallback` transition is used.\n *\n * @param {CrossfadeParams & {\n * \tfallback?: (node: Element, params: CrossfadeParams, intro: boolean) => TransitionConfig;\n * }} params\n * @returns {[(node: any, params: CrossfadeParams & { key: any; }) => () => TransitionConfig, (node: any, params: CrossfadeParams & { key: any; }) => () => TransitionConfig]}\n */\nexport function crossfade({ fallback, ...defaults }) {\n\t/** @type {Map<any, Element>} */\n\tconst to_receive = new Map();\n\t/** @type {Map<any, Element>} */\n\tconst to_send = new Map();\n\n\t/**\n\t * @param {Element} from_node\n\t * @param {Element} node\n\t * @param {CrossfadeParams} params\n\t * @returns {TransitionConfig}\n\t */\n\tfunction crossfade(from_node, node, params) {\n\t\tconst {\n\t\t\tdelay = 0,\n\t\t\tduration = /** @param {number} d */ (d) => Math.sqrt(d) * 30,\n\t\t\teasing = cubic_out\n\t\t} = assign(assign({}, defaults), params);\n\t\tconst from = from_node.getBoundingClientRect();\n\t\tconst to = node.getBoundingClientRect();\n\t\tconst dx = from.left - to.left;\n\t\tconst dy = from.top - to.top;\n\t\tconst dw = from.width / to.width;\n\t\tconst dh = from.height / to.height;\n\t\tconst d = Math.sqrt(dx * dx + dy * dy);\n\t\tconst style = getComputedStyle(node);\n\t\tconst transform = style.transform === 'none' ? '' : style.transform;\n\t\tconst opacity = +style.opacity;\n\t\treturn {\n\t\t\tdelay,\n\t\t\tduration: typeof duration === 'function' ? duration(d) : duration,\n\t\t\teasing,\n\t\t\tcss: (t, u) => `\n\t\t\t   opacity: ${t * opacity};\n\t\t\t   transform-origin: top left;\n\t\t\t   transform: ${transform} translate(${u * dx}px,${u * dy}px) scale(${t + (1 - t) * dw}, ${\n\t\t\t\t\t\tt + (1 - t) * dh\n\t\t\t\t\t});\n\t\t   `\n\t\t};\n\t}\n\n\t/**\n\t * @param {Map<any, Element>} items\n\t * @param {Map<any, Element>} counterparts\n\t * @param {boolean} intro\n\t * @returns {(node: any, params: CrossfadeParams & { key: any; }) => () => TransitionConfig}\n\t */\n\tfunction transition(items, counterparts, intro) {\n\t\t// @ts-expect-error TODO improve typings (are the public types wrong?)\n\t\treturn (node, params) => {\n\t\t\titems.set(params.key, node);\n\t\t\treturn () => {\n\t\t\t\tif (counterparts.has(params.key)) {\n\t\t\t\t\tconst other_node = counterparts.get(params.key);\n\t\t\t\t\tcounterparts.delete(params.key);\n\t\t\t\t\treturn crossfade(/** @type {Element} */ (other_node), node, params);\n\t\t\t\t}\n\t\t\t\t// if the node is disappearing altogether\n\t\t\t\t// (i.e. wasn't claimed by the other list)\n\t\t\t\t// then we need to supply an outro\n\t\t\t\titems.delete(params.key);\n\t\t\t\treturn fallback && fallback(node, params, intro);\n\t\t\t};\n\t\t};\n\t}\n\treturn [transition(to_send, to_receive, false), transition(to_receive, to_send, true)];\n}\n","/*\nAdapted from https://github.com/mattdesl\nDistributed under MIT License https://github.com/mattdesl/eases/blob/master/LICENSE.md\n*/\n\n/**\n * @param {number} t\n * @returns {number}\n */\nexport function linear(t) {\n\treturn t;\n}\n\n/**\n * @param {number} t\n * @returns {number}\n */\nexport function backInOut(t) {\n\tconst s = 1.70158 * 1.525;\n\tif ((t *= 2) < 1) return 0.5 * (t * t * ((s + 1) * t - s));\n\treturn 0.5 * ((t -= 2) * t * ((s + 1) * t + s) + 2);\n}\n\n/**\n * @param {number} t\n * @returns {number}\n */\nexport function backIn(t) {\n\tconst s = 1.70158;\n\treturn t * t * ((s + 1) * t - s);\n}\n\n/**\n * @param {number} t\n * @returns {number}\n */\nexport function backOut(t) {\n\tconst s = 1.70158;\n\treturn --t * t * ((s + 1) * t + s) + 1;\n}\n\n/**\n * @param {number} t\n * @returns {number}\n */\nexport function bounceOut(t) {\n\tconst a = 4.0 / 11.0;\n\tconst b = 8.0 / 11.0;\n\tconst c = 9.0 / 10.0;\n\tconst ca = 4356.0 / 361.0;\n\tconst cb = 35442.0 / 1805.0;\n\tconst cc = 16061.0 / 1805.0;\n\tconst t2 = t * t;\n\treturn t < a\n\t\t? 7.5625 * t2\n\t\t: t < b\n\t\t\t? 9.075 * t2 - 9.9 * t + 3.4\n\t\t\t: t < c\n\t\t\t\t? ca * t2 - cb * t + cc\n\t\t\t\t: 10.8 * t * t - 20.52 * t + 10.72;\n}\n\n/**\n * @param {number} t\n * @returns {number}\n */\nexport function bounceInOut(t) {\n\treturn t < 0.5 ? 0.5 * (1.0 - bounceOut(1.0 - t * 2.0)) : 0.5 * bounceOut(t * 2.0 - 1.0) + 0.5;\n}\n\n/**\n * @param {number} t\n * @returns {number}\n */\nexport function bounceIn(t) {\n\treturn 1.0 - bounceOut(1.0 - t);\n}\n\n/**\n * @param {number} t\n * @returns {number}\n */\nexport function circInOut(t) {\n\tif ((t *= 2) < 1) return -0.5 * (Math.sqrt(1 - t * t) - 1);\n\treturn 0.5 * (Math.sqrt(1 - (t -= 2) * t) + 1);\n}\n\n/**\n * @param {number} t\n * @returns {number}\n */\nexport function circIn(t) {\n\treturn 1.0 - Math.sqrt(1.0 - t * t);\n}\n\n/**\n * @param {number} t\n * @returns {number}\n */\nexport function circOut(t) {\n\treturn Math.sqrt(1 - --t * t);\n}\n\n/**\n * @param {number} t\n * @returns {number}\n */\nexport function cubicInOut(t) {\n\treturn t < 0.5 ? 4.0 * t * t * t : 0.5 * Math.pow(2.0 * t - 2.0, 3.0) + 1.0;\n}\n\n/**\n * @param {number} t\n * @returns {number}\n */\nexport function cubicIn(t) {\n\treturn t * t * t;\n}\n\n/**\n * @param {number} t\n * @returns {number}\n */\nexport function cubicOut(t) {\n\tconst f = t - 1.0;\n\treturn f * f * f + 1.0;\n}\n\n/**\n * @param {number} t\n * @returns {number}\n */\nexport function elasticInOut(t) {\n\treturn t < 0.5\n\t\t? 0.5 * Math.sin(((+13.0 * Math.PI) / 2) * 2.0 * t) * Math.pow(2.0, 10.0 * (2.0 * t - 1.0))\n\t\t: 0.5 *\n\t\t\t\tMath.sin(((-13.0 * Math.PI) / 2) * (2.0 * t - 1.0 + 1.0)) *\n\t\t\t\tMath.pow(2.0, -10.0 * (2.0 * t - 1.0)) +\n\t\t\t\t1.0;\n}\n\n/**\n * @param {number} t\n * @returns {number}\n */\nexport function elasticIn(t) {\n\treturn Math.sin((13.0 * t * Math.PI) / 2) * Math.pow(2.0, 10.0 * (t - 1.0));\n}\n\n/**\n * @param {number} t\n * @returns {number}\n */\nexport function elasticOut(t) {\n\treturn Math.sin((-13.0 * (t + 1.0) * Math.PI) / 2) * Math.pow(2.0, -10.0 * t) + 1.0;\n}\n\n/**\n * @param {number} t\n * @returns {number}\n */\nexport function expoInOut(t) {\n\treturn t === 0.0 || t === 1.0\n\t\t? t\n\t\t: t < 0.5\n\t\t\t? +0.5 * Math.pow(2.0, 20.0 * t - 10.0)\n\t\t\t: -0.5 * Math.pow(2.0, 10.0 - t * 20.0) + 1.0;\n}\n\n/**\n * @param {number} t\n * @returns {number}\n */\nexport function expoIn(t) {\n\treturn t === 0.0 ? t : Math.pow(2.0, 10.0 * (t - 1.0));\n}\n\n/**\n * @param {number} t\n * @returns {number}\n */\nexport function expoOut(t) {\n\treturn t === 1.0 ? t : 1.0 - Math.pow(2.0, -10.0 * t);\n}\n\n/**\n * @param {number} t\n * @returns {number}\n */\nexport function quadInOut(t) {\n\tt /= 0.5;\n\tif (t < 1) return 0.5 * t * t;\n\tt--;\n\treturn -0.5 * (t * (t - 2) - 1);\n}\n\n/**\n * @param {number} t\n * @returns {number}\n */\nexport function quadIn(t) {\n\treturn t * t;\n}\n\n/**\n * @param {number} t\n * @returns {number}\n */\nexport function quadOut(t) {\n\treturn -t * (t - 2.0);\n}\n\n/**\n * @param {number} t\n * @returns {number}\n */\nexport function quartInOut(t) {\n\treturn t < 0.5 ? +8.0 * Math.pow(t, 4.0) : -8.0 * Math.pow(t - 1.0, 4.0) + 1.0;\n}\n\n/**\n * @param {number} t\n * @returns {number}\n */\nexport function quartIn(t) {\n\treturn Math.pow(t, 4.0);\n}\n\n/**\n * @param {number} t\n * @returns {number}\n */\nexport function quartOut(t) {\n\treturn Math.pow(t - 1.0, 3.0) * (1.0 - t) + 1.0;\n}\n\n/**\n * @param {number} t\n * @returns {number}\n */\nexport function quintInOut(t) {\n\tif ((t *= 2) < 1) return 0.5 * t * t * t * t * t;\n\treturn 0.5 * ((t -= 2) * t * t * t * t + 2);\n}\n\n/**\n * @param {number} t\n * @returns {number}\n */\nexport function quintIn(t) {\n\treturn t * t * t * t * t;\n}\n\n/**\n * @param {number} t\n * @returns {number}\n */\nexport function quintOut(t) {\n\treturn --t * t * t * t * t + 1;\n}\n\n/**\n * @param {number} t\n * @returns {number}\n */\nexport function sineInOut(t) {\n\treturn -0.5 * (Math.cos(Math.PI * t) - 1);\n}\n\n/**\n * @param {number} t\n * @returns {number}\n */\nexport function sineIn(t) {\n\tconst v = Math.cos(t * Math.PI * 0.5);\n\tif (Math.abs(v) < 1e-14) return 1;\n\telse return 1 - v;\n}\n\n/**\n * @param {number} t\n * @returns {number}\n */\nexport function sineOut(t) {\n\treturn Math.sin((t * Math.PI) / 2);\n}\n","/** @import { FlipParams, AnimationConfig } from './public.js' */\nimport { cubicOut } from '../easing/index.js';\n\n/**\n * The flip function calculates the start and end position of an element and animates between them, translating the x and y values.\n * `flip` stands for [First, Last, Invert, Play](https://aerotwist.com/blog/flip-your-animations/).\n *\n * @param {Element} node\n * @param {{ from: DOMRect; to: DOMRect }} fromTo\n * @param {FlipParams} params\n * @returns {AnimationConfig}\n */\nexport function flip(node, { from, to }, params = {}) {\n\tvar { delay = 0, duration = (d) => Math.sqrt(d) * 120, easing = cubicOut } = params;\n\n\tvar style = getComputedStyle(node);\n\n\t// find the transform origin, expressed as a pair of values between 0 and 1\n\tvar transform = style.transform === 'none' ? '' : style.transform;\n\tvar [ox, oy] = style.transformOrigin.split(' ').map(parseFloat);\n\tox /= node.clientWidth;\n\toy /= node.clientHeight;\n\n\t// calculate effect of parent transforms and zoom\n\tvar zoom = get_zoom(node); // https://drafts.csswg.org/css-viewport/#effective-zoom\n\tvar sx = node.clientWidth / to.width / zoom;\n\tvar sy = node.clientHeight / to.height / zoom;\n\n\t// find the starting position of the transform origin\n\tvar fx = from.left + from.width * ox;\n\tvar fy = from.top + from.height * oy;\n\n\t// find the ending position of the transform origin\n\tvar tx = to.left + to.width * ox;\n\tvar ty = to.top + to.height * oy;\n\n\t// find the translation at the start of the transform\n\tvar dx = (fx - tx) * sx;\n\tvar dy = (fy - ty) * sy;\n\n\t// find the relative scale at the start of the transform\n\tvar dsx = from.width / to.width;\n\tvar dsy = from.height / to.height;\n\n\treturn {\n\t\tdelay,\n\t\tduration: typeof duration === 'function' ? duration(Math.sqrt(dx * dx + dy * dy)) : duration,\n\t\teasing,\n\t\tcss: (t, u) => {\n\t\t\tvar x = u * dx;\n\t\t\tvar y = u * dy;\n\t\t\tvar sx = t + u * dsx;\n\t\t\tvar sy = t + u * dsy;\n\n\t\t\treturn `transform: ${transform} translate(${x}px, ${y}px) scale(${sx}, ${sy});`;\n\t\t}\n\t};\n}\n\n/**\n * @param {Element} element\n */\nfunction get_zoom(element) {\n\tif ('currentCSSZoom' in element) {\n\t\treturn /** @type {number} */ (element.currentCSSZoom);\n\t}\n\n\t/** @type {Element | null} */\n\tvar current = element;\n\tvar zoom = 1;\n\n\twhile (current !== null) {\n\t\tzoom *= +getComputedStyle(current).zoom;\n\t\tcurrent = /** @type {Element | null} */ (current.parentElement);\n\t}\n\n\treturn zoom;\n}\n","import { writable } from 'svelte/store'\n\n/**\n * @typedef {import('svelte').ComponentType} SvelteComponent\n */\n\n/**\n * @typedef {import('svelte/transition').FlyParams} FlyParams\n */\n\n/**\n * @typedef {Object} SvelteToastCustomComponent\n * @property {SvelteComponent} src - custom Svelte Component\n * @property {Object<string,any>} [props] - props to pass into custom component\n * @property {string} [sendIdTo] - forward toast id to prop name\n */\n\n/**\n * @callback SvelteToastOnPopCallback\n * @param {number} [id] - optionally get the toast id if needed\n * @param {object} [details]\n */\n\n/**\n * @typedef {Object} SvelteToastOptions\n * @property {number} [id] - unique id generated for every toast\n * @property {string} [target] - container target name to send toast to\n * @property {string} [msg] - toast message\n * @property {number} [duration] - duration of progress bar tween from initial to next\n * @property {number} [initial] - initial progress bar value\n * @property {number} [next] - next progress bar value\n * @property {boolean} [pausable] - pause progress bar tween on mouse hover\n * @property {boolean} [dismissable] - allow dissmiss with close button\n * @property {boolean} [reversed] - display toasts in reverse order\n * @property {FlyParams} [intro] - toast intro fly animation settings\n * @property {Object<string,string|number>} [theme] - css var overrides\n * @property {string[]} [classes] - user-defined classes\n * @property {SvelteToastOnPopCallback} [onpop] - callback that runs on toast dismiss\n * @property {SvelteToastCustomComponent} [component] - send custom Svelte Component as a message\n * @property {number} [progress] - DEPRECATED\n */\n\n/** @type {SvelteToastOptions} */\nconst defaults = {\n  duration: 4000,\n  initial: 1,\n  next: 0,\n  pausable: false,\n  dismissable: true,\n  reversed: false,\n  intro: { x: 256 }\n}\n\nfunction createToast() {\n  const { subscribe, update } = writable(new Array())\n  /** @type {Object<string,SvelteToastOptions>} */\n  const options = {}\n  let count = 0\n\n  /** @param {any} obj */\n  function _obj(obj) {\n    return obj instanceof Object\n  }\n\n  function _init(target = 'default', opts = {}) {\n    options[target] = opts\n    return options\n  }\n\n  /**\n   * Send a new toast\n   * @param {(string|SvelteToastOptions)} msg\n   * @param {SvelteToastOptions} [opts]\n   * @returns {number}\n   */\n  function push(msg, opts) {\n    const param = {\n      target: 'default',\n      ...(_obj(msg) ? /** @type {SvelteToastOptions} */ (msg) : { ...opts, msg })\n    }\n    const conf = options[param.target] || {}\n    const entry = {\n      ...defaults,\n      ...conf,\n      ...param,\n      theme: { ...conf.theme, ...param.theme },\n      classes: [...(conf.classes || []), ...(param.classes || [])],\n      id: ++count\n    }\n    update((n) => (entry.reversed ? [...n, entry] : [entry, ...n]))\n    return count\n  }\n\n  /**\n   * Remove toast(s)\n   * - toast.pop() // removes the last toast\n   * - toast.pop(0) // remove all toasts\n   * - toast.pop(id) // removes the toast with specified `id`\n   * - toast.pop({ target: 'foo' }) // remove all toasts from target `foo`\n   * @param {(number|Object<'target',string>)} [id]\n   */\n  function pop(id) {\n    update((n) => {\n      if (!n.length || id === 0) return []\n      // Filter function is deprecated; shim added for backward compatibility\n      if (typeof id === 'function') return n.filter((i) => id(i))\n      if (_obj(id))\n        return n.filter(/** @type {SvelteToastOptions[]} i */ (i) => i.target !== id.target)\n      const found = id || Math.max(...n.map((i) => i.id))\n      return n.filter((i) => i.id !== found)\n    })\n  }\n\n  /**\n   * Update an existing toast\n   * @param {(number|SvelteToastOptions)} id\n   * @param {SvelteToastOptions} [opts]\n   */\n  function set(id, opts) {\n    /** @type {any} */\n    const param = _obj(id) ? id : { ...opts, id }\n    update((n) => {\n      const idx = n.findIndex((i) => i.id === param.id)\n      if (idx > -1) {\n        n[idx] = { ...n[idx], ...param }\n      }\n      return n\n    })\n  }\n\n  return { subscribe, push, pop, set, _init }\n}\n\nexport const toast = createToast()\n","/**\n * @param {any} obj\n * @returns {obj is Date}\n */\nexport function is_date(obj) {\n\treturn Object.prototype.toString.call(obj) === '[object Date]';\n}\n","/** @import { Task } from '../internal/client/types' */\n/** @import { Tweened } from './public' */\n/** @import { TweenedOptions } from './private' */\nimport { writable } from '../store/shared/index.js';\nimport { raf } from '../internal/client/timing.js';\nimport { loop } from '../internal/client/loop.js';\nimport { linear } from '../easing/index.js';\nimport { is_date } from './utils.js';\nimport { set, source } from '../internal/client/reactivity/sources.js';\nimport { get, render_effect } from 'svelte/internal/client';\n\n/**\n * @template T\n * @param {T} a\n * @param {T} b\n * @returns {(t: number) => T}\n */\nfunction get_interpolator(a, b) {\n\tif (a === b || a !== a) return () => a;\n\n\tconst type = typeof a;\n\tif (type !== typeof b || Array.isArray(a) !== Array.isArray(b)) {\n\t\tthrow new Error('Cannot interpolate values of different type');\n\t}\n\n\tif (Array.isArray(a)) {\n\t\tconst arr = /** @type {Array<any>} */ (b).map((bi, i) => {\n\t\t\treturn get_interpolator(/** @type {Array<any>} */ (a)[i], bi);\n\t\t});\n\n\t\t// @ts-ignore\n\t\treturn (t) => arr.map((fn) => fn(t));\n\t}\n\n\tif (type === 'object') {\n\t\tif (!a || !b) {\n\t\t\tthrow new Error('Object cannot be null');\n\t\t}\n\n\t\tif (is_date(a) && is_date(b)) {\n\t\t\tconst an = a.getTime();\n\t\t\tconst bn = b.getTime();\n\t\t\tconst delta = bn - an;\n\n\t\t\t// @ts-ignore\n\t\t\treturn (t) => new Date(an + t * delta);\n\t\t}\n\n\t\tconst keys = Object.keys(b);\n\n\t\t/** @type {Record<string, (t: number) => T>} */\n\t\tconst interpolators = {};\n\t\tkeys.forEach((key) => {\n\t\t\t// @ts-ignore\n\t\t\tinterpolators[key] = get_interpolator(a[key], b[key]);\n\t\t});\n\n\t\t// @ts-ignore\n\t\treturn (t) => {\n\t\t\t/** @type {Record<string, any>} */\n\t\t\tconst result = {};\n\t\t\tkeys.forEach((key) => {\n\t\t\t\tresult[key] = interpolators[key](t);\n\t\t\t});\n\t\t\treturn result;\n\t\t};\n\t}\n\n\tif (type === 'number') {\n\t\tconst delta = /** @type {number} */ (b) - /** @type {number} */ (a);\n\t\t// @ts-ignore\n\t\treturn (t) => a + t * delta;\n\t}\n\n\t// for non-numeric values, snap to the final value immediately\n\treturn () => b;\n}\n\n/**\n * A tweened store in Svelte is a special type of store that provides smooth transitions between state values over time.\n *\n * @deprecated Use [`Tween`](https://svelte.dev/docs/svelte/svelte-motion#Tween) instead\n * @template T\n * @param {T} [value]\n * @param {TweenedOptions<T>} [defaults]\n * @returns {Tweened<T>}\n */\nexport function tweened(value, defaults = {}) {\n\tconst store = writable(value);\n\t/** @type {Task} */\n\tlet task;\n\tlet target_value = value;\n\t/**\n\t * @param {T} new_value\n\t * @param {TweenedOptions<T>} [opts]\n\t */\n\tfunction set(new_value, opts) {\n\t\ttarget_value = new_value;\n\n\t\tif (value == null) {\n\t\t\tstore.set((value = new_value));\n\t\t\treturn Promise.resolve();\n\t\t}\n\n\t\t/** @type {Task | null} */\n\t\tlet previous_task = task;\n\n\t\tlet started = false;\n\t\tlet {\n\t\t\tdelay = 0,\n\t\t\tduration = 400,\n\t\t\teasing = linear,\n\t\t\tinterpolate = get_interpolator\n\t\t} = { ...defaults, ...opts };\n\n\t\tif (duration === 0) {\n\t\t\tif (previous_task) {\n\t\t\t\tprevious_task.abort();\n\t\t\t\tprevious_task = null;\n\t\t\t}\n\t\t\tstore.set((value = target_value));\n\t\t\treturn Promise.resolve();\n\t\t}\n\n\t\tconst start = raf.now() + delay;\n\n\t\t/** @type {(t: number) => T} */\n\t\tlet fn;\n\t\ttask = loop((now) => {\n\t\t\tif (now < start) return true;\n\t\t\tif (!started) {\n\t\t\t\tfn = interpolate(/** @type {any} */ (value), new_value);\n\t\t\t\tif (typeof duration === 'function')\n\t\t\t\t\tduration = duration(/** @type {any} */ (value), new_value);\n\t\t\t\tstarted = true;\n\t\t\t}\n\t\t\tif (previous_task) {\n\t\t\t\tprevious_task.abort();\n\t\t\t\tprevious_task = null;\n\t\t\t}\n\t\t\tconst elapsed = now - start;\n\t\t\tif (elapsed > /** @type {number} */ (duration)) {\n\t\t\t\tstore.set((value = new_value));\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\t// @ts-ignore\n\t\t\tstore.set((value = fn(easing(elapsed / duration))));\n\t\t\treturn true;\n\t\t});\n\t\treturn task.promise;\n\t}\n\treturn {\n\t\tset,\n\t\tupdate: (fn, opts) =>\n\t\t\tset(fn(/** @type {any} */ (target_value), /** @type {any} */ (value)), opts),\n\t\tsubscribe: store.subscribe\n\t};\n}\n\n/**\n * A wrapper for a value that tweens smoothly to its target value. Changes to `tween.target` will cause `tween.current` to\n * move towards it over time, taking account of the `delay`, `duration` and `easing` options.\n *\n * ```svelte\n * <script>\n * \timport { Tween } from 'svelte/motion';\n *\n * \tconst tween = new Tween(0);\n * </script>\n *\n * <input type=\"range\" bind:value={tween.target} />\n * <input type=\"range\" bind:value={tween.current} disabled />\n * ```\n * @template T\n * @since 5.8.0\n */\nexport class Tween {\n\t#current = source(/** @type {T} */ (undefined));\n\t#target = source(/** @type {T} */ (undefined));\n\n\t/** @type {TweenedOptions<T>} */\n\t#defaults;\n\n\t/** @type {import('../internal/client/types').Task | null} */\n\t#task = null;\n\n\t/**\n\t * @param {T} value\n\t * @param {TweenedOptions<T>} options\n\t */\n\tconstructor(value, options = {}) {\n\t\tthis.#current.v = this.#target.v = value;\n\t\tthis.#defaults = options;\n\t}\n\n\t/**\n\t * Create a tween whose value is bound to the return value of `fn`. This must be called\n\t * inside an effect root (for example, during component initialisation).\n\t *\n\t * ```svelte\n\t * <script>\n\t * \timport { Tween } from 'svelte/motion';\n\t *\n\t * \tlet { number } = $props();\n\t *\n\t * \tconst tween = Tween.of(() => number);\n\t * </script>\n\t * ```\n\t * @template U\n\t * @param {() => U} fn\n\t * @param {TweenedOptions<U>} [options]\n\t */\n\tstatic of(fn, options) {\n\t\tconst tween = new Tween(fn(), options);\n\n\t\trender_effect(() => {\n\t\t\ttween.set(fn());\n\t\t});\n\n\t\treturn tween;\n\t}\n\n\t/**\n\t * Sets `tween.target` to `value` and returns a `Promise` that resolves if and when `tween.current` catches up to it.\n\t *\n\t * If `options` are provided, they will override the tween's defaults.\n\t * @param {T} value\n\t * @param {TweenedOptions<T>} [options]\n\t * @returns\n\t */\n\tset(value, options) {\n\t\tset(this.#target, value);\n\n\t\tlet {\n\t\t\tdelay = 0,\n\t\t\tduration = 400,\n\t\t\teasing = linear,\n\t\t\tinterpolate = get_interpolator\n\t\t} = { ...this.#defaults, ...options };\n\n\t\tif (duration === 0) {\n\t\t\tthis.#task?.abort();\n\t\t\tset(this.#current, value);\n\t\t\treturn Promise.resolve();\n\t\t}\n\n\t\tconst start = raf.now() + delay;\n\n\t\t/** @type {(t: number) => T} */\n\t\tlet fn;\n\t\tlet started = false;\n\t\tlet previous_task = this.#task;\n\n\t\tthis.#task = loop((now) => {\n\t\t\tif (now < start) {\n\t\t\t\treturn true;\n\t\t\t}\n\n\t\t\tif (!started) {\n\t\t\t\tstarted = true;\n\n\t\t\t\tconst prev = this.#current.v;\n\n\t\t\t\tfn = interpolate(prev, value);\n\n\t\t\t\tif (typeof duration === 'function') {\n\t\t\t\t\tduration = duration(prev, value);\n\t\t\t\t}\n\n\t\t\t\tprevious_task?.abort();\n\t\t\t}\n\n\t\t\tconst elapsed = now - start;\n\n\t\t\tif (elapsed > /** @type {number} */ (duration)) {\n\t\t\t\tset(this.#current, value);\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\tset(this.#current, fn(easing(elapsed / /** @type {number} */ (duration))));\n\t\t\treturn true;\n\t\t});\n\n\t\treturn this.#task.promise;\n\t}\n\n\tget current() {\n\t\treturn get(this.#current);\n\t}\n\n\tget target() {\n\t\treturn get(this.#target);\n\t}\n\n\tset target(v) {\n\t\tthis.set(v);\n\t}\n}\n","<script>\nimport { onMount, onDestroy } from 'svelte'\nimport { tweened } from 'svelte/motion'\nimport { linear } from 'svelte/easing'\nimport { toast } from './stores.js'\n\n/** @type {import('./stores.js').SvelteToastOptions} */\nexport let item\n\n/** @type {any} */\nlet next = item.initial\nlet prev = next\nlet paused = false\nlet cprops = {}\n/** @type {any} */\nlet unlisten\n/** @type {MouseEvent | KeyboardEvent} */\nlet event\n\nconst progress = tweened(item.initial, { duration: item.duration, easing: linear })\n\n/** @param {MouseEvent|KeyboardEvent|undefined} [ev] */\nfunction close(ev) {\n  if (ev) event = ev\n  toast.pop(item.id)\n}\n\nfunction autoclose() {\n  if ($progress === 1 || $progress === 0) close()\n}\n\nfunction pause() {\n  if (!paused && $progress !== next) {\n    progress.set($progress, { duration: 0 })\n    paused = true\n  }\n}\n\nfunction resume() {\n  if (paused) {\n    const d = /** @type {any} */ (item.duration)\n    const duration = d - d * (($progress - prev) / (next - prev))\n    progress.set(next, { duration }).then(autoclose)\n    paused = false\n  }\n}\n\n/** @param {any} prop */\nfunction check(prop, kind = 'undefined') {\n  return typeof prop === kind\n}\n\nfunction listen(d = document) {\n  if (check(d.hidden)) return\n  const handler = () => (d.hidden ? pause() : resume())\n  const name = 'visibilitychange'\n  d.addEventListener(name, handler)\n  unlisten = () => d.removeEventListener(name, handler)\n  handler()\n}\n\n$: if (next !== item.next) {\n  next = item.next\n  prev = $progress\n  paused = false\n  progress.set(next).then(autoclose)\n}\n\n$: if (item.component) {\n  const { props = {}, sendIdTo } = item.component\n  cprops = { ...props, ...(sendIdTo && { [sendIdTo]: item.id }) }\n}\n\n// `progress` has been renamed to `next`; shim included for backward compatibility, to remove in next major\n$: if (!check(item.progress)) {\n  item.next = item.progress\n}\n\nonMount(listen)\n\nonDestroy(() => {\n  item.onpop && item.onpop(item.id, { event })\n  unlisten && unlisten()\n})\n</script>\n\n<div\n  role=\"status\"\n  class=\"_toastItem\"\n  class:pe={item.pausable}\n  on:mouseenter={() => {\n    if (item.pausable) pause()\n  }}\n  on:mouseleave={resume}\n>\n  <div class=\"_toastMsg\" class:pe={item.component}>\n    {#if item.component}\n      <svelte:component this={item.component.src} {...cprops} />\n    {:else}\n      {@html item.msg}\n    {/if}\n  </div>\n  {#if item.dismissable}\n    <div\n      class=\"_toastBtn pe\"\n      role=\"button\"\n      tabindex=\"0\"\n      on:click={(ev) => close(ev)}\n      on:keydown={(ev) => {\n        if (ev instanceof KeyboardEvent && ['Enter', ' '].includes(ev.key)) close(ev)\n      }}\n    />\n  {/if}\n  <progress class=\"_toastBar\" value={$progress} />\n</div>\n\n<style>\n._toastItem {\n  width: var(--toastWidth, 16rem);\n  height: var(--toastHeight, auto);\n  min-height: var(--toastMinHeight, 3.5rem);\n  margin: var(--toastMargin, 0 0 0.5rem 0);\n  padding: var(--toastPadding, 0);\n  background: var(--toastBackground, rgba(66, 66, 66, 0.9));\n  color: var(--toastColor, #fff);\n  box-shadow: var(\n    --toastBoxShadow,\n    0 4px 6px -1px rgba(0, 0, 0, 0.1),\n    0 2px 4px -1px rgba(0, 0, 0, 0.06)\n  );\n  border: var(--toastBorder, none);\n  border-radius: var(--toastBorderRadius, 0.125rem);\n  position: relative;\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  overflow: hidden;\n  will-change: transform, opacity;\n  -webkit-tap-highlight-color: transparent;\n}\n._toastMsg {\n  padding: var(--toastMsgPadding, 0.75rem 0.5rem);\n  flex: 1 1 0%;\n}\n.pe,\n._toastMsg :global(a) {\n  pointer-events: auto;\n}\n._toastBtn {\n  width: var(--toastBtnWidth, 2rem);\n  height: var(--toastBtnHeight, 100%);\n  cursor: pointer;\n  outline: none;\n}\n._toastBtn::after {\n  content: var(--toastBtnContent, '✕');\n  font: var(--toastBtnFont, 1rem sans-serif);\n  display: flex;\n  align-items: center;\n  justify-content: center;\n}\n._toastBar {\n  top: var(--toastBarTop, auto);\n  right: var(--toastBarRight, auto);\n  bottom: var(--toastBarBottom, 0);\n  left: var(--toastBarLeft, 0);\n  height: var(--toastBarHeight, 6px);\n  width: var(--toastBarWidth, 100%);\n  position: absolute;\n  display: block;\n  -webkit-appearance: none;\n  -moz-appearance: none;\n  appearance: none;\n  border: none;\n  background: transparent;\n  pointer-events: none;\n}\n._toastBar::-webkit-progress-bar {\n  background: transparent;\n}\n/* `--toastProgressBackground` renamed to `--toastBarBackground`; override included for backward compatibility */\n._toastBar::-webkit-progress-value {\n  background: var(--toastProgressBackground, var(--toastBarBackground, rgba(33, 150, 243, 0.75)));\n}\n._toastBar::-moz-progress-bar {\n  background: var(--toastProgressBackground, var(--toastBarBackground, rgba(33, 150, 243, 0.75)));\n}\n</style>\n","/** @import { TemplateNode, Dom, Effect } from '#client' */\nimport { EFFECT_TRANSPARENT } from '../../constants.js';\nimport { block, branch, pause_effect } from '../../reactivity/effects.js';\nimport { hydrate_next, hydrate_node, hydrating } from '../hydration.js';\n\n/**\n * @template P\n * @template {(props: P) => void} C\n * @param {TemplateNode} node\n * @param {() => C} get_component\n * @param {(anchor: TemplateNode, component: C) => Dom | void} render_fn\n * @returns {void}\n */\nexport function component(node, get_component, render_fn) {\n\tif (hydrating) {\n\t\thydrate_next();\n\t}\n\n\tvar anchor = node;\n\n\t/** @type {C} */\n\tvar component;\n\n\t/** @type {Effect | null} */\n\tvar effect;\n\n\tblock(() => {\n\t\tif (component === (component = get_component())) return;\n\n\t\tif (effect) {\n\t\t\tpause_effect(effect);\n\t\t\teffect = null;\n\t\t}\n\n\t\tif (component) {\n\t\t\teffect = branch(() => render_fn(anchor, component));\n\t\t}\n\t}, EFFECT_TRANSPARENT);\n\n\tif (hydrating) {\n\t\tanchor = hydrate_node;\n\t}\n}\n","/** @import { Effect, TemplateNode } from '#client' */\nimport { FILENAME, HYDRATION_ERROR } from '../../../../constants.js';\nimport { block, branch, destroy_effect } from '../../reactivity/effects.js';\nimport { hydrate_next, hydrate_node, hydrating, set_hydrate_node } from '../hydration.js';\nimport { create_fragment_from_html } from '../reconciler.js';\nimport { assign_nodes } from '../template.js';\nimport * as w from '../../warnings.js';\nimport { hash, sanitize_location } from '../../../../utils.js';\nimport { DEV } from 'esm-env';\nimport { dev_current_component_function } from '../../context.js';\nimport { get_first_child, get_next_sibling } from '../operations.js';\n\n/**\n * @param {Element} element\n * @param {string | null} server_hash\n * @param {string} value\n */\nfunction check_hash(element, server_hash, value) {\n\tif (!server_hash || server_hash === hash(String(value ?? ''))) return;\n\n\tlet location;\n\n\t// @ts-expect-error\n\tconst loc = element.__svelte_meta?.loc;\n\tif (loc) {\n\t\tlocation = `near ${loc.file}:${loc.line}:${loc.column}`;\n\t} else if (dev_current_component_function?.[FILENAME]) {\n\t\tlocation = `in ${dev_current_component_function[FILENAME]}`;\n\t}\n\n\tw.hydration_html_changed(sanitize_location(location));\n}\n\n/**\n * @param {Element | Text | Comment} node\n * @param {() => string} get_value\n * @param {boolean} svg\n * @param {boolean} mathml\n * @param {boolean} [skip_warning]\n * @returns {void}\n */\nexport function html(node, get_value, svg, mathml, skip_warning) {\n\tvar anchor = node;\n\n\tvar value = '';\n\n\t/** @type {Effect | undefined} */\n\tvar effect;\n\n\tblock(() => {\n\t\tif (value === (value = get_value() ?? '')) {\n\t\t\tif (hydrating) {\n\t\t\t\thydrate_next();\n\t\t\t}\n\t\t\treturn;\n\t\t}\n\n\t\tif (effect !== undefined) {\n\t\t\tdestroy_effect(effect);\n\t\t\teffect = undefined;\n\t\t}\n\n\t\tif (value === '') return;\n\n\t\teffect = branch(() => {\n\t\t\tif (hydrating) {\n\t\t\t\t// We're deliberately not trying to repair mismatches between server and client,\n\t\t\t\t// as it's costly and error-prone (and it's an edge case to have a mismatch anyway)\n\t\t\t\tvar hash = /** @type {Comment} */ (hydrate_node).data;\n\t\t\t\tvar next = hydrate_next();\n\t\t\t\tvar last = next;\n\n\t\t\t\twhile (\n\t\t\t\t\tnext !== null &&\n\t\t\t\t\t(next.nodeType !== 8 || /** @type {Comment} */ (next).data !== '')\n\t\t\t\t) {\n\t\t\t\t\tlast = next;\n\t\t\t\t\tnext = /** @type {TemplateNode} */ (get_next_sibling(next));\n\t\t\t\t}\n\n\t\t\t\tif (next === null) {\n\t\t\t\t\tw.hydration_mismatch();\n\t\t\t\t\tthrow HYDRATION_ERROR;\n\t\t\t\t}\n\n\t\t\t\tif (DEV && !skip_warning) {\n\t\t\t\t\tcheck_hash(/** @type {Element} */ (next.parentNode), hash, value);\n\t\t\t\t}\n\n\t\t\t\tassign_nodes(hydrate_node, last);\n\t\t\t\tanchor = set_hydrate_node(next);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tvar html = value + '';\n\t\t\tif (svg) html = `<svg>${html}</svg>`;\n\t\t\telse if (mathml) html = `<math>${html}</math>`;\n\n\t\t\t// Don't use create_fragment_with_script_from_html here because that would mean script tags are executed.\n\t\t\t// @html is basically `.innerHTML = ...` and that doesn't execute scripts either due to security reasons.\n\t\t\t/** @type {DocumentFragment | Element} */\n\t\t\tvar node = create_fragment_from_html(html);\n\n\t\t\tif (svg || mathml) {\n\t\t\t\tnode = /** @type {Element} */ (get_first_child(node));\n\t\t\t}\n\n\t\t\tassign_nodes(\n\t\t\t\t/** @type {TemplateNode} */ (get_first_child(node)),\n\t\t\t\t/** @type {TemplateNode} */ (node.lastChild)\n\t\t\t);\n\n\t\t\tif (svg || mathml) {\n\t\t\t\twhile (get_first_child(node)) {\n\t\t\t\t\tanchor.before(/** @type {Node} */ (get_first_child(node)));\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tanchor.before(node);\n\t\t\t}\n\t\t});\n\t});\n}\n","<script>\nimport { fade, fly } from 'svelte/transition'\nimport { flip } from 'svelte/animate'\nimport { toast } from './stores.js'\nimport ToastItem from './ToastItem.svelte'\n\n/** @type {import('./stores.js').SvelteToastOptions} */\nexport let options = {}\n/** @type {(string|'default')} */\nexport let target = 'default'\n\n/** @type {import('./stores.js').SvelteToastOptions[]} */\nlet items = []\n\n/** @param {Object<string,string|number>} [theme] */\nfunction getCss(theme) {\n  return theme ? Object.keys(theme).reduce((a, c) => `${a}${c}:${theme[c]};`, '') : undefined\n}\n\n$: toast._init(target, options)\n\n$: items = $toast.filter((i) => i.target === target)\n</script>\n\n<ul class=\"_toastContainer\">\n  {#each items as item (item.id)}\n    <li\n      class={item.classes?.join(' ')}\n      in:fly={item.intro}\n      out:fade\n      animate:flip={{ duration: 200 }}\n      style={getCss(item.theme)}\n    >\n      <ToastItem {item} />\n    </li>\n  {/each}\n</ul>\n\n<style>\n._toastContainer {\n  top: var(--toastContainerTop, 1.5rem);\n  right: var(--toastContainerRight, 2rem);\n  bottom: var(--toastContainerBottom, auto);\n  left: var(--toastContainerLeft, auto);\n  position: fixed;\n  margin: 0;\n  padding: 0;\n  list-style-type: none;\n  pointer-events: none;\n  z-index: var(--toastContainerZIndex, 9999);\n}\n</style>\n","<script lang=\"ts\">\n    import { preventDefault } from 'svelte/legacy';\n\n    import { SvelteToast, toast } from \"@zerodevx/svelte-toast\";\n    import ThemeToggle from \"./components/ThemeToggle.svelte\";\n\n    const MILLISECONDS_TO_MINUTES_MAGIC_NUMBER = 60000;\n\n    const getDataFromStorage = () => {\n        const storage = Object.assign({}, window.localStorage);\n        delete storage.theme;\n        return storage;\n    };\n    const updateCurrentData = () => (currentData = getDataFromStorage());\n    const handleNewDayClick = () => {\n        const theme = window.localStorage.getItem(\"theme\") ?? '';\n        window.localStorage.clear();\n        window.localStorage.setItem(\"theme\", theme);\n        updateCurrentData();\n        toast.push(`Cleared yesterday's activities!`);\n    };\n    const handleActivityFormSubmit = () => {\n        const key = `${Math.floor(\n            Date.now() / MILLISECONDS_TO_MINUTES_MAGIC_NUMBER,\n        )}`;\n        if (window.localStorage.getItem(key) != null) {\n            toast.push(`Cannot update twice per-minute.`);\n            return;\n        }\n        const previousNormalizedValue = entries[entries.length - 1]?.value\n            ?.toLowerCase()\n            .trim();\n        const normalizedValue = value.toLowerCase().trim();\n        if (previousNormalizedValue == normalizedValue) {\n            window.localStorage.removeItem(entries[entries.length - 1].key);\n        }\n        window.localStorage.setItem(key, value);\n        value = \"\";\n        updateCurrentData();\n    };\n    const handleGoToInputClick = () => {\n        const matches = document.querySelectorAll(\"input[type=text]\");\n        if (matches.length < 1) return;\n        (matches[0] as HTMLElement).focus();\n    };\n    const formatLogTimeCell = (key: number) => {\n        const reconstructed = new Date(\n            key * MILLISECONDS_TO_MINUTES_MAGIC_NUMBER,\n        );\n        const hours = reconstructed.getHours();\n        const minutes = reconstructed.getMinutes();\n        const padding = `${minutes}`.length === 1 ? 0 : '';\n        return `${hours}:${padding}${minutes}`;\n    };\n    const formatDurationCell = (current: number, previous: number) =>\n        previous == null ? \"N/A\" : `${current - previous} min`;\n    const useEventListeners = (node: any) => {\n        const handleFocus = () => {\n            isActivityInputInFocus = true;\n            node && typeof node.select === \"function\" && node.select();\n        };\n        const handleBlur = () => {\n            isActivityInputInFocus = false;\n        };\n        node.addEventListener(\"focus\", handleFocus);\n        node.addEventListener(\"blur\", handleBlur);\n        return {\n            destroy() {\n                node.removeEventListener(\"focus\", handleFocus);\n                node.removeEventListener(\"blur\", handleBlur);\n            },\n        };\n    };\n\n    let value: string = $state();\n    let isActivityInputInFocus: boolean = $state();\n    let currentData = $state(getDataFromStorage());\n    let entries = $derived(Object.entries(currentData)\n        .map((e) => ({\n            key: e[0],\n            value: e[1],\n        }))\n        .sort((a, b) => Number(a.key) - Number(b.key)));\n</script>\n\n<SvelteToast />\n<h1>Time Log</h1>\n<div class=\"form-wrapper\">\n    <form action=\"\" onsubmit={preventDefault(handleActivityFormSubmit)}>\n        <div>\n            <label for=\"activity\">&nbsp;Activity:</label>\n            <br />\n            <input\n                type=\"text\"\n                bind:value\n                name=\"Activity\"\n                id=\"activity\"\n                use:useEventListeners\n            />\n        </div>\n        <input type=\"submit\" disabled={!value} value=\"Log Time\" />\n    </form>\n</div>\n{#if entries.length > 1}\n    <h2>Latest Log</h2>\n    <table>\n        <thead>\n            <tr>\n                <th colspan=\"1\">Log Time</th>\n                <th colspan=\"1\">Duration</th>\n                <th colspan=\"1\">Activity</th>\n            </tr>\n        </thead>\n        <tbody>\n            <tr>\n                <td>{formatLogTimeCell(entries[entries.length - 1].key)}</td>\n                <td\n                    >{formatDurationCell(\n                        entries[entries.length - 1].key,\n                        entries[entries.length - 2].key,\n                    )}</td\n                >\n                <td>{entries[entries.length - 1].value}</td>\n            </tr>\n        </tbody>\n    </table>\n{/if}\n{#if entries.length > 0}\n    <h2>Full Summary</h2>\n    <table>\n        <thead>\n            <tr>\n                <th colspan=\"1\">Log Time</th>\n                <th colspan=\"1\">Duration</th>\n                <th colspan=\"1\">Activity</th>\n            </tr>\n        </thead>\n        <tbody>\n            {#each entries as { key, value }, i}\n                <tr>\n                    <td>{formatLogTimeCell(key)}</td>\n                    <td>{formatDurationCell(key, entries[i - 1]?.key)}</td>\n                    <td>{value}</td>\n                </tr>\n            {/each}\n        </tbody>\n    </table>\n    <input type=\"button\" value=\"New Day\" onclick={handleNewDayClick} />\n{/if}\n{#if !isActivityInputInFocus}\n    <input\n        class=\"floating\"\n        type=\"button\"\n        value=\"🖋️\"\n        onclick={handleGoToInputClick}\n    />\n{/if}\n<div id=\"theme-wrapper\">\n    <ThemeToggle />\n</div>\n<footer>\n    <a href=\"https://github.com/matthewnoel/time-log\" target=\"_blank\"\n        >The Code</a\n    >\n    <a\n        href=\"https://raw.githubusercontent.com/matthewnoel/time-log/main/third-party-licenses.txt\"\n        target=\"_blank\">Third-Party Licenses</a\n    >\n</footer>\n\n<style>\n    h1,\n    h2 {\n        text-align: center;\n    }\n    input[type=\"button\"] {\n        display: block;\n        margin: 0.5rem auto;\n    }\n    input[type=\"submit\"] {\n        margin: 0.5rem auto;\n    }\n    input[type=\"text\"] {\n        display: block;\n        margin: auto;\n        width: 95%;\n    }\n    table {\n        margin: auto;\n    }\n    form {\n        display: inline-block;\n        padding: 0;\n        border: 1px solid var(--color-fg);\n        border-radius: 3px;\n        width: 100%;\n        max-width: 20rem;\n    }\n    form > div {\n        text-align: left;\n        padding: 0.5rem;\n    }\n    a {\n        text-align: center;\n        display: block;\n    }\n    footer {\n        margin: 2rem 0 1rem 0;\n    }\n    .form-wrapper {\n        text-align: center;\n    }\n    .floating {\n        position: fixed;\n        bottom: 1rem;\n        right: 1rem;\n        font-size: 2em;\n    }\n    #theme-wrapper {\n        position: fixed;\n        bottom: 1rem;\n        left: 1rem;\n    }\n</style>\n","import App from './App.svelte';\nimport { mount } from \"svelte\";\n\nvar app = mount(App, {\n\ttarget: document.body\n});\n\nexport default app;\n","/** @import { ActionReturn } from 'svelte/action' */\nimport { noop } from '../../../shared/utils.js';\nimport { user_pre_effect } from '../../reactivity/effects.js';\nimport { on } from '../elements/events.js';\n\n/**\n * Substitute for the `trusted` event modifier\n * @deprecated\n * @param {(event: Event, ...args: Array<unknown>) => void} fn\n * @returns {(event: Event, ...args: unknown[]) => void}\n */\nexport function trusted(fn) {\n\treturn function (...args) {\n\t\tvar event = /** @type {Event} */ (args[0]);\n\t\tif (event.isTrusted) {\n\t\t\t// @ts-ignore\n\t\t\tfn?.apply(this, args);\n\t\t}\n\t};\n}\n\n/**\n * Substitute for the `self` event modifier\n * @deprecated\n * @param {(event: Event, ...args: Array<unknown>) => void} fn\n * @returns {(event: Event, ...args: unknown[]) => void}\n */\nexport function self(fn) {\n\treturn function (...args) {\n\t\tvar event = /** @type {Event} */ (args[0]);\n\t\t// @ts-ignore\n\t\tif (event.target === this) {\n\t\t\t// @ts-ignore\n\t\t\tfn?.apply(this, args);\n\t\t}\n\t};\n}\n\n/**\n * Substitute for the `stopPropagation` event modifier\n * @deprecated\n * @param {(event: Event, ...args: Array<unknown>) => void} fn\n * @returns {(event: Event, ...args: unknown[]) => void}\n */\nexport function stopPropagation(fn) {\n\treturn function (...args) {\n\t\tvar event = /** @type {Event} */ (args[0]);\n\t\tevent.stopPropagation();\n\t\t// @ts-ignore\n\t\treturn fn?.apply(this, args);\n\t};\n}\n\n/**\n * Substitute for the `once` event modifier\n * @deprecated\n * @param {(event: Event, ...args: Array<unknown>) => void} fn\n * @returns {(event: Event, ...args: unknown[]) => void}\n */\nexport function once(fn) {\n\tvar ran = false;\n\n\treturn function (...args) {\n\t\tif (ran) return;\n\t\tran = true;\n\n\t\t// @ts-ignore\n\t\treturn fn?.apply(this, args);\n\t};\n}\n\n/**\n * Substitute for the `stopImmediatePropagation` event modifier\n * @deprecated\n * @param {(event: Event, ...args: Array<unknown>) => void} fn\n * @returns {(event: Event, ...args: unknown[]) => void}\n */\nexport function stopImmediatePropagation(fn) {\n\treturn function (...args) {\n\t\tvar event = /** @type {Event} */ (args[0]);\n\t\tevent.stopImmediatePropagation();\n\t\t// @ts-ignore\n\t\treturn fn?.apply(this, args);\n\t};\n}\n\n/**\n * Substitute for the `preventDefault` event modifier\n * @deprecated\n * @param {(event: Event, ...args: Array<unknown>) => void} fn\n * @returns {(event: Event, ...args: unknown[]) => void}\n */\nexport function preventDefault(fn) {\n\treturn function (...args) {\n\t\tvar event = /** @type {Event} */ (args[0]);\n\t\tevent.preventDefault();\n\t\t// @ts-ignore\n\t\treturn fn?.apply(this, args);\n\t};\n}\n\n/**\n * Substitute for the `passive` event modifier, implemented as an action\n * @deprecated\n * @param {HTMLElement} node\n * @param {[event: string, handler: () => EventListener]} options\n */\nexport function passive(node, [event, handler]) {\n\tuser_pre_effect(() => {\n\t\treturn on(node, event, handler() ?? noop, {\n\t\t\tpassive: true\n\t\t});\n\t});\n}\n\n/**\n * Substitute for the `nonpassive` event modifier, implemented as an action\n * @deprecated\n * @param {HTMLElement} node\n * @param {[event: string, handler: () => EventListener]} options\n */\nexport function nonpassive(node, [event, handler]) {\n\tuser_pre_effect(() => {\n\t\treturn on(node, event, handler() ?? noop, {\n\t\t\tpassive: false\n\t\t});\n\t});\n}\n","/** @import { ActionPayload } from '#client' */\nimport { effect, render_effect } from '../../reactivity/effects.js';\nimport { safe_not_equal } from '../../reactivity/equality.js';\nimport { deep_read_state, untrack } from '../../runtime.js';\n\n/**\n * @template P\n * @param {Element} dom\n * @param {(dom: Element, value?: P) => ActionPayload<P>} action\n * @param {() => P} [get_value]\n * @returns {void}\n */\nexport function action(dom, action, get_value) {\n\teffect(() => {\n\t\tvar payload = untrack(() => action(dom, get_value?.()) || {});\n\n\t\tif (get_value && payload?.update) {\n\t\t\tvar inited = false;\n\t\t\t/** @type {P} */\n\t\t\tvar prev = /** @type {any} */ ({}); // initialize with something so it's never equal on first run\n\n\t\t\trender_effect(() => {\n\t\t\t\tvar value = get_value();\n\n\t\t\t\t// Action's update method is coarse-grained, i.e. when anything in the passed value changes, update.\n\t\t\t\t// This works in legacy mode because of mutable_source being updated as a whole, but when using $state\n\t\t\t\t// together with actions and mutation, it wouldn't notice the change without a deep read.\n\t\t\t\tdeep_read_state(value);\n\n\t\t\t\tif (inited && safe_not_equal(prev, value)) {\n\t\t\t\t\tprev = value;\n\t\t\t\t\t/** @type {Function} */ (payload.update)(value);\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tinited = true;\n\t\t}\n\n\t\tif (payload?.destroy) {\n\t\t\treturn () => /** @type {Function} */ (payload.destroy)();\n\t\t}\n\t});\n}\n","<script lang=\"ts\">\n    // ts-ignore\n    const getTheme = ({ localStorageTheme: string = localStorageTheme, systemSettingDark: MediaQueryList = systemSettingDark }) => {\n        if (localStorageTheme !== null) return localStorageTheme;\n        if (systemSettingDark.matches) return dark;\n        return light;\n    };\n    const update = (theme: string) => {\n        value = theme === dark ? \"🌞\" : \"🌚\";\n        (document.querySelector(\"html\") as HTMLElement).setAttribute(\"data-theme\", theme);\n    };\n    const handleClick = () => {\n        const newTheme = currentThemeSetting === dark ? light : dark;\n        localStorage.setItem(\"theme\", newTheme);\n        update(newTheme);\n        currentThemeSetting = newTheme;\n    };\n    const light = \"light\";\n    const dark = \"dark\";\n    const localStorageTheme = localStorage.getItem(\"theme\") ?? '';\n    const systemSettingDark = window.matchMedia(\"(prefers-color-scheme: dark)\");\n    let currentThemeSetting = getTheme({\n        localStorageTheme,\n        systemSettingDark,\n    });\n    let value = $state(\"🌞\");\n    update(currentThemeSetting);\n</script>\n\n<input\n    type=\"button\"\n    data-theme-toggle\n    aria-label={value === \"🌚\"\n        ? \"Change to dark theme.\"\n        : \"Change to light theme.\"}\n    {value}\n    onclick={handleClick}\n/>\n"],"names":["window","__svelte","v","Set","add","UNINITIALIZED","Symbol","DEV","BRANCH_EFFECT","ROOT_EFFECT","BOUNDARY_EFFECT","UNOWNED","DISCONNECTED","CLEAN","DIRTY","MAYBE_DIRTY","INERT","DESTROYED","EFFECT_TRANSPARENT","EFFECT_HAS_DERIVED","STATE_SYMBOL","LEGACY_PROPS","is_array","Array","isArray","index_of","prototype","indexOf","array_from","from","define_property","Object","defineProperty","get_descriptor","getOwnPropertyDescriptor","get_descriptors","getOwnPropertyDescriptors","object_prototype","array_prototype","get_prototype_of","getPrototypeOf","is_function","thing","noop","run","fn","run_all","arr","i","length","micro_tasks","run_micro_tasks","tasks","queue_micro_task","queueMicrotask","push","equals","value","this","safe_not_equal","a","b","safe_equals","legacy_mode_flag","old_values","Map","source","stack","f","reactions","rv","wv","state","push_derived_source","mutable_source","initial_value","immutable","s","component_context","l","mutable_state","active_reaction","untracking","derived_sources","set","is_runes","includes","Error","e.state_unsafe_mutation","internal_set","old_value","is_destroying_effect","increment_write_version","mark_reactions","active_effect","untracked_writes","set_untracked_writes","signal","status","runes","reaction","flags","set_signal_status","schedule_effect","derived","DERIVED","parent_derived","ctx","deps","effects","parent","derived_safe_equal","destroy_derived_effects","destroy_effect","update_derived","prev_active_effect","set_active_effect","get_derived_parent_effect","update_reaction","execute_derived","skip_reaction","proxy","prev","metadata","sources","is_proxied_array","version","Proxy","_","prop","descriptor","configurable","enumerable","writable","e.state_descriptors_fixed","get","undefined","deleteProperty","target","ls","n","Number","isInteger","update_version","receiver","exists","Reflect","has","other_s","call","ownKeys","own_keys","filter","key","setPrototypeOf","e.state_prototype_fixed","d","$window","is_firefox","first_child_getter","next_sibling_getter","create_text","document","createTextNode","get_first_child","node","get_next_sibling","child","is_text","first_child","fragment","first","Comment","data","sibling","count","next_sibling","is_throwing_error","is_flushing","last_scheduled_effect","is_updating_effect","set_is_destroying_effect","queued_root_effects","set_active_reaction","effect","new_deps","skipped_deps","write_version","read_version","check_dirtiness","dependencies","is_unowned","dependency","is_disconnected","is_unowned_connected","handle_error","error","previous_effect","should_rethrow_error","current","propagate_error","schedule_possible_effect_self_invalidation","root","previous_deps","previous_skipped_deps","previous_untracked_writes","previous_reaction","previous_skip_reaction","prev_derived_sources","previous_component_context","previous_untracking","set_component_context","result","remove_reactions","remove_reaction","index","new_length","pop","start_index","update_effect","was_updating_effect","next","destroy_block_effect_children","destroy_effect_children","execute_effect_teardown","teardown","infinite_loop_guard","e.effect_update_depth_exceeded","flush_queued_root_effects","flush_count","root_effects","flush_queued_effects","process_effects","clear","nodes_start","unlink_effect","is_branch","previous_active_reaction","is_derived","e.state_unsafe_local_read","untrack","STATUS_MASK","deep_read_state","EventTarget","deep_read","visited","Date","getTime","e","proto","descriptors","validate_effect","rune","e.effect_orphan","e.effect_in_unowned_derived","e.effect_in_teardown","create_effect","type","sync","nodes_end","last","transitions","parent_effect","parent_last","push_effect","user_effect","m","context","legacy_pre_effect","token","ran","r1","render_effect","r2","legacy_pre_effect_reset","template_effect","thunks","deriveds","map","block","RENDER_EFFECT","branch","previously_destroying_effect","remove_dom","removed","end","remove","transition","stop","pause_effect","callback","pause_children","run_out_transitions","remaining","check","out","local","is_global","resume_effect","resume_children","in","lifecycle_outside_component","name","props","p","c","x","u","component","context_stack_item","component_effects","component_effect","PASSIVE_EVENTS","is_passive_event","listening_to_form_reset","without_reactive_context","listen_to_event_and_reset_event","element","event","handler","on_reset","addEventListener","__on_r","evt","Promise","resolve","then","defaultPrevented","elements","capture","all_registered_events","root_event_handles","event_name","dom","passive","options","target_handler","handle_event_propagation","cancelBubble","startsWith","create_event","body","removeEventListener","delegate","events","handler_element","owner_document","ownerDocument","path","composedPath","current_target","path_idx","handled_at","__root","at_idx","handler_idx","throw_error","other_errors","parent_element","assignedSlot","parentNode","host","delegated","apply","currentTarget","create_fragment_from_html","html","elem","createElement","innerHTML","content","assign_nodes","start","template","is_fragment","use_import_node","has_start","clone","importNode","cloneNode","comment","frag","createDocumentFragment","createComment","anchor","append","before","should_intro","set_text","text","str","__t","nodeValue","document_listeners","mounted_components","WeakMap","if_block","root_index","hydrate_index","consequent_effect","alternate_effect","condition","has_branch","set_branch","flag","update_branch","new_condition","current_each_item","each","get_collection","get_key","render_fn","fallback_fn","items","appendChild","fallback","was_empty","each_array","collection","array","seen","to_animate","item","is_animated","should_update","matched","stashed","measure","update_item","unfix","delete","j","move","link","k","create_item","to_destroy","destroy_length","controlled_anchor","fix","items_map","is_controlled","parent_node","textContent","pause_effects","reconcile","previous_each_item","dest","next_node","r","t","o","clsx","arguments","_clsx","whitespace","set_class","is_html","hash","prev_classes","next_classes","__className","next_class_name","directives","classname","len","substring","to_class","removeAttribute","className","is_present","classList","toggle","set_style","prev_styles","next_styles","__style","next_style_attr","String","to_style","style","cssText","IS_CUSTOM_ELEMENT","IS_HTML","set_value","attributes","get_attributes","nodeName","set_attribute","attribute","skip_warning","setters","setters_cache","element_proto","Element","get_setters","setAttribute","__attributes","namespaceURI","raf","tick","now","performance","run_tasks","forEach","task","size","loop","promise","fulfill","abort","dispatch_event","dispatchEvent","CustomEvent","css_property_to_camelcase","parts","split","slice","word","toUpperCase","join","css_to_keyframe","css","keyframe","part","property","trim","linear","get_fn","get_params","current_options","intro","outro","is_intro","is_outro","direction","inert","overflow","get_options","reset","animate","counterpart","t2","on_finish","aborted","deactivate","duration","delay","easing","keyframes","styles","get_t","animation","onfinish","t1","delta","Math","abs","needs_overflow_hidden","ceil","time","playState","fill","cancel","is_numberlike_input","input","to_number","init","callbacks","changed","observe_all","fns","onMount","cleanup","subscribe_to_store","store","invalidate","unsub","subscribe","unsubscribe","subscriber_queue","subscribers","new_value","run_queue","subscriber","update","is_store_binding","IS_UNMOUNTED","store_get","store_name","stores","entry","is_synchronous_callback","get_store","setup_stores","spread_props_handler","desc","keys","has_destroyed_component_ctx","current_value","prop_value","bindable","lazy","is_store_sub","previous_is_store_binding","capture_store_binding","getter","is_entry_props","setter","fallback_value","fallback_dirty","fallback_used","get_fallback","e.props_invalid_value","derived_getter","legacy_parent","$$legacy","mutation","from_child","inner_current_value","parent_value","child_value","cubic_out","split_css_unit","match","parseFloat","fade","getComputedStyle","opacity","fly","y","target_opacity","transform","od","x_value","x_unit","y_value","y_unit","cubicOut","flip","to","params","sqrt","ox","oy","transformOrigin","clientWidth","clientHeight","zoom","get_zoom","sx","width","sy","height","fx","left","fy","top","tx","ty","dx","dy","dsx","dsy","defaults","initial","pausable","dismissable","reversed","toast","_obj","obj","msg","opts","param","conf","theme","classes","id","found","max","idx","findIndex","_init","createToast","is_date","toString","get_interpolator","bi","an","interpolators","unlisten","$.prop","$$props","$.mutable_state","$.get","paused","cprops","progress","target_value","previous_task","started","interpolate","elapsed","tweened","close","ev","autoclose","$progress","pause","$.set","resume","kind","hidden","onpop","sendIdTo","get_component","src","$$anchor","$$component","get_value","$.html","$$render","consequent","alternate","$.event","div_2","KeyboardEvent","consequent_1","pe","div","$toast","$.each","ul","$.clsx","getCss","reduce","$.transition","li","original_styles","getBoundingClientRect","right","bottom","getAnimations","position","$.animation","handleGoToInputClick","matches","querySelectorAll","focus","app","Component","test","navigator","userAgent","element_prototype","node_prototype","Node","__click","__e","Text","init_operations","registered_events","event_handle","unmount","fulfil","component_root","anchor_node","$$events","removeChild","_mount","mount","getDataFromStorage","storage","assign","localStorage","updateCurrentData","currentData","$.proxy","handleNewDayClick","_a","getItem","setItem","handleActivityFormSubmit","floor","_b","entries","toLowerCase","removeItem","formatLogTimeCell","reconstructed","hours","getHours","minutes","getMinutes","formatDurationCell","previous","$.state","isActivityInputInFocus","sort","event_handler","$.derived","preventDefault","args","is_reset","defaultValue","selectionStart","selectionEnd","min","action","payload","destroy","handleFocus","select","handleBlur","$.set_text","text_2","$.index","$$item","$$array","consequent_2","dark","querySelector","light","localStorageTheme","systemSettingDark","matchMedia","currentThemeSetting","string","MediaQueryList","getTheme","newTheme","$.set_attribute"],"mappings":"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","x_google_ignoreList":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,55,56]}